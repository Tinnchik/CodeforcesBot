{"status": "OK", "result": {"problems": [{"contestId": 2108, "index": "C", "name": "Neo's Escape", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "graphs", "greedy", "implementation"]}, {"contestId": 2107, "index": "F2", "name": "Cycling (Hard Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "brute force", "data structures", "dp", "greedy"]}, {"contestId": 2107, "index": "F1", "name": "Cycling (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "brute force", "dp", "greedy"]}, {"contestId": 2107, "index": "C", "name": "Maximum Subarray Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "constructive algorithms", "dp", "implementation", "math"]}, {"contestId": 2106, "index": "F", "name": "Goblin", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "dsu", "greedy", "math"]}, {"contestId": 2106, "index": "D", "name": "Flower Boy", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "dp", "greedy", "two pointers"]}, {"contestId": 2104, "index": "F", "name": "Numbers and Strings", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "brute force", "dfs and similar", "dp", "implementation", "math"]}, {"contestId": 2104, "index": "E", "name": "Unpleasant Strings", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "dp", "greedy", "strings"]}, {"contestId": 2104, "index": "B", "name": "Move to the End", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"]}, {"contestId": 2103, "index": "F", "name": "Maximize Nor", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "data structures", "dp", "implementation", "sortings"]}, {"contestId": 2101, "index": "F", "name": "Shoo Shatters the Sunshine", "type": "PROGRAMMING", "points": 3750.0, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 2101, "index": "E", "name": "Kia Bakes a Cake", "type": "PROGRAMMING", "points": 3250.0, "tags": ["data structures", "dp", "greedy", "trees"]}, {"contestId": 2097, "index": "F", "name": "Lost Luggage", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp", "flows"]}, {"contestId": 2097, "index": "E", "name": "Clearing the Snowdrift", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dfs and similar", "dp", "greedy"]}, {"contestId": 2097, "index": "B", "name": "Baggage Claim", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "graphs", "implementation", "math", "trees"]}, {"contestId": 2096, "index": "H", "name": "Wonderful XOR Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["bitmasks", "combinatorics", "dp", "fft", "math"]}, {"contestId": 2096, "index": "C", "name": "Wonderful City", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "implementation"]}, {"contestId": 2091, "index": "G", "name": "Gleb and Boating", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "greedy", "math", "number theory", "shortest paths"]}, {"contestId": 2091, "index": "F", "name": "Igor and Mountain", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "brute force", "dp"]}, {"contestId": 2091, "index": "B", "name": "Team Training", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 2090, "index": "B", "name": "Pushing Balls", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 2089, "index": "C2", "name": "Key of Like (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 3100, "tags": ["dp", "math", "probabilities"]}, {"contestId": 2089, "index": "C1", "name": "Key of Like (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dp", "games", "math", "probabilities"]}, {"contestId": 2089, "index": "B2", "name": "Canteen (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 2300, "tags": ["binary search", "data structures", "dp", "flows", "greedy", "two pointers"]}, {"contestId": 2087, "index": "F", "name": "Weapon Upgrade", "type": "PROGRAMMING", "tags": ["*special", "*special", "dp"]}, {"contestId": 2087, "index": "E", "name": "Color the Arrows", "type": "PROGRAMMING", "tags": ["*special", "*special", "dp", "dp"]}, {"contestId": 2086, "index": "E", "name": "Zebra-like Numbers", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "greedy", "math"]}, {"contestId": 2086, "index": "D", "name": "Even String", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "combinatorics", "dp", "math", "strings"]}, {"contestId": 2086, "index": "C", "name": "Disappearing Permutation", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "implementation"]}, {"contestId": 2085, "index": "C", "name": "Serval and The Formula", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"]}, {"contestId": 2084, "index": "H", "name": "Turtle and Nediam 2", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["dp", "greedy"]}, {"contestId": 2084, "index": "G2", "name": "Wish Upon a Satellite (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3500, "tags": ["data structures", "dp"]}, {"contestId": 2084, "index": "G1", "name": "Wish Upon a Satellite (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "games"]}, {"contestId": 2084, "index": "E", "name": "Blossom", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "combinatorics", "dp", "implementation", "math", "two pointers"]}, {"contestId": 2081, "index": "E", "name": "Quantifier", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["combinatorics", "dp", "implementation"]}, {"contestId": 2081, "index": "A", "name": "Math Division", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["bitmasks", "dp", "math", "probabilities"]}, {"contestId": 2079, "index": "B", "name": "Arithmetic Exercise", "type": "PROGRAMMING", "rating": 2600, "tags": ["*special", "data structures", "dp", "greedy"]}, {"contestId": 2079, "index": "A", "name": "Alice, Bob, And Two Arrays", "type": "PROGRAMMING", "rating": 3300, "tags": ["*special", "data structures", "dp", "games"]}, {"contestId": 2078, "index": "D", "name": "Scammy Game Ad", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 2077, "index": "F", "name": "AND x OR", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["bitmasks", "constructive algorithms", "dp"]}, {"contestId": 2077, "index": "E", "name": "Another Folding Strip", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["combinatorics", "constructive algorithms", "data structures", "divide and conquer", "dp", "greedy", "math"]}, {"contestId": 2077, "index": "C", "name": "Binary Subsequence Value Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dp", "fft", "math", "matrices"]}, {"contestId": 2075, "index": "E", "name": "XOR Matrix", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "implementation", "math"]}, {"contestId": 2075, "index": "D", "name": "Equalization", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "brute force", "dp", "graphs", "math"]}, {"contestId": 2074, "index": "G", "name": "Game With Triangles: Season 2", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "geometry"]}, {"contestId": 2072, "index": "E", "name": "Do You Love Your Hero and His Two-Hit Multi-Target Attacks?", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "constructive algorithms", "dp", "geometry", "greedy", "math"]}, {"contestId": 2071, "index": "E", "name": "LeaFall", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "probabilities", "trees"]}, {"contestId": 2071, "index": "D2", "name": "Infinite Sequence (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["bitmasks", "brute force", "constructive algorithms", "data structures", "dp", "implementation", "math"]}, {"contestId": 2071, "index": "D1", "name": "Infinite Sequence (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["bitmasks", "brute force", "dp", "implementation", "math"]}, {"contestId": 2071, "index": "C", "name": "Trapmigiano Reggiano", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "greedy", "sortings", "trees"]}, {"contestId": 2070, "index": "F", "name": "Friends and Pizza", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks", "divide and conquer", "dp", "fft"]}, {"contestId": 2070, "index": "D", "name": "Tree Jumps", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 2069, "index": "C", "name": "Beautiful Sequence", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "dp", "greedy", "two pointers"]}, {"contestId": 2068, "index": "D", "name": "Morse Code", "type": "PROGRAMMING", "rating": 3100, "tags": ["dp", "sortings", "trees"]}, {"contestId": 2067, "index": "B", "name": "Two Large Bags", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "dp", "greedy", "sortings"]}, {"contestId": 2066, "index": "F", "name": "Curse", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 2066, "index": "D2", "name": "Club of Young Aircraft Builders (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2900, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 2066, "index": "D1", "name": "Club of Young Aircraft Builders (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 2066, "index": "C", "name": "Bitwise Slides", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 2066, "index": "B", "name": "White Magic", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"]}, {"contestId": 2065, "index": "H", "name": "Bro Thinks He's Him", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "data structures", "divide and conquer", "dp", "math", "matrices"]}, {"contestId": 2065, "index": "C1", "name": "Skibidus and Fanum Tax (easy version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 2064, "index": "F", "name": "We Be Summing", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["binary search", "data structures", "dp", "two pointers"]}, {"contestId": 2064, "index": "D", "name": "Eating", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp", "greedy", "trees", "two pointers"]}, {"contestId": 2064, "index": "C", "name": "Remove the Ends", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["brute force", "constructive algorithms", "dp", "greedy"]}, {"contestId": 2063, "index": "F1", "name": "Counting Is Not Fun (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "dsu", "graphs", "hashing", "implementation", "math", "trees"]}, {"contestId": 2063, "index": "E", "name": "Triangle Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 2063, "index": "C", "name": "Remove Exactly Two", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"]}, {"contestId": 2062, "index": "H", "name": "Galaxy Generator", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 2062, "index": "F", "name": "Traveling Salescat", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["constructive algorithms", "dp", "geometry", "graphs", "greedy", "math", "sortings"]}, {"contestId": 2062, "index": "D", "name": "Balanced Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 2061, "index": "I", "name": "Kevin and Nivek", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["divide and conquer", "dp"]}, {"contestId": 2061, "index": "F2", "name": "Kevin and Binary String (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp"]}, {"contestId": 2061, "index": "E", "name": "Kevin and And", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp", "greedy", "math", "sortings"]}, {"contestId": 2061, "index": "C", "name": "Kevin and Puzzle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["2-sat", "combinatorics", "dp"]}, {"contestId": 2060, "index": "G", "name": "Bugged Sort", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 2060, "index": "F", "name": "Multiplicative Arrays", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp", "number theory"]}, {"contestId": 2057, "index": "F", "name": "Formation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["binary search", "data structures", "dp", "sortings", "two pointers"]}, {"contestId": 2057, "index": "E2", "name": "Another Exercise on Graphs (hard version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "dfs and similar", "dp", "dsu", "graphs", "shortest paths", "sortings"]}, {"contestId": 2057, "index": "E1", "name": "Another Exercise on Graphs (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["binary search", "brute force", "dp", "dsu", "graphs", "shortest paths", "sortings"]}, {"contestId": 2056, "index": "F2", "name": "Xor of Median (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 3000, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "math"]}, {"contestId": 2056, "index": "F1", "name": "Xor of Median (Easy Version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "math"]}, {"contestId": 2056, "index": "E", "name": "Nested Segments", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "math"]}, {"contestId": 2056, "index": "D", "name": "Unique Median", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "brute force", "combinatorics", "data structures", "divide and conquer", "dp"]}, {"contestId": 2053, "index": "I2", "name": "Affectionate Arrays (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp", "graphs", "greedy", "math", "shortest paths", "two pointers"]}, {"contestId": 2053, "index": "I1", "name": "Affectionate Arrays (Easy Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 2053, "index": "F", "name": "Earnest Matrix Complement", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "math"]}, {"contestId": 2053, "index": "E", "name": "Resourceful Caterpillar Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "games", "graphs", "greedy", "trees"]}, {"contestId": 2053, "index": "C", "name": "Bewitching Stargazer", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["bitmasks", "divide and conquer", "dp", "math"]}, {"contestId": 2053, "index": "A", "name": "Tender Carpenter", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dp", "geometry", "greedy", "math"]}, {"contestId": 2052, "index": "M", "name": "Managing Cluster", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "graphs", "math", "trees"]}, {"contestId": 2052, "index": "F", "name": "Fix Flooded Floor", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "dp", "graphs"]}, {"contestId": 2051, "index": "G", "name": "Snakes", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "dp", "dsu", "graphs"]}, {"contestId": 2050, "index": "G", "name": "Tree Destruction", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 2050, "index": "E", "name": "Three Strings", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation", "strings"]}, {"contestId": 2050, "index": "C", "name": "Uninteresting Number", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "dp", "math"]}, {"contestId": 2049, "index": "D", "name": "Shift + Esc", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "dp"]}, {"contestId": 2048, "index": "H", "name": "Kevin and Strange Operation", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["data structures", "dp"]}, {"contestId": 2048, "index": "G", "name": "Kevin and Matrices", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "combinatorics", "dp", "math"]}, {"contestId": 2048, "index": "F", "name": "Kevin and Math Class", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "divide and conquer", "dp", "implementation", "math", "trees"]}, {"contestId": 2045, "index": "H", "name": "Missing Separators", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "sortings", "string suffix structures", "strings"]}, {"contestId": 2044, "index": "H", "name": "Hard Demon Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "data structures", "dp", "implementation", "math"]}, {"contestId": 2044, "index": "G2", "name": "Medium Demon Problem (hard version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"]}, {"contestId": 2043, "index": "F", "name": "Nim", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "games", "greedy", "implementation", "shortest paths"]}, {"contestId": 2043, "index": "C", "name": "Sums on Segments", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "data structures", "dp", "greedy", "math"]}, {"contestId": 2042, "index": "F", "name": "Two Subarrays", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "implementation", "matrices"]}, {"contestId": 2041, "index": "J", "name": "Bottle Arrangement", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "dp", "dsu", "greedy"]}, {"contestId": 2041, "index": "H", "name": "Sheet Music", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 2041, "index": "C", "name": "Cube", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "dfs and similar", "dp"]}, {"contestId": 2040, "index": "F", "name": "Number of Cubes", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 2040, "index": "E", "name": "Control of Randomness", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "dfs and similar", "dp", "graphs", "greedy", "math", "probabilities", "trees"]}, {"contestId": 2039, "index": "F2", "name": "Shohag Loves Counting (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3200, "tags": ["dp", "number theory"]}, {"contestId": 2039, "index": "F1", "name": "Shohag Loves Counting (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 2039, "index": "E", "name": "Shohag Loves Inversions", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["combinatorics", "dp", "implementation", "math"]}, {"contestId": 2038, "index": "M", "name": "Royal Flush", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "implementation"]}, {"contestId": 2038, "index": "L", "name": "Bridge Renovation", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "greedy", "math", "two pointers"]}, {"contestId": 2038, "index": "K", "name": "Grid Walk", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dp", "greedy", "math", "number theory"]}, {"contestId": 2038, "index": "D", "name": "Divide OR Conquer", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "bitmasks", "data structures", "dp", "implementation"]}, {"contestId": 2037, "index": "G", "name": "Natlan Exploring", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "combinatorics", "data structures", "dp", "math", "number theory"]}, {"contestId": 2037, "index": "E", "name": "Kachina's Favorite Binary String", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "interactive", "two pointers"]}, {"contestId": 2036, "index": "F", "name": "XORificator 3000", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dp", "number theory", "two pointers"]}, {"contestId": 2035, "index": "G2", "name": "Go Learn! (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["divide and conquer", "dp"]}, {"contestId": 2035, "index": "G1", "name": "Go Learn! (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["dp", "trees"]}, {"contestId": 2035, "index": "F", "name": "Tree Operations", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["binary search", "brute force", "dfs and similar", "dp", "trees"]}, {"contestId": 2034, "index": "H", "name": "Rayan vs. Rayaneh", "type": "PROGRAMMING", "points": 5000.0, "rating": 3300, "tags": ["brute force", "dfs and similar", "dp", "number theory"]}, {"contestId": 2034, "index": "F2", "name": "Khayyam's Royal Decree (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math", "sortings"]}, {"contestId": 2034, "index": "F1", "name": "Khayyam's Royal Decree (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["combinatorics", "dp", "math", "sortings"]}, {"contestId": 2033, "index": "G", "name": "Sakurako and Chefir", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 2033, "index": "D", "name": "Kousuke's Assignment", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "dp", "dsu", "greedy", "math"]}, {"contestId": 2033, "index": "C", "name": "Sakurako's Field Trip", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 2032, "index": "F", "name": "Peanuts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["combinatorics", "dp", "games", "math"]}, {"contestId": 2031, "index": "E", "name": "Penchick and Chloe's Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "greedy", "implementation", "math", "sortings", "trees"]}, {"contestId": 2031, "index": "D", "name": "Penchick and Desert Rabbit", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "two pointers"]}, {"contestId": 2031, "index": "A", "name": "Penchick and Modern Monument", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "dp", "greedy", "math"]}, {"contestId": 2030, "index": "F", "name": "Orangutan Approved Subarrays", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"]}, {"contestId": 2030, "index": "E", "name": "MEXimize the Score", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "data structures", "dp", "greedy", "implementation", "math"]}, {"contestId": 2029, "index": "H", "name": "Message Spread", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["bitmasks", "brute force", "combinatorics", "dp"]}, {"contestId": 2029, "index": "G", "name": "Balanced Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["data structures", "dp"]}, {"contestId": 2029, "index": "C", "name": "New Rating", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["binary search", "data structures", "dp", "greedy"]}, {"contestId": 2028, "index": "F", "name": "Alice's Adventures in Addition", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks", "brute force", "dp", "implementation"]}, {"contestId": 2028, "index": "E", "name": "Alice's Adventures in the Rabbit Hole", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "dp", "games", "greedy", "math", "probabilities", "trees"]}, {"contestId": 2028, "index": "D", "name": "Alice's Adventures in Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "dp", "graphs", "greedy", "implementation", "ternary search"]}, {"contestId": 2028, "index": "C", "name": "Alice's Adventures in Cutting Cake", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "two pointers"]}, {"contestId": 2027, "index": "E2", "name": "Bit Game (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 3100, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 2027, "index": "D2", "name": "The Endspeaker (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"]}, {"contestId": 2027, "index": "D1", "name": "The Endspeaker (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["binary search", "dp", "graphs", "greedy", "implementation", "two pointers"]}, {"contestId": 2027, "index": "C", "name": "Add Zeros", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "greedy"]}, {"contestId": 2026, "index": "F", "name": "Bermart Ice Cream", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "implementation", "trees"]}, {"contestId": 2026, "index": "D", "name": "Sums of Segments", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation", "math"]}, {"contestId": 2025, "index": "F", "name": "Choose Your Queries", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 2025, "index": "E", "name": "Card Game", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp", "fft", "greedy", "math"]}, {"contestId": 2025, "index": "D", "name": "Attribute Checks", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp", "implementation", "math", "two pointers"]}, {"contestId": 2025, "index": "B", "name": "Binomial Coefficients, Kind Of", "type": "PROGRAMMING", "rating": 1100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 2023, "index": "E", "name": "Tree of Life", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["dp", "greedy", "trees"]}, {"contestId": 2023, "index": "D", "name": "Many Games", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["brute force", "dp", "greedy", "math", "probabilities"]}, {"contestId": 2023, "index": "B", "name": "Skipping", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "dp", "graphs", "shortest paths"]}, {"contestId": 2022, "index": "D2", "name": "Asesino (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dp", "interactive"]}, {"contestId": 2022, "index": "C", "name": "Gerrymandering", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dp", "implementation"]}, {"contestId": 2021, "index": "E3", "name": "Digital Village (Extreme Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "greedy", "math", "trees"]}, {"contestId": 2021, "index": "E2", "name": "Digital Village (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2500, "tags": ["data structures", "dp", "dsu", "graphs", "math", "trees"]}, {"contestId": 2021, "index": "E1", "name": "Digital Village (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "dsu", "fft", "graphs", "greedy", "implementation", "math", "trees"]}, {"contestId": 2021, "index": "D", "name": "Boss, Thirsty", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 2020, "index": "F", "name": "Count Leaves", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["dp", "math", "number theory"]}, {"contestId": 2020, "index": "E", "name": "Expected Power", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "dp", "math", "probabilities"]}, {"contestId": 2020, "index": "D", "name": "Connect the Dots", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "dp", "dsu", "graphs", "math", "trees"]}, {"contestId": 2019, "index": "A", "name": "Max Plus Size", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 2018, "index": "F3", "name": "Speedbreaker Counting (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3100, "tags": ["dp", "greedy", "math"]}, {"contestId": 2018, "index": "F2", "name": "Speedbreaker Counting (Medium Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3000, "tags": ["dp", "greedy", "math"]}, {"contestId": 2018, "index": "F1", "name": "Speedbreaker Counting (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["combinatorics", "dp", "greedy", "math"]}, {"contestId": 2018, "index": "D", "name": "Max Plus Min Plus Size", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "dp", "dsu", "greedy", "implementation", "matrices", "sortings"]}, {"contestId": 2018, "index": "B", "name": "Speedbreaker", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"]}, {"contestId": 2014, "index": "F", "name": "Sheriff's Defense", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 2013, "index": "F1", "name": "Game in Tree (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["binary search", "brute force", "data structures", "dp", "games", "greedy", "implementation", "trees"]}, {"contestId": 2013, "index": "E", "name": "Prefix GCD", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "dp", "greedy", "math", "number theory"]}, {"contestId": 2009, "index": "G3", "name": "Yunli's Subarray Queries (extreme version)", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "implementation"]}, {"contestId": 2009, "index": "G2", "name": "Yunli's Subarray Queries (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 2008, "index": "E", "name": "Alternating String", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "strings"]}, {"contestId": 2008, "index": "D", "name": "Sakurako's Hobby", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "dsu", "graphs", "math"]}, {"contestId": 2005, "index": "E2", "name": "Subtangle Game (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "dp", "games", "greedy", "implementation"]}, {"contestId": 2005, "index": "E1", "name": "Subtangle Game (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "games", "greedy", "implementation"]}, {"contestId": 2005, "index": "C", "name": "Lazy Narek", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "implementation", "strings"]}, {"contestId": 2004, "index": "G", "name": "Substring Compression", "type": "PROGRAMMING", "rating": 3200, "tags": ["data structures", "dp", "matrices"]}, {"contestId": 2003, "index": "F", "name": "Turtle and Three Sequences", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["brute force", "data structures", "dp", "greedy", "math", "probabilities", "two pointers"]}, {"contestId": 2003, "index": "E2", "name": "Turtle and Inversions (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2700, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy", "math", "two pointers"]}, {"contestId": 2003, "index": "E1", "name": "Turtle and Inversions (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["brute force", "divide and conquer", "dp", "greedy", "math"]}, {"contestId": 2003, "index": "D2", "name": "Turtle and a MEX Problem (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "greedy", "implementation", "math"]}, {"contestId": 2002, "index": "F2", "name": "Court Blue (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2800, "tags": ["brute force", "dp", "math", "number theory"]}, {"contestId": 2002, "index": "F1", "name": "Court Blue (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "dfs and similar", "dp", "math", "number theory"]}, {"contestId": 2002, "index": "E", "name": "Cosmic Rays", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 2001, "index": "E2", "name": "Deterministic Heap (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 2001, "index": "E1", "name": "Deterministic Heap (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dp", "math", "trees"]}, {"contestId": 2000, "index": "F", "name": "Color Rows and Columns", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "greedy", "implementation", "math"]}, {"contestId": 1999, "index": "E", "name": "Triple Operations", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "implementation", "math"]}, {"contestId": 1998, "index": "D", "name": "Determine Winning Islands in Race", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures", "dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 1997, "index": "F", "name": "Chips on a Line", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "combinatorics", "dp", "greedy", "math"]}, {"contestId": 1997, "index": "D", "name": "Maximize the Root", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1996, "index": "C", "name": "Sort", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "sortings", "strings"]}, {"contestId": 1995, "index": "E2", "name": "Let Me Teach You a Lesson (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["data structures", "dp", "matrices", "two pointers"]}, {"contestId": 1995, "index": "E1", "name": "Let Me Teach You a Lesson (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["2-sat", "data structures", "dp", "matrices", "two pointers"]}, {"contestId": 1995, "index": "D", "name": "Cases", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["bitmasks", "brute force", "dp", "strings"]}, {"contestId": 1994, "index": "G", "name": "Minecraft", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["bitmasks", "brute force", "dp", "graphs", "math"]}, {"contestId": 1994, "index": "C", "name": "Hungry Games", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "dp", "two pointers"]}, {"contestId": 1993, "index": "E", "name": "Xor-Grid Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "dp", "implementation"]}, {"contestId": 1993, "index": "D", "name": "Med-imize", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 1992, "index": "G", "name": "Ultra-Meow", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1992, "index": "F", "name": "Valuable Cards", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dp", "greedy", "number theory", "two pointers"]}, {"contestId": 1992, "index": "D", "name": "Test of Love", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1991, "index": "H", "name": "Prime Split Game", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["bitmasks", "dp", "fft", "games", "math", "number theory"]}, {"contestId": 1990, "index": "F", "name": "Polygonal Segments", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy", "two pointers"]}, {"contestId": 1990, "index": "D", "name": "Grid Puzzle", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["bitmasks", "brute force", "dp", "greedy", "implementation"]}, {"contestId": 1989, "index": "E", "name": "Distance to Different", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1989, "index": "D", "name": "Smithing Skill", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "dp", "greedy", "math", "sortings", "two pointers"]}, {"contestId": 1988, "index": "F", "name": "Heartbeat", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1988, "index": "D", "name": "The Omnipotent Monster Killer", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "dfs and similar", "dp", "trees"]}, {"contestId": 1987, "index": "G2", "name": "Spinning Round (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["divide and conquer", "dp", "trees"]}, {"contestId": 1987, "index": "G1", "name": "Spinning Round (Easy Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["divide and conquer", "dp", "trees"]}, {"contestId": 1987, "index": "F2", "name": "Interesting Problem (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 2600, "tags": ["dp"]}, {"contestId": 1987, "index": "F1", "name": "Interesting Problem (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 1987, "index": "D", "name": "World is Mine", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "games"]}, {"contestId": 1987, "index": "C", "name": "Basil's Garden", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "greedy"]}, {"contestId": 1986, "index": "D", "name": "Mathematical Problem", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "greedy", "implementation", "math", "two pointers"]}, {"contestId": 1985, "index": "H2", "name": "Maximize the Largest Component (Hard Version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "dp", "dsu", "implementation"]}, {"contestId": 1984, "index": "H", "name": "Tower Capturing", "type": "PROGRAMMING", "points": 5000.0, "rating": 3300, "tags": ["combinatorics", "dp", "geometry"]}, {"contestId": 1984, "index": "F", "name": "Reconstruction", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["brute force", "dp", "math"]}, {"contestId": 1984, "index": "E", "name": "Shuffle", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "greedy", "trees"]}, {"contestId": 1984, "index": "C2", "name": "Magnitude (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["combinatorics", "dp", "greedy", "math"]}, {"contestId": 1984, "index": "C1", "name": "Magnitude (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["dp", "greedy", "math"]}, {"contestId": 1983, "index": "G", "name": "Your Loss", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["bitmasks", "brute force", "dp", "trees"]}, {"contestId": 1982, "index": "E", "name": "Number of k-good subarrays", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "divide and conquer", "dp", "math", "meet-in-the-middle"]}, {"contestId": 1982, "index": "C", "name": "Boring Day", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"]}, {"contestId": 1981, "index": "F", "name": "Turtle and Paths on a Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1979, "index": "D", "name": "Fixing a Binary String", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "hashing", "strings"]}, {"contestId": 1978, "index": "E", "name": "Computing Machine", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"]}, {"contestId": 1977, "index": "C", "name": "Nikita and LCM", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "greedy", "math", "number theory", "sortings"]}, {"contestId": 1976, "index": "F", "name": "Remove Bridges", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dfs and similar", "dp", "greedy", "sortings", "trees"]}, {"contestId": 1976, "index": "C", "name": "Job Interview", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "dp", "greedy", "implementation", "two pointers"]}, {"contestId": 1975, "index": "I", "name": "Mind Bloom", "type": "PROGRAMMING", "points": 6000.0, "rating": 3500, "tags": ["dp"]}, {"contestId": 1975, "index": "F", "name": "Set", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "brute force", "combinatorics", "dfs and similar", "divide and conquer", "dp", "math"]}, {"contestId": 1975, "index": "D", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "dfs and similar", "dp", "greedy", "shortest paths", "trees"]}, {"contestId": 1974, "index": "E", "name": "Money Buys Happiness", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 1973, "index": "F", "name": "Maximum GCD Sum Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["bitmasks", "brute force", "dp", "implementation", "number theory"]}, {"contestId": 1973, "index": "A", "name": "Chess For Three", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "dp", "implementation", "math"]}, {"contestId": 1971, "index": "D", "name": "Binary Cut", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "greedy", "implementation", "sortings", "strings"]}, {"contestId": 1970, "index": "G3", "name": "Min-Fund Prison (Hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1970, "index": "G2", "name": "Min-Fund Prison (Medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1970, "index": "E3", "name": "Trails (Hard)", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "matrices"]}, {"contestId": 1970, "index": "E2", "name": "Trails (Medium)", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "matrices"]}, {"contestId": 1970, "index": "E1", "name": "Trails (Easy)", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 1970, "index": "C3", "name": "Game on Tree (Hard)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "games", "trees"]}, {"contestId": 1970, "index": "C2", "name": "Game on Tree (Medium)", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dp", "games", "trees"]}, {"contestId": 1969, "index": "F", "name": "Card Pairing", "type": "PROGRAMMING", "rating": 3000, "tags": ["dp", "greedy", "hashing", "implementation"]}, {"contestId": 1969, "index": "E", "name": "Unique Array", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy"]}, {"contestId": 1969, "index": "C", "name": "Minimizing the Sum", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "implementation"]}, {"contestId": 1968, "index": "G2", "name": "Division + LCP (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "brute force", "data structures", "dp", "hashing", "math", "string suffix structures", "strings"]}, {"contestId": 1968, "index": "G1", "name": "Division + LCP (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dp", "hashing", "string suffix structures", "strings"]}, {"contestId": 1967, "index": "E2", "name": "Again Counting Arrays (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 3500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1967, "index": "E1", "name": "Again Counting Arrays (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1967, "index": "C", "name": "Fenwick Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "data structures", "dp", "math", "trees"]}, {"contestId": 1958, "index": "H", "name": "Composite Spells", "type": "PROGRAMMING", "rating": 2600, "tags": ["*special", "dp"]}, {"contestId": 1958, "index": "A", "name": "1-3-5", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special", "dp"]}, {"contestId": 1957, "index": "E", "name": "Carousel of Combinations", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math", "number theory"]}, {"contestId": 1957, "index": "D", "name": "A BIT of an Inequality", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dp", "math"]}, {"contestId": 1957, "index": "C", "name": "How Does the Rook Move?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1956, "index": "D", "name": "Nene and the Mex Operator", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "dp", "greedy", "implementation", "math"]}, {"contestId": 1955, "index": "H", "name": "The Most Reckless Defense", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "flows", "graph matchings", "shortest paths"]}, {"contestId": 1955, "index": "G", "name": "GCD on a grid", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dfs and similar", "dp", "implementation", "math", "number theory"]}, {"contestId": 1955, "index": "F", "name": "Unfair Game", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "games", "greedy", "math", "schedules"]}, {"contestId": 1954, "index": "F", "name": "Unique Strings", "type": "PROGRAMMING", "rating": 3100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1954, "index": "D", "name": "Colored Balls", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "dp", "math", "sortings"]}, {"contestId": 1951, "index": "H", "name": "Thanos Snap", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["binary search", "dp", "games", "greedy", "trees"]}, {"contestId": 1950, "index": "G", "name": "Shuffling Songs", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dfs and similar", "dp", "graphs", "hashing", "implementation", "strings"]}, {"contestId": 1950, "index": "D", "name": "Product of Binary Decimals", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "dp", "implementation", "number theory"]}, {"contestId": 1949, "index": "C", "name": "Annual Ants' Gathering", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1949, "index": "A", "name": "Grove", "type": "PROGRAMMING", "rating": 3300, "tags": ["brute force", "dfs and similar", "dp", "geometry", "probabilities"]}, {"contestId": 1948, "index": "C", "name": "Arrow Path", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 1948, "index": "B", "name": "Array Fix", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1946, "index": "F", "name": "Nobody is needed", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["2-sat", "data structures", "dfs and similar", "dp"]}, {"contestId": 1946, "index": "E", "name": "Girl Permutation", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 1946, "index": "C", "name": "Tree Cutting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "implementation", "trees"]}, {"contestId": 1946, "index": "B", "name": "Maximum Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["dp", "greedy", "math"]}, {"contestId": 1945, "index": "D", "name": "Seraphim the Owl", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy"]}, {"contestId": 1943, "index": "F", "name": "Minimum Hamming Distance", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["dp"]}, {"contestId": 1943, "index": "D2", "name": "Counting Is Fun (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "dp"]}, {"contestId": 1943, "index": "D1", "name": "Counting Is Fun (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math"]}, {"contestId": 1942, "index": "H", "name": "Farmer John's Favorite Intern", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["data structures", "dp", "flows", "trees"]}, {"contestId": 1942, "index": "G", "name": "Bessie and Cards", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1942, "index": "D", "name": "Learning to Paint", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1941, "index": "E", "name": "Rudolf and k Bridges", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures", "dp", "two pointers"]}, {"contestId": 1941, "index": "D", "name": "Rudolf and the Ball Game", "type": "PROGRAMMING", "rating": 1200, "tags": ["dfs and similar", "dp", "implementation"]}, {"contestId": 1941, "index": "C", "name": "Rudolf and the Ugly String", "type": "PROGRAMMING", "rating": 900, "tags": ["dp", "greedy", "strings"]}, {"contestId": 1941, "index": "B", "name": "Rudolf and 121", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "dp", "greedy", "math"]}, {"contestId": 1939, "index": "D", "name": "Big Persimmon", "type": "PROGRAMMING", "tags": ["*special", "dp", "games"]}, {"contestId": 1939, "index": "A", "name": "Draw Polygon Lines", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dp", "geometry", "interactive"]}, {"contestId": 1937, "index": "B", "name": "Binary Path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1935, "index": "C", "name": "Messenger in MAC", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp", "greedy", "sortings"]}, {"contestId": 1934, "index": "B", "name": "Yet Another Coin Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "dp", "greedy", "math"]}, {"contestId": 1933, "index": "F", "name": "Turtle Mission: Robot and the Earthquake", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 1932, "index": "F", "name": "Feed Cats", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp", "sortings"]}, {"contestId": 1932, "index": "A", "name": "Thorns and Coins", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1930, "index": "G", "name": "Prefix Max Set Counting", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1930, "index": "E", "name": "2..3...4.... Wonderful! Wonderful!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1930, "index": "D2", "name": "Sum over all Substrings (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["bitmasks", "divide and conquer", "dp", "dsu", "greedy", "implementation", "strings"]}, {"contestId": 1930, "index": "D1", "name": "Sum over all Substrings (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "dp", "greedy", "strings"]}, {"contestId": 1929, "index": "E", "name": "Sasha and the Happy Tree Cutting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"]}, {"contestId": 1929, "index": "D", "name": "Sasha and a Walk in the City", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "dp", "math", "trees"]}, {"contestId": 1928, "index": "E", "name": "Modular Sequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "greedy", "math", "number theory"]}, {"contestId": 1927, "index": "G", "name": "Paint Charges", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "greedy", "math"]}, {"contestId": 1927, "index": "D", "name": "Find the Different Ones!", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "two pointers"]}, {"contestId": 1926, "index": "G", "name": "Vlad and Trouble at MIT", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "flows", "graphs", "greedy", "implementation", "trees"]}, {"contestId": 1926, "index": "F", "name": "Vlad and Avoiding X", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "implementation"]}, {"contestId": 1926, "index": "E", "name": "Vlad and an Odd Ordering", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "bitmasks", "data structures", "dp", "implementation", "math", "number theory"]}, {"contestId": 1926, "index": "C", "name": "Vlad and a Sum of Sum of Digits", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "implementation"]}, {"contestId": 1925, "index": "D", "name": "Good Trip", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1924, "index": "F", "name": "Anti-Proxy Attendance", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "interactive", "ternary search"]}, {"contestId": 1924, "index": "D", "name": "Balanced Subsequences", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1924, "index": "A", "name": "Did We Get Everything Covered?", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "dp", "greedy", "shortest paths", "strings"]}, {"contestId": 1923, "index": "E", "name": "Count Paths", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"]}, {"contestId": 1923, "index": "B", "name": "Monsters Attack!", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1922, "index": "F", "name": "Replace on Segment", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "graph matchings"]}, {"contestId": 1921, "index": "G", "name": "Mischievous Shooter", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "data structures", "divide and conquer", "dp", "implementation"]}, {"contestId": 1921, "index": "F", "name": "Sum of Progression", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "dp", "implementation", "math"]}, {"contestId": 1920, "index": "E", "name": "Counting Binary Strings", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1919, "index": "F2", "name": "Wine Factory (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["data structures", "dp", "flows", "greedy", "matrices"]}, {"contestId": 1919, "index": "E", "name": "Counting Prefixes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["combinatorics", "constructive algorithms", "dp", "implementation", "math"]}, {"contestId": 1919, "index": "C", "name": "Grouping Increases", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1918, "index": "D", "name": "Blocking Elements", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation", "two pointers"]}, {"contestId": 1917, "index": "F", "name": "Construct Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dp", "trees"]}, {"contestId": 1917, "index": "D", "name": "Yet Another Inversions Problem", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dp", "implementation", "math", "number theory"]}, {"contestId": 1917, "index": "B", "name": "Erase First or Second Letter", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "combinatorics", "data structures", "dp", "strings"]}, {"contestId": 1916, "index": "H2", "name": "Matrix Rank (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "matrices", "string suffix structures"]}, {"contestId": 1916, "index": "H1", "name": "Matrix Rank (Easy Version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["brute force", "combinatorics", "dp", "math", "matrices"]}, {"contestId": 1916, "index": "G", "name": "Optimizations From Chelsu", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["divide and conquer", "dp", "number theory", "trees"]}, {"contestId": 1914, "index": "G2", "name": "Light Bulbs (Hard Version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "graphs", "hashing"]}, {"contestId": 1914, "index": "G1", "name": "Light Bulbs (Easy Version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "dsu", "graphs", "math", "trees"]}, {"contestId": 1914, "index": "F", "name": "Programming Competition", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"]}, {"contestId": 1914, "index": "D", "name": "Three Activities", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1913, "index": "D", "name": "Array Collapse", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "trees"]}, {"contestId": 1912, "index": "K", "name": "Kim's Quest", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 1910, "index": "I", "name": "Inverse Problem", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "combinatorics", "dp"]}, {"contestId": 1910, "index": "E", "name": "Maximum Sum Subarrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "dp"]}, {"contestId": 1909, "index": "I", "name": "Short Permutation Problem", "type": "PROGRAMMING", "points": 6000.0, "rating": 1900, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1909, "index": "F2", "name": "Small Permutation Problem (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1909, "index": "F1", "name": "Small Permutation Problem (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "combinatorics", "dp", "math"]}, {"contestId": 1906, "index": "J", "name": "Count BFS Graph", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp"]}, {"contestId": 1906, "index": "H", "name": "Twin Friends", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp"]}, {"contestId": 1906, "index": "E", "name": "Merge Not Sort", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "dp"]}, {"contestId": 1905, "index": "E", "name": "One-X", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 1904, "index": "B", "name": "Collecting Game", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["binary search", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1903, "index": "D2", "name": "Maximum And Queries (hard version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "divide and conquer", "dp", "greedy"]}, {"contestId": 1902, "index": "D", "name": "Robot Queries", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation"]}, {"contestId": 1901, "index": "E", "name": "Compressed Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"]}, {"contestId": 1901, "index": "D", "name": "Yet Another Monster Fight", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "dp", "greedy", "implementation", "math"]}, {"contestId": 1900, "index": "E", "name": "Transitive Graph", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation"]}, {"contestId": 1900, "index": "D", "name": "Small GCD", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp", "math", "number theory"]}, {"contestId": 1900, "index": "C", "name": "Anji's Binary Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1900, "index": "B", "name": "Laura and Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["dp", "math"]}, {"contestId": 1899, "index": "C", "name": "Yarik and Array", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1896, "index": "H2", "name": "Cyclic Hamming (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 3500, "tags": ["brute force", "dp", "fft", "math", "number theory"]}, {"contestId": 1896, "index": "H1", "name": "Cyclic Hamming (Easy Version)", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["brute force", "divide and conquer", "dp", "fft", "math", "number theory"]}, {"contestId": 1895, "index": "G", "name": "Two Characters, Two Colors", "type": "PROGRAMMING", "rating": 3100, "tags": ["binary search", "data structures", "dp", "flows", "greedy"]}, {"contestId": 1895, "index": "F", "name": "Fancy Arrays", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "math", "matrices"]}, {"contestId": 1895, "index": "E", "name": "Infinite Card Game", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "dsu", "games", "graphs", "greedy", "sortings", "two pointers"]}, {"contestId": 1895, "index": "C", "name": "Torn Lucky Ticket", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "hashing", "implementation", "math"]}, {"contestId": 1893, "index": "E", "name": "Cacti Symphony", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["combinatorics", "dfs and similar", "dp", "graphs"]}, {"contestId": 1889, "index": "F", "name": "Doremy's Average Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "dp", "greedy", "trees"]}, {"contestId": 1889, "index": "C2", "name": "Doremy's Drying Plan (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["data structures", "dp"]}, {"contestId": 1889, "index": "C1", "name": "Doremy's Drying Plan (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"]}, {"contestId": 1886, "index": "E", "name": "I Wanna be the Team Leader", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math", "sortings", "two pointers"]}, {"contestId": 1884, "index": "D", "name": "Counting Rhyme", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "math", "number theory"]}, {"contestId": 1884, "index": "C", "name": "Medium Design", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"]}, {"contestId": 1883, "index": "C", "name": "Raspberries", "type": "PROGRAMMING", "points": 1500.0, "rating": 1000, "tags": ["dp", "math"]}, {"contestId": 1882, "index": "D", "name": "Tree XOR", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1881, "index": "F", "name": "Minimum Maximum Distance", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees"]}, {"contestId": 1881, "index": "E", "name": "Block Sequence", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp"]}, {"contestId": 1879, "index": "D", "name": "Sum of XOR Functions", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "combinatorics", "divide and conquer", "dp", "math"]}, {"contestId": 1879, "index": "C", "name": "Make it Alternating", "type": "PROGRAMMING", "rating": 1300, "tags": ["combinatorics", "dp", "greedy"]}, {"contestId": 1876, "index": "E", "name": "Ball-Stackable", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "trees"]}, {"contestId": 1875, "index": "D", "name": "Jellyfish and Mex", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dp"]}, {"contestId": 1874, "index": "G", "name": "Jellyfish and Inscryption", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["dp"]}, {"contestId": 1874, "index": "F", "name": "Jellyfish and OEIS", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp"]}, {"contestId": 1874, "index": "E", "name": "Jellyfish and Hack", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "math"]}, {"contestId": 1874, "index": "D", "name": "Jellyfish and Miku", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["divide and conquer", "dp", "math", "probabilities"]}, {"contestId": 1874, "index": "C", "name": "Jellyfish and EVA", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dp", "graphs", "greedy", "math", "probabilities"]}, {"contestId": 1874, "index": "B", "name": "Jellyfish and Math", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 1872, "index": "E", "name": "Data Structures Fan", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "bitmasks", "data structures", "dp"]}, {"contestId": 1870, "index": "E", "name": "Another MEX Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["bitmasks", "brute force", "dp", "shortest paths"]}, {"contestId": 1870, "index": "C", "name": "Colorful Table", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["binary search", "data structures", "dp", "implementation", "math", "two pointers"]}, {"contestId": 1868, "index": "E", "name": "Min-Sum-Max", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1868, "index": "C", "name": "Travel Plan", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["combinatorics", "dp", "implementation", "math", "trees"]}, {"contestId": 1868, "index": "B2", "name": "Candy Party (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "implementation", "math"]}, {"contestId": 1866, "index": "M", "name": "Mighty Rock Tower", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1866, "index": "K", "name": "Keen Tree Calculation", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "geometry", "graphs", "implementation", "trees"]}, {"contestId": 1866, "index": "J", "name": "Jackets and Packets", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp"]}, {"contestId": 1866, "index": "I", "name": "Imagination Castle", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "games", "two pointers"]}, {"contestId": 1866, "index": "G", "name": "Grouped Carriages", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "dp", "flows", "greedy"]}, {"contestId": 1866, "index": "E", "name": "Elevators of Tamem", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp"]}, {"contestId": 1866, "index": "D", "name": "Digital Wallet", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy"]}, {"contestId": 1866, "index": "C", "name": "Completely Searching for Inversions", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "graphs"]}, {"contestId": 1864, "index": "H", "name": "Asterism Stream", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["dp", "math", "matrices"]}, {"contestId": 1864, "index": "D", "name": "Matrix Cascade", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math"]}, {"contestId": 1863, "index": "I", "name": "Redundant Routes", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "trees"]}, {"contestId": 1863, "index": "H", "name": "Goldberg Machine 3", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp", "trees"]}, {"contestId": 1863, "index": "G", "name": "Swaps", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["combinatorics", "dp", "graphs", "math"]}, {"contestId": 1863, "index": "F", "name": "Divide, XOR, and Conquer", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 1863, "index": "E", "name": "Speedrun", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "math", "sortings", "two pointers"]}, {"contestId": 1862, "index": "F", "name": "Magic Will Save the World", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "bitmasks", "brute force", "dp"]}, {"contestId": 1862, "index": "A", "name": "Gift Carpet", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "implementation", "strings"]}, {"contestId": 1861, "index": "E", "name": "Non-Intersecting Subpermutations", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "dp", "implementation", "math"]}, {"contestId": 1861, "index": "D", "name": "Sorting By Multiplication", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "greedy"]}, {"contestId": 1861, "index": "B", "name": "Two Binary Strings", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1860, "index": "D", "name": "Balanced String", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"]}, {"contestId": 1860, "index": "C", "name": "Game on Permutation", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "dp", "games", "greedy"]}, {"contestId": 1859, "index": "E", "name": "Maximum Monogonosity", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["brute force", "dp", "math"]}, {"contestId": 1859, "index": "D", "name": "Andrey and Escape from Capygrad", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "data structures", "dp", "dsu", "greedy", "sortings"]}, {"contestId": 1859, "index": "C", "name": "Another Permutation Problem", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["brute force", "dp", "greedy", "math"]}, {"contestId": 1858, "index": "D", "name": "Trees and Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "dp", "greedy", "two pointers"]}, {"contestId": 1858, "index": "B", "name": "The Walkway", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "dp", "greedy", "math", "number theory"]}, {"contestId": 1856, "index": "E2", "name": "PermuTree (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["bitmasks", "dfs and similar", "dp", "fft", "greedy", "implementation", "math", "trees"]}, {"contestId": 1856, "index": "E1", "name": "PermuTree (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1856, "index": "C", "name": "To Become Max", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "dp"]}, {"contestId": 1854, "index": "F", "name": "Mark and Spaceship", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["brute force", "dp"]}, {"contestId": 1854, "index": "E", "name": "Game Bundles", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["brute force", "constructive algorithms", "dp", "greedy", "math"]}, {"contestId": 1854, "index": "C", "name": "Expected Destruction", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1854, "index": "B", "name": "Earn or Unlock", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 1852, "index": "F", "name": "Panda Meetups", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "dp", "flows"]}, {"contestId": 1852, "index": "D", "name": "Miriany and Matchstick", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1852, "index": "C", "name": "Ina of the Mountain", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["data structures", "dp", "greedy", "math"]}, {"contestId": 1851, "index": "E", "name": "Nastya and Potions", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "sortings"]}, {"contestId": 1849, "index": "E", "name": "Max to the Right of Min", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "two pointers"]}, {"contestId": 1848, "index": "F", "name": "Vika and Wiki", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["binary search", "bitmasks", "combinatorics", "divide and conquer", "dp", "math"]}, {"contestId": 1847, "index": "C", "name": "Vampiric Powers, anyone?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["bitmasks", "brute force", "dp", "greedy"]}, {"contestId": 1846, "index": "G", "name": "Rudolf and CodeVid-23", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 1846, "index": "C", "name": "Rudolf and the Another Competition", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings"]}, {"contestId": 1845, "index": "F", "name": "Swimmers in the Pool", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "fft", "math", "number theory"]}, {"contestId": 1845, "index": "E", "name": "Boxes and Balls", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "implementation", "math"]}, {"contestId": 1845, "index": "D", "name": "Rating System", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "math", "two pointers"]}, {"contestId": 1845, "index": "C", "name": "Strong Password", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "dp", "greedy", "strings"]}, {"contestId": 1844, "index": "H", "name": "Multiple of Three Cycles", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["combinatorics", "data structures", "dp", "dsu", "math"]}, {"contestId": 1844, "index": "C", "name": "Particles", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["dp", "greedy", "implementation", "math"]}, {"contestId": 1843, "index": "F2", "name": "Omsk Metro (hard version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "math", "trees"]}, {"contestId": 1843, "index": "F1", "name": "Omsk Metro (simple version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"]}, {"contestId": 1843, "index": "D", "name": "Apple Tree", "type": "PROGRAMMING", "rating": 1200, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 1842, "index": "I", "name": "Tenzing and Necklace", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["divide and conquer", "dp", "greedy"]}, {"contestId": 1842, "index": "H", "name": "Tenzing and Random Real Numbers", "type": "PROGRAMMING", "points": 3750.0, "rating": 3000, "tags": ["bitmasks", "dp", "graphs", "math", "probabilities"]}, {"contestId": 1842, "index": "G", "name": "Tenzing and Random Operations", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1842, "index": "E", "name": "Tenzing and Triangle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dp", "geometry", "greedy", "math"]}, {"contestId": 1842, "index": "C", "name": "Tenzing and Balls", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp"]}, {"contestId": 1841, "index": "C", "name": "Ranom Numbers", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "dp", "greedy", "math", "strings"]}, {"contestId": 1840, "index": "F", "name": "Railguns", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dfs and similar", "dp", "graphs"]}, {"contestId": 1839, "index": "E", "name": "Decreasing Game", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "interactive"]}, {"contestId": 1839, "index": "D", "name": "Ball Sorting", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["data structures", "dp", "sortings"]}, {"contestId": 1838, "index": "E", "name": "Count Supersequences", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1835, "index": "E", "name": "Old Mobile", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 1833, "index": "G", "name": "Ksyusha and Chinchilla", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"]}, {"contestId": 1832, "index": "F", "name": "Zombies", "type": "PROGRAMMING", "rating": 3200, "tags": ["binary search", "dp"]}, {"contestId": 1832, "index": "E", "name": "Combinatorics Problem", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "combinatorics", "dp"]}, {"contestId": 1830, "index": "F", "name": "The Third Grace", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["data structures", "dp"]}, {"contestId": 1830, "index": "D", "name": "Mex Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "dp", "trees"]}, {"contestId": 1830, "index": "A", "name": "Copil Copac Draws Trees", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1829, "index": "H", "name": "Don't Blame Me", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 1829, "index": "G", "name": "Hits Different", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "implementation", "math"]}, {"contestId": 1829, "index": "D", "name": "Gold Rush", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "dfs and similar", "dp", "implementation"]}, {"contestId": 1827, "index": "C", "name": "Palindrome Partition", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["binary search", "brute force", "data structures", "dp", "hashing", "strings"]}, {"contestId": 1827, "index": "B2", "name": "Range Sorting (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy"]}, {"contestId": 1827, "index": "B1", "name": "Range Sorting (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["binary search", "dp", "dsu", "greedy", "trees", "two pointers"]}, {"contestId": 1826, "index": "E", "name": "Walk the Runway", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"]}, {"contestId": 1826, "index": "D", "name": "Running Miles", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1824, "index": "C", "name": "LuoTianyi and XOR-Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "dsu", "greedy", "trees"]}, {"contestId": 1823, "index": "F", "name": "Random Walk", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "graphs", "math", "probabilities", "trees"]}, {"contestId": 1823, "index": "E", "name": "Removing Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "dp", "games", "graphs", "math"]}, {"contestId": 1822, "index": "F", "name": "Gardening Friends", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1821, "index": "F", "name": "Timber", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1821, "index": "E", "name": "Rearrange Brackets", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dp", "greedy", "sortings", "strings"]}, {"contestId": 1819, "index": "F", "name": "Willy-nilly, Crack, Into Release!", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "dp"]}, {"contestId": 1819, "index": "D", "name": "Misha and Apples", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["brute force", "data structures", "dp", "two pointers"]}, {"contestId": 1819, "index": "C", "name": "The Fox and the Complete Tree Traversal", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "implementation", "math", "trees"]}, {"contestId": 1815, "index": "E", "name": "Bosco and Particle", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["dp", "math", "number theory", "strings"]}, {"contestId": 1815, "index": "D", "name": "XOR Counting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 1814, "index": "E", "name": "Chain Chips", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "matrices"]}, {"contestId": 1811, "index": "G2", "name": "Vlad and the Nice Paths (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "combinatorics", "data structures", "dp", "math", "two pointers"]}, {"contestId": 1811, "index": "G1", "name": "Vlad and the Nice Paths (easy version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1811, "index": "E", "name": "Living Sequence", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "dp", "math", "number theory"]}, {"contestId": 1810, "index": "G", "name": "The Maximum Prefix", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp"]}, {"contestId": 1809, "index": "G", "name": "Prediction", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1809, "index": "E", "name": "Two Tanks", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dp", "implementation", "math"]}, {"contestId": 1808, "index": "E3", "name": "Minibuses on Venus (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2800, "tags": ["brute force", "combinatorics", "dp", "math"]}, {"contestId": 1808, "index": "E2", "name": "Minibuses on Venus (medium version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["combinatorics", "divide and conquer", "dp", "matrices"]}, {"contestId": 1808, "index": "E1", "name": "Minibuses on Venus (easy version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["combinatorics", "divide and conquer", "dp"]}, {"contestId": 1808, "index": "C", "name": "Unlucky Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1807, "index": "G2", "name": "Subsequence Addition (Hard Version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["bitmasks", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1807, "index": "G1", "name": "Subsequence Addition (Easy Version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1806, "index": "D", "name": "DSU Master", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["combinatorics", "dp", "dsu", "math"]}, {"contestId": 1805, "index": "E", "name": "There Should Be a Lot of Maximums", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "trees", "two pointers"]}, {"contestId": 1805, "index": "D", "name": "A Wide, Wide Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 1804, "index": "H", "name": "Code Lock", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["bitmasks", "dp"]}, {"contestId": 1804, "index": "E", "name": "Routing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs"]}, {"contestId": 1804, "index": "D", "name": "Accommodation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1801, "index": "F", "name": "Another n-dimensional chocolate bar", "type": "PROGRAMMING", "points": 3500.0, "rating": 2700, "tags": ["dp", "math", "meet-in-the-middle", "number theory"]}, {"contestId": 1801, "index": "D", "name": "The way home", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "data structures", "dp", "graphs", "greedy", "shortest paths", "sortings"]}, {"contestId": 1801, "index": "C", "name": "Music Festival", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "greedy", "sortings"]}, {"contestId": 1799, "index": "H", "name": "Tree Cutting", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["bitmasks", "dfs and similar", "dp"]}, {"contestId": 1799, "index": "G", "name": "Count Voting", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1799, "index": "F", "name": "Halve or Subtract", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["binary search", "brute force", "dp", "greedy", "sortings"]}, {"contestId": 1799, "index": "D2", "name": "Hot Start Up (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["data structures", "dp"]}, {"contestId": 1799, "index": "D1", "name": "Hot Start Up (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 1798, "index": "F", "name": "Gifts from Grandfather Ahmed", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "math", "number theory"]}, {"contestId": 1798, "index": "E", "name": "Multitest Generator", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "dp"]}, {"contestId": 1797, "index": "D", "name": "Li Hua and Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation", "trees"]}, {"contestId": 1796, "index": "E", "name": "Colored Subgraphs", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "games", "greedy", "trees"]}, {"contestId": 1796, "index": "D", "name": "Maximum Subarray", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy", "two pointers"]}, {"contestId": 1795, "index": "E", "name": "Explosions?", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "math"]}, {"contestId": 1794, "index": "E", "name": "Labeling the Tree with Distances", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dp", "greedy", "hashing", "implementation", "trees"]}, {"contestId": 1794, "index": "D", "name": "Counting Factorizations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "divide and conquer", "dp", "math", "number theory"]}, {"contestId": 1793, "index": "E", "name": "Velepin and Marketing", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1793, "index": "D", "name": "Moscow Gorillas", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "dp", "greedy", "implementation", "math", "two pointers"]}, {"contestId": 1792, "index": "F2", "name": "Graph Coloring (hard version)", "type": "PROGRAMMING", "rating": 2900, "tags": ["brute force", "combinatorics", "divide and conquer", "dp", "fft", "graphs"]}, {"contestId": 1792, "index": "F1", "name": "Graph Coloring (easy version)", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp", "graphs"]}, {"contestId": 1792, "index": "E", "name": "Divisors and Table", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "dfs and similar", "dp", "number theory"]}, {"contestId": 1791, "index": "E", "name": "Negatives and Positives", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1789, "index": "F", "name": "Serval and Brain Power", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["bitmasks", "brute force", "dp", "greedy", "implementation", "strings"]}, {"contestId": 1789, "index": "E", "name": "Serval and Music Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "dp", "implementation", "math", "number theory"]}, {"contestId": 1789, "index": "C", "name": "Serval and Toxel's Arrays", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["combinatorics", "dp", "implementation", "math"]}, {"contestId": 1788, "index": "E", "name": "Sum Over Zero", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dfs and similar", "dp"]}, {"contestId": 1787, "index": "H", "name": "Codeforces Scoreboard", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["binary search", "data structures", "dp", "geometry"]}, {"contestId": 1787, "index": "C", "name": "Remove the Bracket", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["dp", "greedy", "math"]}, {"contestId": 1784, "index": "E", "name": "Infinite Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["brute force", "combinatorics", "dp", "games", "probabilities"]}, {"contestId": 1784, "index": "D", "name": "Wooden Spoon", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dp"]}, {"contestId": 1783, "index": "D", "name": "Different Arrays", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 1781, "index": "F", "name": "Bracket Insertion", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "trees"]}, {"contestId": 1780, "index": "F", "name": "Three Chairs", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "data structures", "dp", "number theory", "sortings"]}, {"contestId": 1779, "index": "F", "name": "Xorcerer's Stones", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dp", "trees"]}, {"contestId": 1779, "index": "D", "name": "Boris and His Amazing Haircut", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "dp", "dsu", "greedy", "sortings"]}, {"contestId": 1778, "index": "F", "name": "Maximizing Root", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "math", "number theory", "trees"]}, {"contestId": 1778, "index": "D", "name": "Flexible String Revisit", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1777, "index": "D", "name": "Score of a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "math", "probabilities", "trees"]}, {"contestId": 1776, "index": "M", "name": "Parmigiana With Seafood", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "dp", "greedy", "trees"]}, {"contestId": 1776, "index": "K", "name": "Uniform Chemistry", "type": "PROGRAMMING", "rating": 3200, "tags": ["dp", "math"]}, {"contestId": 1776, "index": "E", "name": "Crossing the Railways", "type": "PROGRAMMING", "rating": 3500, "tags": ["data structures", "dp"]}, {"contestId": 1776, "index": "B", "name": "Vittorio Plays with LEGO Bricks", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "geometry"]}, {"contestId": 1775, "index": "F", "name": "Laboratory on Pluto", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["constructive algorithms", "dp", "greedy", "math"]}, {"contestId": 1774, "index": "G", "name": "Segment Covering", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "dp", "trees"]}, {"contestId": 1774, "index": "E", "name": "Two Chess Pieces", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1774, "index": "C", "name": "Ice and Fire", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1773, "index": "L", "name": "Lisa's Sequences", "type": "PROGRAMMING", "rating": 3500, "tags": ["dp"]}, {"contestId": 1773, "index": "G", "name": "Game of Questions", "type": "PROGRAMMING", "rating": 2800, "tags": ["bitmasks", "combinatorics", "dp", "fft", "math", "probabilities"]}, {"contestId": 1771, "index": "E", "name": "Hossam and a Letter", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["brute force", "dp", "implementation", "two pointers"]}, {"contestId": 1771, "index": "D", "name": "Hossam and (sub-)palindromic tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["brute force", "data structures", "dfs and similar", "dp", "strings", "trees"]}, {"contestId": 1771, "index": "B", "name": "Hossam and Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "dp", "two pointers"]}, {"contestId": 1770, "index": "F", "name": "Koxia and Sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"]}, {"contestId": 1770, "index": "E", "name": "Koxia and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "math", "probabilities", "trees"]}, {"contestId": 1769, "index": "D1", "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 I", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "brute force", "dp"]}, {"contestId": 1769, "index": "C2", "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 II", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "dp"]}, {"contestId": 1769, "index": "C1", "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 I", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "brute force", "dp", "greedy"]}, {"contestId": 1768, "index": "F", "name": "Wonderful Jump", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["dp", "greedy"]}, {"contestId": 1767, "index": "E", "name": "Algebra Flash", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "brute force", "dp", "graphs", "math", "meet-in-the-middle", "trees"]}, {"contestId": 1767, "index": "D", "name": "Playoff", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "constructive algorithms", "dp", "greedy", "math"]}, {"contestId": 1767, "index": "C", "name": "Count Binary Strings", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp"]}, {"contestId": 1766, "index": "E", "name": "Decomposition", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "dp", "two pointers"]}, {"contestId": 1766, "index": "C", "name": "Hamiltonian Wall", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "implementation"]}, {"contestId": 1765, "index": "F", "name": "Chemistry Lab", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "geometry", "probabilities"]}, {"contestId": 1765, "index": "C", "name": "Card Guessing", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 1764, "index": "E", "name": "Doremy's Number Line", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1764, "index": "D", "name": "Doremy's Pegging Game", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1763, "index": "F", "name": "Edge Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"]}, {"contestId": 1763, "index": "E", "name": "Node Pairs", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "graphs", "math", "number theory"]}, {"contestId": 1763, "index": "D", "name": "Valid Bitonic Permutations", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "dp", "implementation", "math", "number theory"]}, {"contestId": 1762, "index": "F", "name": "Good Pairs ", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 1761, "index": "F2", "name": "Anti-median (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1761, "index": "F1", "name": "Anti-median (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "math"]}, {"contestId": 1759, "index": "E", "name": "The Humanoid", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp", "sortings"]}, {"contestId": 1753, "index": "C", "name": "Wish I Knew How to Sort", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1753, "index": "A2", "name": "Make Nonzero Sum (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1753, "index": "A1", "name": "Make Nonzero Sum (easy version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1750, "index": "H", "name": "BinaryStringForces", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "dp"]}, {"contestId": 1750, "index": "G", "name": "Doping", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1750, "index": "F", "name": "Majority", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "strings"]}, {"contestId": 1750, "index": "E", "name": "Bracket Cost", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy", "strings"]}, {"contestId": 1749, "index": "D", "name": "Counting Arrays", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 1748, "index": "E", "name": "Yet Another Array Counting Problem", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "divide and conquer", "dp", "flows", "math", "trees"]}, {"contestId": 1748, "index": "C", "name": "Zero-Sum Prefixes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"]}, {"contestId": 1747, "index": "E", "name": "List Generation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1746, "index": "G", "name": "Olympiad Training", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["binary search", "data structures", "dp", "flows", "geometry", "implementation", "sortings"]}, {"contestId": 1746, "index": "E2", "name": "Joking (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3200, "tags": ["dp", "interactive"]}, {"contestId": 1746, "index": "D", "name": "Paths on the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"]}, {"contestId": 1743, "index": "G", "name": "Antifibonacci Cut", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "data structures", "dp", "hashing", "math"]}, {"contestId": 1743, "index": "F", "name": "Intersection and Union", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "matrices", "probabilities"]}, {"contestId": 1743, "index": "E", "name": "FTL", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dp"]}, {"contestId": 1743, "index": "D", "name": "Problem with Random Tests", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "greedy", "probabilities"]}, {"contestId": 1743, "index": "C", "name": "Save the Magazines", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1741, "index": "G", "name": "Kirill and Company", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "flows", "graphs", "shortest paths"]}, {"contestId": 1741, "index": "E", "name": "Sending a Sequence Over the Network", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp"]}, {"contestId": 1740, "index": "I", "name": "Arranging Crystal Balls", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "divide and conquer", "dp", "geometry", "graphs", "number theory"]}, {"contestId": 1740, "index": "F", "name": "Conditional Mix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1740, "index": "E", "name": "Hanging Hearts", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1739, "index": "F", "name": "Keyboard Design", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "data structures", "dp", "string suffix structures", "strings"]}, {"contestId": 1739, "index": "E", "name": "Cleaning Robot", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "dp"]}, {"contestId": 1739, "index": "C", "name": "Card Game", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "constructive algorithms", "dp", "games"]}, {"contestId": 1738, "index": "G", "name": "Anti-Increasing Addicts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["constructive algorithms", "dp", "greedy", "math"]}, {"contestId": 1738, "index": "E", "name": "Balance Addicts", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp", "math", "two pointers"]}, {"contestId": 1738, "index": "C", "name": "Even Number Addicts", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "games", "greedy", "math"]}, {"contestId": 1737, "index": "E", "name": "Ela Goes Hiking", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1737, "index": "D", "name": "Ela and the Wiring Wizard", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "dp", "graphs", "greedy", "implementation", "shortest paths"]}, {"contestId": 1736, "index": "E", "name": "Swap and Take", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "greedy"]}, {"contestId": 1736, "index": "C2", "name": "Good Subarrays (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "two pointers"]}, {"contestId": 1734, "index": "F", "name": "Zeros and Ones", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["bitmasks", "divide and conquer", "dp", "math"]}, {"contestId": 1734, "index": "D", "name": "Slime Escape", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "two pointers"]}, {"contestId": 1733, "index": "E", "name": "Conveyor", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 1733, "index": "D2", "name": "Zero-One (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["dp", "greedy"]}, {"contestId": 1732, "index": "E", "name": "Location", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "dp", "math", "number theory"]}, {"contestId": 1732, "index": "B", "name": "Ugu", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1731, "index": "F", "name": "Function Sum", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["brute force", "combinatorics", "dp", "fft", "math"]}, {"contestId": 1731, "index": "E", "name": "Graph Cost", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "greedy", "math", "number theory"]}, {"contestId": 1731, "index": "D", "name": "Valiant's New Map", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"]}, {"contestId": 1730, "index": "F", "name": "Almost Sorted", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["bitmasks", "data structures", "dp"]}, {"contestId": 1729, "index": "G", "name": "Cut Substrings", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "hashing", "strings", "two pointers"]}, {"contestId": 1728, "index": "G", "name": "Illumination", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "dp", "math", "two pointers"]}, {"contestId": 1728, "index": "D", "name": "Letter Picking", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "games", "two pointers"]}, {"contestId": 1725, "index": "M", "name": "Moving Both Hands", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 1725, "index": "J", "name": "Journey", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "trees"]}, {"contestId": 1725, "index": "E", "name": "Electrical Efficiency", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "data structures", "dp", "math", "number theory", "trees"]}, {"contestId": 1722, "index": "E", "name": "Counting Rectangles", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "dp", "implementation"]}, {"contestId": 1721, "index": "E", "name": "Prefix Function Queries", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "hashing", "string suffix structures", "strings", "trees"]}, {"contestId": 1720, "index": "D2", "name": "Xor-Subsequence (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["bitmasks", "data structures", "dp", "strings", "trees"]}, {"contestId": 1720, "index": "D1", "name": "Xor-Subsequence (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["bitmasks", "brute force", "dp", "strings", "trees", "two pointers"]}, {"contestId": 1718, "index": "A2", "name": "Burenka and Traditions (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1718, "index": "A1", "name": "Burenka and Traditions (easy version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy"]}, {"contestId": 1716, "index": "F", "name": "Bags with Balls", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 1716, "index": "E", "name": "Swap and Maximum Block", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "data structures", "dfs and similar", "divide and conquer", "dp"]}, {"contestId": 1716, "index": "D", "name": "Chip Move", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp", "math"]}, {"contestId": 1716, "index": "C", "name": "Robot in a Hallway", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy", "implementation", "ternary search"]}, {"contestId": 1715, "index": "E", "name": "Long Way Home", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "dp", "geometry", "graphs", "greedy", "shortest paths"]}, {"contestId": 1714, "index": "D", "name": "Color with Occurrences", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "dp", "greedy", "strings"]}, {"contestId": 1713, "index": "F", "name": "Lost Array", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"]}, {"contestId": 1713, "index": "C", "name": "Build Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 1200, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 1710, "index": "C", "name": "XOR Triangle", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "math"]}, {"contestId": 1709, "index": "F", "name": "Multiset of Strings", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "brute force", "dp", "fft", "flows", "graphs", "math", "meet-in-the-middle", "trees"]}, {"contestId": 1709, "index": "B", "name": "Also Try Minecraft", "type": "PROGRAMMING", "rating": 900, "tags": ["data structures", "dp", "implementation"]}, {"contestId": 1707, "index": "F", "name": "Bugaboo", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["bitmasks", "constructive algorithms", "dp", "number theory"]}, {"contestId": 1707, "index": "D", "name": "Partial Virtual Trees", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 1706, "index": "D2", "name": "Chopping Carrots (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math", "number theory", "two pointers"]}, {"contestId": 1706, "index": "C", "name": "Qpwoeirut And The City", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp", "flows", "greedy", "implementation"]}, {"contestId": 1706, "index": "B", "name": "Making Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["dp", "greedy", "math"]}, {"contestId": 1704, "index": "H1", "name": "Game of AI (easy version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["combinatorics", "constructive algorithms", "dp", "fft", "math"]}, {"contestId": 1704, "index": "F", "name": "Colouring Game", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "dp", "games"]}, {"contestId": 1704, "index": "E", "name": "Count Seconds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "math"]}, {"contestId": 1703, "index": "G", "name": "Good Key, Bad Key", "type": "PROGRAMMING", "rating": 1600, "tags": ["bitmasks", "brute force", "dp", "greedy", "math"]}, {"contestId": 1703, "index": "F", "name": "Yet Another Problem About Pairs Satisfying an Inequality", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "data structures", "dp", "greedy", "sortings"]}, {"contestId": 1701, "index": "E", "name": "Text Editor", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "dp", "greedy", "strings"]}, {"contestId": 1700, "index": "F", "name": "Puzzle", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1700, "index": "D", "name": "River Locks", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "dp", "greedy", "math"]}, {"contestId": 1699, "index": "E", "name": "Three Days Grace", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"]}, {"contestId": 1699, "index": "D", "name": "Almost Triple Deletions", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1697, "index": "E", "name": "Coloring", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "combinatorics", "constructive algorithms", "dp", "geometry", "graphs", "greedy", "implementation", "math"]}, {"contestId": 1696, "index": "H", "name": "Maximum Product?", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["brute force", "combinatorics", "dp", "greedy", "implementation", "math", "two pointers"]}, {"contestId": 1695, "index": "D2", "name": "Tree Queries (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1695, "index": "D1", "name": "Tree Queries (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1695, "index": "C", "name": "Zero Path", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 1693, "index": "D", "name": "Decinc Dividing", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"]}, {"contestId": 1693, "index": "B", "name": "Fake Plastic Trees", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1692, "index": "H", "name": "Gambling", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "greedy", "math"]}, {"contestId": 1692, "index": "G", "name": "2^Sort", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "dp", "sortings", "two pointers"]}, {"contestId": 1691, "index": "F", "name": "K-Set Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 1689, "index": "D", "name": "Lena and Matrix", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["data structures", "dp", "geometry", "shortest paths"]}, {"contestId": 1689, "index": "C", "name": "Infected Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1686, "index": "B", "name": "Odd Subarrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["dp", "greedy"]}, {"contestId": 1681, "index": "F", "name": "Unique Occurrences", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "dsu", "trees"]}, {"contestId": 1681, "index": "E", "name": "Labyrinth Adventures", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "matrices", "shortest paths"]}, {"contestId": 1681, "index": "D", "name": "Required Length", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dfs and similar", "dp", "hashing", "shortest paths"]}, {"contestId": 1680, "index": "E", "name": "Moving Chips", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 1679, "index": "F", "name": "Formalism for Formalism", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 1679, "index": "E", "name": "Typical Party in Dorm", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["bitmasks", "combinatorics", "dp", "strings"]}, {"contestId": 1679, "index": "D", "name": "Toss a Coin to Your Graph...", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "dfs and similar", "dp", "graphs"]}, {"contestId": 1678, "index": "B2", "name": "Tokitsukaze and Good 01-String (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1677, "index": "F", "name": "Tokitsukaze and Gems", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp", "math"]}, {"contestId": 1677, "index": "D", "name": "Tokitsukaze and Permutations", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math"]}, {"contestId": 1677, "index": "A", "name": "Tokitsukaze and Strange Inequality", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 1676, "index": "G", "name": "White-Black Balanced Subtrees", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1675, "index": "G", "name": "Sorting Pancakes", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp"]}, {"contestId": 1675, "index": "F", "name": "Vlad and Unfinished Business", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1674, "index": "G", "name": "Remove Directed Edges", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp", "graphs"]}, {"contestId": 1673, "index": "C", "name": "Palindrome Basis", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp", "math", "number theory"]}, {"contestId": 1671, "index": "F", "name": "Permutation Counting", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "combinatorics", "dp", "fft", "math"]}, {"contestId": 1671, "index": "E", "name": "Preorder", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "divide and conquer", "dp", "dsu", "hashing", "sortings", "trees"]}, {"contestId": 1670, "index": "F", "name": "Jee, You See?", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 1667, "index": "E", "name": "Centroid Probabilities", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1667, "index": "D", "name": "Edge Elimination", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"]}, {"contestId": 1667, "index": "B", "name": "Optimal Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["data structures", "dp"]}, {"contestId": 1666, "index": "J", "name": "Job Lookup", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dp", "shortest paths", "trees"]}, {"contestId": 1666, "index": "F", "name": "Fancy Stack", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp", "implementation"]}, {"contestId": 1663, "index": "D", "name": "Is it rated - 3", "type": "PROGRAMMING", "tags": ["*special", "combinatorics", "dp", "math"]}, {"contestId": 1662, "index": "L", "name": "Il Derby della Madonnina", "type": "PROGRAMMING", "tags": ["data structures", "dp", "math"]}, {"contestId": 1662, "index": "G", "name": "Gastronomic Event", "type": "PROGRAMMING", "tags": ["dp", "greedy", "trees"]}, {"contestId": 1662, "index": "C", "name": "European Trip", "type": "PROGRAMMING", "tags": ["dp", "graphs", "math", "matrices"]}, {"contestId": 1661, "index": "E", "name": "Narrow Components", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "data structures", "dp", "dsu", "math", "trees"]}, {"contestId": 1661, "index": "B", "name": "Getting Zero", "type": "PROGRAMMING", "rating": 1300, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 1660, "index": "C", "name": "Get an Even String", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "strings"]}, {"contestId": 1659, "index": "C", "name": "Line Empire", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "brute force", "dp", "greedy", "implementation", "math"]}, {"contestId": 1658, "index": "E", "name": "Gojou and Matrix Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dp", "games", "hashing", "implementation", "math", "number theory", "sortings"]}, {"contestId": 1657, "index": "E", "name": "Star MST", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp", "graph matchings", "math"]}, {"contestId": 1654, "index": "H", "name": "Three Minimums", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["combinatorics", "constructive algorithms", "divide and conquer", "dp", "fft", "math"]}, {"contestId": 1650, "index": "G", "name": "Counting Shortcuts", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 1650, "index": "F", "name": "Vitaly and Advanced Useless Algorithms", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1648, "index": "D", "name": "Serious Business", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "dp", "implementation", "shortest paths"]}, {"contestId": 1647, "index": "F", "name": "Madoka and Laziness", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["dp", "greedy"]}, {"contestId": 1647, "index": "D", "name": "Madoka and the Best School in Russia", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "dp", "math", "number theory"]}, {"contestId": 1646, "index": "E", "name": "Power Board", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "dp", "math", "number theory"]}, {"contestId": 1646, "index": "D", "name": "Weight the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "implementation", "trees"]}, {"contestId": 1646, "index": "C", "name": "Factorials and Powers of Two", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "math"]}, {"contestId": 1644, "index": "C", "name": "Increase Subarray Sums", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1637, "index": "F", "name": "Towers", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1637, "index": "D", "name": "Yet Another Minimization Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy", "math"]}, {"contestId": 1637, "index": "B", "name": "MEX and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "dp", "greedy", "math"]}, {"contestId": 1635, "index": "D", "name": "Infinite Set", "type": "PROGRAMMING", "points": 2250.0, "rating": 1800, "tags": ["bitmasks", "dp", "math", "matrices", "number theory", "strings"]}, {"contestId": 1633, "index": "D", "name": "Make Them Equal", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy"]}, {"contestId": 1632, "index": "C", "name": "Strange Test", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "bitmasks", "brute force", "dp", "math"]}, {"contestId": 1631, "index": "B", "name": "Fun with Even Subarrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["dp", "greedy"]}, {"contestId": 1630, "index": "D", "name": "Flipping Range", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "greedy", "number theory"]}, {"contestId": 1630, "index": "C", "name": "Paint the Middle", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1628, "index": "D2", "name": "Game on Sum (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["combinatorics", "dp", "games", "math"]}, {"contestId": 1628, "index": "D1", "name": "Game on Sum (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["combinatorics", "dp", "games", "math"]}, {"contestId": 1627, "index": "E", "name": "Not Escaping", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "implementation", "shortest paths", "two pointers"]}, {"contestId": 1627, "index": "D", "name": "Not Adding", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "dp", "math", "number theory"]}, {"contestId": 1626, "index": "F", "name": "A Random Code Problem", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "dp", "math", "number theory", "probabilities"]}, {"contestId": 1626, "index": "C", "name": "Monsters And Spells", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "math", "two pointers"]}, {"contestId": 1625, "index": "E1", "name": "Cats on the Upgrade (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "dfs and similar", "divide and conquer", "dp", "graphs", "trees"]}, {"contestId": 1625, "index": "C", "name": "Road Optimization", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 1624, "index": "E", "name": "Masha-forgetful", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "constructive algorithms", "dp", "hashing", "implementation", "strings"]}, {"contestId": 1621, "index": "G", "name": "Weighted Increasing Subsequences", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "dp", "math"]}, {"contestId": 1621, "index": "E", "name": "New School", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1620, "index": "G", "name": "Subsequences Galore", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 1620, "index": "F", "name": "Bipartite Array", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "greedy"]}, {"contestId": 1620, "index": "C", "name": "BA-String", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "dp", "greedy", "implementation", "math"]}, {"contestId": 1619, "index": "E", "name": "MEX and Increments", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation", "math", "sortings"]}, {"contestId": 1618, "index": "D", "name": "Array and Operations", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "math"]}, {"contestId": 1617, "index": "E", "name": "Christmas Chocolates", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "dp", "games", "graphs", "implementation", "math", "number theory", "shortest paths", "trees"]}, {"contestId": 1616, "index": "H", "name": "Keep XOR Low", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["bitmasks", "combinatorics", "data structures", "divide and conquer", "dp", "math"]}, {"contestId": 1616, "index": "G", "name": "Just Add an Edge", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dfs and similar", "dp", "graphs"]}, {"contestId": 1616, "index": "D", "name": "Keep the Average High", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "greedy", "math"]}, {"contestId": 1615, "index": "F", "name": "LEGOndary Grandmaster", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1614, "index": "D2", "name": "Divan and Kostomuksha (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["dp", "number theory"]}, {"contestId": 1614, "index": "D1", "name": "Divan and Kostomuksha (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "number theory"]}, {"contestId": 1614, "index": "C", "name": "Divan and bitwise operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"]}, {"contestId": 1613, "index": "D", "name": "MEX Sequences", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "math"]}, {"contestId": 1612, "index": "F", "name": "Armor and Weapons", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "greedy", "shortest paths"]}, {"contestId": 1612, "index": "E", "name": "Messages", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp", "greedy", "probabilities", "sortings"]}, {"contestId": 1611, "index": "E2", "name": "Escape The Maze (hard version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "shortest paths", "trees"]}, {"contestId": 1610, "index": "D", "name": "Not Quite Lee", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 1609, "index": "E", "name": "William The Oblivious ", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "dp", "matrices"]}, {"contestId": 1609, "index": "C", "name": "Complex Market Analysis", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search", "dp", "implementation", "number theory", "schedules", "two pointers"]}, {"contestId": 1608, "index": "F", "name": "MEX counting", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["combinatorics", "dp", "implementation"]}, {"contestId": 1608, "index": "C", "name": "Game Master", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "two pointers"]}, {"contestId": 1606, "index": "F", "name": "Tree Queries", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "trees"]}, {"contestId": 1606, "index": "E", "name": "Arena", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1605, "index": "F", "name": "PalindORme", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["combinatorics", "dp"]}, {"contestId": 1603, "index": "F", "name": "October 18, 2017", "type": "PROGRAMMING", "points": 3750.0, "rating": 2700, "tags": ["combinatorics", "dp", "implementation", "math"]}, {"contestId": 1603, "index": "E", "name": "A Perfect Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1603, "index": "D", "name": "Artistic Partition", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["divide and conquer", "dp", "number theory"]}, {"contestId": 1603, "index": "C", "name": "Extreme Extension", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp", "greedy", "math", "number theory"]}, {"contestId": 1601, "index": "E", "name": "Phys Ed Online", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1601, "index": "D", "name": "Difficult Mountain", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "dp", "greedy", "sortings"]}, {"contestId": 1601, "index": "C", "name": "Optimal Insertion", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "divide and conquer", "dp", "greedy", "sortings"]}, {"contestId": 1601, "index": "B", "name": "Frog Traveler", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths", "two pointers"]}, {"contestId": 1598, "index": "F", "name": "RBS", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp"]}, {"contestId": 1598, "index": "E", "name": "Staircases", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "dp", "implementation", "math"]}, {"contestId": 1598, "index": "C", "name": "Delete Two Elements", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "dp", "implementation", "math", "two pointers"]}, {"contestId": 1598, "index": "A", "name": "Computer Game", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "dfs and similar", "dp", "implementation"]}, {"contestId": 1594, "index": "E2", "name": "Rubik's Cube Coloring (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "dp", "implementation", "math", "trees"]}, {"contestId": 1594, "index": "D", "name": "The Number of Imposters", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "graphs"]}, {"contestId": 1593, "index": "G", "name": "Changing Brackets", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "data structures", "dp", "greedy"]}, {"contestId": 1593, "index": "F", "name": "Red-Black Number", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "implementation", "math", "meet-in-the-middle"]}, {"contestId": 1593, "index": "B", "name": "Make it Divisible by 25", "type": "PROGRAMMING", "rating": 900, "tags": ["dfs and similar", "dp", "greedy", "math", "math"]}, {"contestId": 1592, "index": "C", "name": "Bakry and Partitioning", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1585, "index": "G", "name": "Poachers", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["dp", "games", "graphs", "trees"]}, {"contestId": 1585, "index": "F", "name": "Non-equal Neighbours", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1584, "index": "F", "name": "Strange LCS", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "dp", "graphs", "greedy", "strings"]}, {"contestId": 1583, "index": "C", "name": "Omkar and Determination", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp"]}, {"contestId": 1582, "index": "F2", "name": "Korney Korneevich and XOR (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "brute force", "dp", "greedy", "two pointers"]}, {"contestId": 1582, "index": "F1", "name": "Korney Korneevich and XOR (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 1582, "index": "E", "name": "Pchelyonok and Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "greedy", "math"]}, {"contestId": 1580, "index": "D", "name": "Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "divide and conquer", "dp", "greedy", "trees"]}, {"contestId": 1580, "index": "B", "name": "Mathematics Curriculum", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["brute force", "combinatorics", "dp", "trees"]}, {"contestId": 1580, "index": "A", "name": "Portal", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"]}, {"contestId": 1579, "index": "G", "name": "Minimal Coverage", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"]}, {"contestId": 1575, "index": "L", "name": "Longest Array Deconstruction", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "sortings"]}, {"contestId": 1575, "index": "H", "name": "Holiday Wall Ornaments", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "strings"]}, {"contestId": 1575, "index": "D", "name": "Divisible by Twenty-Five", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "dfs and similar", "dp"]}, {"contestId": 1574, "index": "F", "name": "Occurrences", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "fft", "graphs"]}, {"contestId": 1572, "index": "E", "name": "Polygon", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "dp", "geometry"]}, {"contestId": 1572, "index": "C", "name": "Paint", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["dp", "greedy"]}, {"contestId": 1572, "index": "A", "name": "Book", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"]}, {"contestId": 1571, "index": "G", "name": "A Battle Against a Dragon", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "data structures", "dp"]}, {"contestId": 1571, "index": "F", "name": "Kotlinforces", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "constructive algorithms", "dp"]}, {"contestId": 1571, "index": "E", "name": "Fix the String", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "bitmasks", "dp", "greedy"]}, {"contestId": 1569, "index": "F", "name": "Palindromic Hamiltonian Path", "type": "PROGRAMMING", "rating": 3000, "tags": ["brute force", "dfs and similar", "dp", "graphs", "hashing"]}, {"contestId": 1567, "index": "C", "name": "Carrying Conundrum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 1566, "index": "H", "name": "Xor-quiz", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["constructive algorithms", "dp", "interactive", "math", "number theory"]}, {"contestId": 1566, "index": "F", "name": "Points Movement", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1566, "index": "E", "name": "Buds Re-hanging", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1566, "index": "C", "name": "MAX-MEX Cut", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"]}, {"contestId": 1566, "index": "B", "name": "MIN-MEX Cut", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"]}, {"contestId": 1562, "index": "E", "name": "Rescue Niwen!", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["dp", "greedy", "string suffix structures", "strings"]}, {"contestId": 1562, "index": "D1", "name": "Two Hundred Twenty One (easy version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "dp", "math"]}, {"contestId": 1561, "index": "D1", "name": "Up the Strip (simplified version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "math", "number theory"]}, {"contestId": 1560, "index": "F2", "name": "Nearest Beautiful Number (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "greedy"]}, {"contestId": 1559, "index": "E", "name": "Mocha and Stars", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["combinatorics", "dp", "fft", "math", "number theory"]}, {"contestId": 1559, "index": "B", "name": "Mocha and Red and Blue", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["dp", "greedy"]}, {"contestId": 1558, "index": "B", "name": "Up the Strip", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["brute force", "dp", "math", "number theory", "two pointers"]}, {"contestId": 1557, "index": "D", "name": "Ezzat and Grid", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1557, "index": "C", "name": "Moamen and XOR", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["bitmasks", "combinatorics", "dp", "math", "matrices"]}, {"contestId": 1556, "index": "F", "name": "Sports Betting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "graphs", "math", "probabilities"]}, {"contestId": 1556, "index": "E", "name": "Equilibrium", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1555, "index": "D", "name": "Say No to Palindromes", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "dp", "strings"]}, {"contestId": 1555, "index": "C", "name": "Coin Rows", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "dp", "implementation"]}, {"contestId": 1554, "index": "E", "name": "You", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["dfs and similar", "dp", "math", "number theory"]}, {"contestId": 1553, "index": "I", "name": "Stairs", "type": "PROGRAMMING", "points": 5250.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"]}, {"contestId": 1553, "index": "D", "name": "Backspace", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["dp", "greedy", "strings", "two pointers"]}, {"contestId": 1553, "index": "C", "name": "Penalty", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["bitmasks", "brute force", "dp", "greedy"]}, {"contestId": 1553, "index": "B", "name": "Reverse String", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "dp", "hashing", "implementation", "strings"]}, {"contestId": 1552, "index": "F", "name": "Telepanting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "dp", "sortings"]}, {"contestId": 1552, "index": "D", "name": "Array Differentiation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "math"]}, {"contestId": 1551, "index": "F", "name": "Equidistant Vertices", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "trees"]}, {"contestId": 1551, "index": "E", "name": "Fixed Points", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "dp"]}, {"contestId": 1550, "index": "F", "name": "Jumping Around", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "graphs", "shortest paths"]}, {"contestId": 1550, "index": "E", "name": "Stringforces", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "bitmasks", "brute force", "dp", "strings", "two pointers"]}, {"contestId": 1549, "index": "B", "name": "Gregor and the Pawn Game", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["dfs and similar", "dp", "flows", "graph matchings", "graphs", "greedy", "implementation"]}, {"contestId": 1548, "index": "C", "name": "The Three Little Pigs", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1547, "index": "G", "name": "How Many Paths?", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1547, "index": "E", "name": "Air Conditioners", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "dp", "implementation", "shortest paths", "sortings", "two pointers"]}, {"contestId": 1545, "index": "F", "name": "AquaMoon and Potatoes", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 1545, "index": "E2", "name": "AquaMoon and Time Stop (hard version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp"]}, {"contestId": 1545, "index": "E1", "name": "AquaMoon and Time Stop (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp"]}, {"contestId": 1542, "index": "E2", "name": "Abnormal Permutation Pairs (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2700, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1542, "index": "E1", "name": "Abnormal Permutation Pairs (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1542, "index": "D", "name": "Priority Queue", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "dp", "implementation", "math", "ternary search"]}, {"contestId": 1540, "index": "C2", "name": "Converging Array (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2900, "tags": ["dp", "math"]}, {"contestId": 1540, "index": "C1", "name": "Converging Array (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["dp", "math"]}, {"contestId": 1540, "index": "B", "name": "Tree Array", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["brute force", "combinatorics", "dp", "graphs", "math", "probabilities", "trees"]}, {"contestId": 1539, "index": "E", "name": "Game with Cards", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "greedy", "implementation"]}, {"contestId": 1539, "index": "B", "name": "Love Song", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["dp", "implementation", "strings"]}, {"contestId": 1538, "index": "F", "name": "Interesting Function", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "dp", "math", "number theory"]}, {"contestId": 1538, "index": "A", "name": "Stone Game", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1537, "index": "E1", "name": "Erase and Extend (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "brute force", "dp", "greedy", "hashing", "implementation", "string suffix structures", "strings", "two pointers"]}, {"contestId": 1536, "index": "C", "name": "Diluc and Kaeya", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "dp", "hashing", "number theory"]}, {"contestId": 1535, "index": "E", "name": "Gold Transfer", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "interactive", "trees"]}, {"contestId": 1535, "index": "D", "name": "Playoff Tournament", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dfs and similar", "dp", "implementation", "trees"]}, {"contestId": 1535, "index": "C", "name": "Unstable String", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "dp", "greedy", "implementation", "strings", "two pointers"]}, {"contestId": 1534, "index": "H", "name": "Lost Nodes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "graphs", "interactive", "sortings", "trees"]}, {"contestId": 1534, "index": "G", "name": "A New Beginning", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["data structures", "dp", "geometry", "sortings"]}, {"contestId": 1534, "index": "F2", "name": "Falling Sand (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 3000, "tags": ["dfs and similar", "dp", "graphs", "greedy"]}, {"contestId": 1534, "index": "C", "name": "Little Alawn's Puzzle", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["combinatorics", "dp", "dsu", "graphs", "math"]}, {"contestId": 1533, "index": "H", "name": "Submatrices", "type": "PROGRAMMING", "tags": ["*special", "bitmasks", "data structures", "dp"]}, {"contestId": 1531, "index": "C", "name": "\u0421\u0438\u043c\u043c\u0435\u0442\u0440\u0438\u0447\u043d\u044b\u0439 \u0430\u043c\u0444\u0438\u0442\u0435\u0430\u0442\u0440", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dp"]}, {"contestId": 1530, "index": "H", "name": "Turing's Award", "type": "PROGRAMMING", "points": 4750.0, "rating": 3400, "tags": ["data structures", "dp"]}, {"contestId": 1530, "index": "F", "name": "Bingo", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["bitmasks", "combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1528, "index": "E", "name": "Mashtali and Hagh Trees", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 1528, "index": "B", "name": "Kavi on Pairing Duty", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1528, "index": "A", "name": "Parsa's Humongous Tree", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["dfs and similar", "divide and conquer", "dp", "greedy", "trees"]}, {"contestId": 1527, "index": "E", "name": "Partition Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "data structures", "divide and conquer", "dp"]}, {"contestId": 1526, "index": "C1", "name": "Potions (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["brute force", "data structures", "dp", "greedy"]}, {"contestId": 1526, "index": "B", "name": "I Hate 1111", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "math", "number theory"]}, {"contestId": 1525, "index": "F", "name": "Goblins And Gnomes", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "flows", "graph matchings"]}, {"contestId": 1525, "index": "E", "name": "Assimilation IV", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "math", "probabilities", "two pointers"]}, {"contestId": 1525, "index": "D", "name": "Armchairs", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "flows", "graph matchings", "greedy"]}, {"contestId": 1523, "index": "H", "name": "Hopping Around the Array ", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures", "dp"]}, {"contestId": 1523, "index": "F", "name": "Favorite Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["bitmasks", "dp"]}, {"contestId": 1523, "index": "E", "name": "Crypto Lights", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1523, "index": "D", "name": "Love-Hate", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dp", "probabilities"]}, {"contestId": 1521, "index": "E", "name": "Nastia and a Beautiful Matrix", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "constructive algorithms", "dp", "greedy"]}, {"contestId": 1521, "index": "D", "name": "Nastia Plays with a Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"]}, {"contestId": 1519, "index": "F", "name": "Chests and Keys", "type": "PROGRAMMING", "rating": 3200, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "flows"]}, {"contestId": 1519, "index": "D", "name": "Maximum Sum of Products", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "dp", "implementation", "math", "two pointers"]}, {"contestId": 1519, "index": "B", "name": "The Cake Is a Lie", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "math"]}, {"contestId": 1517, "index": "H", "name": "Fly Around the World", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "geometry"]}, {"contestId": 1517, "index": "F", "name": "Reunion", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 1517, "index": "D", "name": "Explorer Space", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 1516, "index": "E", "name": "Baby Ehab Plays with Permutations", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1516, "index": "D", "name": "Cut", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "dp", "graphs", "number theory", "two pointers"]}, {"contestId": 1516, "index": "C", "name": "Baby Ehab Partitions Again", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "dp", "math"]}, {"contestId": 1516, "index": "B", "name": "AGAGA XOOORRR", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "brute force", "dp", "greedy"]}, {"contestId": 1515, "index": "E", "name": "Phoenix and Computers", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1513, "index": "C", "name": "Add One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "matrices"]}, {"contestId": 1512, "index": "G", "name": "Short Task", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "math", "number theory"]}, {"contestId": 1512, "index": "F", "name": "Education", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1511, "index": "G", "name": "Chips on a Board", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "brute force", "data structures", "dp", "games", "two pointers"]}, {"contestId": 1511, "index": "F", "name": "Chainword", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "data structures", "dp", "matrices", "string suffix structures", "strings"]}, {"contestId": 1511, "index": "E", "name": "Colorings and Dominoes", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "greedy", "math"]}, {"contestId": 1510, "index": "H", "name": "Hard Optimization", "type": "PROGRAMMING", "rating": 3200, "tags": ["dp"]}, {"contestId": 1510, "index": "D", "name": "Digits", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math", "number theory"]}, {"contestId": 1509, "index": "C", "name": "The Sports Festival", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "greedy"]}, {"contestId": 1506, "index": "G", "name": "Maximize the Remaining String", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "strings"]}, {"contestId": 1503, "index": "E", "name": "2-Coloring", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1503, "index": "C", "name": "Travelling Salesman Problem", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "sortings", "two pointers"]}, {"contestId": 1501, "index": "B", "name": "Napoleon Cake", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["dp", "implementation", "sortings"]}, {"contestId": 1500, "index": "F", "name": "Cupboards Jumps", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["dp"]}, {"contestId": 1499, "index": "F", "name": "Diameter Cuts", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dfs and similar", "dp", "trees"]}, {"contestId": 1499, "index": "E", "name": "Chaotic Merge", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "math", "strings"]}, {"contestId": 1499, "index": "D", "name": "The Number of Pairs", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math", "number theory"]}, {"contestId": 1499, "index": "B", "name": "Binary Removals", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1498, "index": "F", "name": "Christmas Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "data structures", "dfs and similar", "dp", "games", "math", "trees"]}, {"contestId": 1498, "index": "D", "name": "Bananas in a Microwave", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "implementation"]}, {"contestId": 1498, "index": "C", "name": "Planar Reflections", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 1497, "index": "E2", "name": "Square-Free Division (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"]}, {"contestId": 1497, "index": "E1", "name": "Square-Free Division (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"]}, {"contestId": 1497, "index": "D", "name": "Genius", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "dp", "graphs", "number theory"]}, {"contestId": 1495, "index": "F", "name": "Squares", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "graphs", "trees"]}, {"contestId": 1494, "index": "C", "name": "1D Sokoban", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp", "greedy", "implementation", "two pointers"]}, {"contestId": 1492, "index": "C", "name": "Maximum width", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"]}, {"contestId": 1491, "index": "D", "name": "Zookeeper and The Infinite Zoo", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math"]}, {"contestId": 1491, "index": "C", "name": "Pekora and Trampoline", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"]}, {"contestId": 1488, "index": "E", "name": "Palindromic Doubles", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "data structures", "dp"]}, {"contestId": 1487, "index": "G", "name": "String Counting", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1487, "index": "F", "name": "Ones", "type": "PROGRAMMING", "rating": 2900, "tags": ["dp", "greedy", "shortest paths"]}, {"contestId": 1486, "index": "F", "name": "Pairs of Paths", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 1486, "index": "E", "name": "Paired Payment", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "brute force", "constructive algorithms", "dp", "flows", "graphs", "shortest paths"]}, {"contestId": 1486, "index": "D", "name": "Max Median", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 1485, "index": "F", "name": "Copy or Prefix Sum", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["combinatorics", "data structures", "dp", "sortings"]}, {"contestId": 1485, "index": "E", "name": "Move and Swap", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1485, "index": "B", "name": "Replace and Keep Sorted", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "implementation", "math"]}, {"contestId": 1482, "index": "E", "name": "Skyline Photo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "divide and conquer", "dp"]}, {"contestId": 1481, "index": "F", "name": "AB Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["dp", "greedy", "trees"]}, {"contestId": 1481, "index": "E", "name": "Sorting Books", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1479, "index": "E", "name": "School Clubs", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "fft", "math", "number theory", "probabilities"]}, {"contestId": 1479, "index": "B2", "name": "Painting the Array II", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"]}, {"contestId": 1479, "index": "B1", "name": "Painting the Array I", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"]}, {"contestId": 1478, "index": "B", "name": "Nezzar and Lucky Number", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "dp", "greedy", "math"]}, {"contestId": 1476, "index": "F", "name": "Lanterns", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 1476, "index": "D", "name": "Journey", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dp", "dsu", "implementation"]}, {"contestId": 1476, "index": "C", "name": "Longest Simple Cycle", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "graphs", "greedy"]}, {"contestId": 1475, "index": "G", "name": "Strange Beauty", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "math", "number theory", "sortings"]}, {"contestId": 1475, "index": "D", "name": "Cleaning the Phone", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp", "sortings", "two pointers"]}, {"contestId": 1475, "index": "B", "name": "New Year's Number", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "dp", "math"]}, {"contestId": 1474, "index": "F", "name": "1 2 3 4 ...", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "math", "matrices"]}, {"contestId": 1474, "index": "D", "name": "Cleaning", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "math"]}, {"contestId": 1473, "index": "G", "name": "Tiles", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 1473, "index": "D", "name": "Program", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "implementation", "strings"]}, {"contestId": 1472, "index": "G", "name": "Moving to the Capital", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 1472, "index": "F", "name": "New Year's Puzzle", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dp", "graph matchings", "greedy", "sortings"]}, {"contestId": 1472, "index": "E", "name": "Correct Placement", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "sortings", "two pointers"]}, {"contestId": 1472, "index": "D", "name": "Even-Odd Game", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "games", "greedy", "sortings"]}, {"contestId": 1472, "index": "C", "name": "Long Jumps", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "graphs"]}, {"contestId": 1472, "index": "B", "name": "Fair Division", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "math"]}, {"contestId": 1470, "index": "E", "name": "Strange Permutation", "type": "PROGRAMMING", "points": 2000.0, "rating": 3200, "tags": ["binary search", "combinatorics", "data structures", "dp", "graphs", "implementation", "two pointers"]}, {"contestId": 1470, "index": "A", "name": "Strange Birthday Party", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["binary search", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1469, "index": "C", "name": "Building a Fence", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "implementation", "two pointers"]}, {"contestId": 1469, "index": "B", "name": "Red and Blue", "type": "PROGRAMMING", "rating": 1000, "tags": ["dp", "greedy"]}, {"contestId": 1468, "index": "A", "name": "LaIS", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1467, "index": "E", "name": "Distinctive Roots in a Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 1467, "index": "D", "name": "Sum of Paths", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1466, "index": "H", "name": "Finding satisfactory solutions", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["combinatorics", "dp", "graphs", "greedy", "math"]}, {"contestId": 1466, "index": "C", "name": "Canine poetry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "strings"]}, {"contestId": 1466, "index": "B", "name": "Last minute enhancements", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["dp", "greedy"]}, {"contestId": 1463, "index": "F", "name": "Max Correct Set", "type": "PROGRAMMING", "rating": 3100, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 1462, "index": "B", "name": "Last Year's Substring", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "implementation", "strings"]}, {"contestId": 1461, "index": "F", "name": "Mathematical Expression", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1461, "index": "C", "name": "Random Events", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1461, "index": "B", "name": "Find the Spruce", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 1459, "index": "B", "name": "Move and Turn", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "math"]}, {"contestId": 1458, "index": "B", "name": "Glass Half Spilled", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 1456, "index": "E", "name": "XOR-ranges", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["dp", "greedy"]}, {"contestId": 1455, "index": "G", "name": "Forbidden Value", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "dp"]}, {"contestId": 1455, "index": "F", "name": "String and Operations", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "greedy"]}, {"contestId": 1455, "index": "D", "name": "Sequence and Swaps", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1453, "index": "F", "name": "Even Harder", "type": "PROGRAMMING", "points": 3500.0, "rating": 2700, "tags": ["dp"]}, {"contestId": 1453, "index": "E", "name": "Dog Snacks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1452, "index": "E", "name": "Two Editorials", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1452, "index": "D", "name": "Radio Towers", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1451, "index": "C", "name": "String Equality", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp", "greedy", "hashing", "implementation", "strings"]}, {"contestId": 1451, "index": "B", "name": "Non-Substring Subsequence", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["dp", "greedy", "implementation", "strings"]}, {"contestId": 1450, "index": "G", "name": "Communism", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["bitmasks", "dp", "trees"]}, {"contestId": 1446, "index": "C", "name": "Xor Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "dp", "trees"]}, {"contestId": 1446, "index": "B", "name": "Catching Cheaters", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "strings"]}, {"contestId": 1444, "index": "E", "name": "Finding the Vertex", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["brute force", "dfs and similar", "dp", "interactive", "trees"]}, {"contestId": 1444, "index": "D", "name": "Rectangular Polyline", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["constructive algorithms", "dp", "geometry"]}, {"contestId": 1443, "index": "B", "name": "Saving the City", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "math", "sortings"]}, {"contestId": 1442, "index": "E", "name": "Black, White and Grey Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1442, "index": "D", "name": "Sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "dp", "greedy"]}, {"contestId": 1442, "index": "A", "name": "Extreme Subtraction", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1439, "index": "D", "name": "INOI Final Contests", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["combinatorics", "dp", "fft"]}, {"contestId": 1437, "index": "F", "name": "Emotional Fishermen", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "math", "two pointers"]}, {"contestId": 1437, "index": "E", "name": "Make It Increasing", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "implementation"]}, {"contestId": 1437, "index": "C", "name": "Chef Monocarp", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "flows", "graph matchings", "greedy", "math", "sortings"]}, {"contestId": 1433, "index": "F", "name": "Zero Remainder Sum ", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"]}, {"contestId": 1431, "index": "J", "name": "Zero-XOR Array", "type": "PROGRAMMING", "rating": 3400, "tags": ["*special", "dp"]}, {"contestId": 1431, "index": "G", "name": "Number Deletion Game", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "dp", "games", "greedy"]}, {"contestId": 1430, "index": "G", "name": "Yet Another DAG Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "dfs and similar", "dp", "flows", "graphs", "math"]}, {"contestId": 1430, "index": "F", "name": "Realistic Gameplay", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "greedy"]}, {"contestId": 1428, "index": "G2", "name": "Lucky Numbers (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 3000, "tags": ["dp", "greedy"]}, {"contestId": 1428, "index": "G1", "name": "Lucky Numbers (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["dp", "greedy"]}, {"contestId": 1428, "index": "F", "name": "Fruit Sequences", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"]}, {"contestId": 1427, "index": "C", "name": "The Hard Work of Paparazzi", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 1426, "index": "F", "name": "Number of Subsequences", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "dp", "strings"]}, {"contestId": 1425, "index": "D", "name": "Danger of Mad Snakes", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1425, "index": "B", "name": "Blue and Red of Our Faculty!", "type": "PROGRAMMING", "rating": 2600, "tags": ["divide and conquer", "dp"]}, {"contestId": 1423, "index": "J", "name": "Bubble Cup hypothesis", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "constructive algorithms", "dp", "math"]}, {"contestId": 1422, "index": "E", "name": "Minlexes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "greedy", "implementation", "strings"]}, {"contestId": 1422, "index": "C", "name": "Bargain", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1421, "index": "E", "name": "Swedish Heroes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 1420, "index": "E", "name": "Battle Lemmings", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "greedy"]}, {"contestId": 1420, "index": "C2", "name": "Pok\u00e9mon Army (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "greedy", "implementation"]}, {"contestId": 1420, "index": "C1", "name": "Pok\u00e9mon Army (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1418, "index": "C", "name": "Mortal Kombat Tower", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 1416, "index": "E", "name": "Split", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["binary search", "data structures", "dp", "greedy"]}, {"contestId": 1416, "index": "C", "name": "XOR Inverse", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["bitmasks", "data structures", "divide and conquer", "dp", "greedy", "math", "sortings", "strings", "trees"]}, {"contestId": 1415, "index": "F", "name": "Cakes for Clones", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp"]}, {"contestId": 1415, "index": "C", "name": "Bouncing Ball", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 1413, "index": "C", "name": "Perform Easily", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "brute force", "dp", "implementation", "sortings", "two pointers"]}, {"contestId": 1409, "index": "F", "name": "Subsequences of Length Two", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "strings"]}, {"contestId": 1409, "index": "E", "name": "Two Platforms", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp", "sortings", "two pointers"]}, {"contestId": 1408, "index": "I", "name": "Bitwise Magic", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["dp", "math"]}, {"contestId": 1408, "index": "G", "name": "Clusterization Counting", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["combinatorics", "dp", "dsu", "fft", "graphs", "trees"]}, {"contestId": 1408, "index": "D", "name": "Searchlights", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "sortings", "two pointers"]}, {"contestId": 1408, "index": "C", "name": "Discrete Acceleration", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["binary search", "dp", "implementation", "math", "two pointers"]}, {"contestId": 1407, "index": "E", "name": "Egor in the Republic of Dagestan", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 1407, "index": "D", "name": "Discrete Centrifugal Jumps", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "graphs"]}, {"contestId": 1406, "index": "B", "name": "Maximum Product", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1404, "index": "B", "name": "Tree Tag", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "games", "trees"]}, {"contestId": 1403, "index": "C", "name": "Chess Rush", "type": "PROGRAMMING", "rating": 3200, "tags": ["*special", "combinatorics", "dp", "implementation", "math"]}, {"contestId": 1402, "index": "C", "name": "Star Trek", "type": "PROGRAMMING", "rating": 2600, "tags": ["*special", "combinatorics", "dfs and similar", "dp", "games", "graphs", "matrices", "trees"]}, {"contestId": 1401, "index": "D", "name": "Maximum Distributed Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "implementation", "math", "number theory", "sortings", "trees"]}, {"contestId": 1400, "index": "G", "name": "Mercenaries", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "dsu", "math", "two pointers"]}, {"contestId": 1400, "index": "F", "name": "x-prime Substrings", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dfs and similar", "dp", "string suffix structures", "strings"]}, {"contestId": 1400, "index": "E", "name": "Clear the Multiset", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer", "dp", "greedy"]}, {"contestId": 1399, "index": "F", "name": "Yet Another Segments Subset", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "graphs", "sortings"]}, {"contestId": 1398, "index": "F", "name": "Controversial Rounds", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"]}, {"contestId": 1398, "index": "D", "name": "Colored Rectangles", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1398, "index": "C", "name": "Good Subarrays", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "math"]}, {"contestId": 1396, "index": "C", "name": "Monster Invaders", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1395, "index": "C", "name": "Boboniu and Bit Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "brute force", "dp", "greedy"]}, {"contestId": 1394, "index": "D", "name": "Boboniu and Jianghu", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["dp", "greedy", "sortings", "trees"]}, {"contestId": 1394, "index": "A", "name": "Boboniu Chats with Du", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1393, "index": "E2", "name": "Twilight and Ancient Scroll (harder version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3200, "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings", "two pointers"]}, {"contestId": 1393, "index": "E1", "name": "Twilight and Ancient Scroll (easier version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings"]}, {"contestId": 1393, "index": "D", "name": "Rarity and New Dress", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["dfs and similar", "dp", "implementation", "shortest paths"]}, {"contestId": 1392, "index": "H", "name": "ZS Shuffles Cards", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1392, "index": "G", "name": "Omkar and Pies", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["bitmasks", "dfs and similar", "dp", "math", "shortest paths"]}, {"contestId": 1392, "index": "D", "name": "Omkar and Bed Wars", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "greedy"]}, {"contestId": 1391, "index": "D", "name": "505", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "implementation"]}, {"contestId": 1391, "index": "C", "name": "Cyclic Permutations ", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["combinatorics", "dp", "graphs", "math"]}, {"contestId": 1389, "index": "G", "name": "Directing Edges", "type": "PROGRAMMING", "rating": 2800, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1389, "index": "F", "name": "Bicolored Segments", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "graph matchings", "sortings"]}, {"contestId": 1389, "index": "C", "name": "Good String", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp", "greedy", "two pointers"]}, {"contestId": 1389, "index": "B", "name": "Array Walk", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1387, "index": "C", "name": "Viruses", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "dp", "shortest paths", "string suffix structures"]}, {"contestId": 1387, "index": "B1", "name": "Village (Minimum)", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "dp", "greedy", "trees"]}, {"contestId": 1387, "index": "A", "name": "Graph", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "binary search", "dfs and similar", "dp", "math", "ternary search"]}, {"contestId": 1385, "index": "D", "name": "a-Good String", "type": "PROGRAMMING", "rating": 1500, "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "implementation"]}, {"contestId": 1384, "index": "B2", "name": "Koa and the Beach (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2200, "tags": ["constructive algorithms", "dp", "greedy", "implementation"]}, {"contestId": 1384, "index": "B1", "name": "Koa and the Beach (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1383, "index": "E", "name": "Strange Operation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "data structures", "dp"]}, {"contestId": 1383, "index": "C", "name": "String Transformation 2", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["bitmasks", "dp", "graphs", "trees"]}, {"contestId": 1383, "index": "B", "name": "GameGame", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "dp", "games", "greedy", "math"]}, {"contestId": 1382, "index": "B", "name": "Sequential Nim", "type": "PROGRAMMING", "points": 1250.0, "rating": 1100, "tags": ["dp", "games"]}, {"contestId": 1381, "index": "D", "name": "The Majestic Brown Tree Snake", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dfs and similar", "dp", "greedy", "trees", "two pointers"]}, {"contestId": 1381, "index": "B", "name": "Unmerge", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 1380, "index": "F", "name": "Strange Addition", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "matrices"]}, {"contestId": 1380, "index": "C", "name": "Create The Teams", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1379, "index": "E", "name": "Inverse Genealogy", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "divide and conquer", "dp", "math", "trees"]}, {"contestId": 1379, "index": "C", "name": "Choosing flowers", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1373, "index": "E", "name": "Sum of Digits", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "greedy"]}, {"contestId": 1373, "index": "D", "name": "Maximum Sum on Even Positions", "type": "PROGRAMMING", "rating": 1600, "tags": ["divide and conquer", "dp", "greedy", "implementation"]}, {"contestId": 1372, "index": "E", "name": "Omkar and Last Floor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1372, "index": "D", "name": "Omkar and Circle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "dp", "games", "greedy"]}, {"contestId": 1371, "index": "E2", "name": "Asterism (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["binary search", "combinatorics", "dp", "math", "number theory", "sortings"]}, {"contestId": 1370, "index": "D", "name": "Odd-Even Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "dp", "dsu", "greedy", "implementation"]}, {"contestId": 1369, "index": "F", "name": "BareLee", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "dp", "games"]}, {"contestId": 1369, "index": "D", "name": "TediousLee", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "graphs", "greedy", "math", "trees"]}, {"contestId": 1368, "index": "H1", "name": "Breadboard Capacity (easy version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["dp", "flows", "greedy"]}, {"contestId": 1367, "index": "F2", "name": "Flying Sort (Hard Version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1367, "index": "F1", "name": "Flying Sort (Easy Version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1367, "index": "E", "name": "Necklace Assembly", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "number theory"]}, {"contestId": 1366, "index": "G", "name": "Construct the String", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "strings"]}, {"contestId": 1366, "index": "F", "name": "Jog Around The Graph", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "dp", "geometry", "graphs"]}, {"contestId": 1366, "index": "E", "name": "Two Arrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "brute force", "combinatorics", "constructive algorithms", "dp", "two pointers"]}, {"contestId": 1363, "index": "F", "name": "Rotating Substrings", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["dp", "strings"]}, {"contestId": 1363, "index": "E", "name": "Tree Shuffling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1360, "index": "F", "name": "Spy-string", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "hashing", "strings"]}, {"contestId": 1360, "index": "E", "name": "Polygon", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "graphs", "implementation", "shortest paths"]}, {"contestId": 1359, "index": "D", "name": "Yet Another Yet Another Task", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "implementation", "two pointers"]}, {"contestId": 1359, "index": "B", "name": "New Theatre Square", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "dp", "greedy", "implementation", "two pointers"]}, {"contestId": 1355, "index": "B", "name": "Young Explorers", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1354, "index": "F", "name": "Summoning Minions", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "dp", "flows", "graph matchings", "greedy", "sortings"]}, {"contestId": 1354, "index": "E", "name": "Graph Coloring", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs"]}, {"contestId": 1354, "index": "B", "name": "Ternary String", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "dp", "implementation", "two pointers"]}, {"contestId": 1353, "index": "F", "name": "Decreasing Heights", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dp"]}, {"contestId": 1353, "index": "E", "name": "K-periodic Garland", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1350, "index": "B", "name": "Orac and Models", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "math", "number theory"]}, {"contestId": 1349, "index": "F2", "name": "Slime and Sequences (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3500, "tags": ["dp", "fft", "math"]}, {"contestId": 1349, "index": "F1", "name": "Slime and Sequences (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["dp", "fft", "math"]}, {"contestId": 1349, "index": "E", "name": "Slime and Hats", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1348, "index": "E", "name": "Phoenix and Berries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "dp", "greedy", "math"]}, {"contestId": 1346, "index": "I", "name": "Pac-Man 2.0", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "dp"]}, {"contestId": 1346, "index": "E", "name": "Magic Tricks", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "dp", "graphs"]}, {"contestId": 1345, "index": "B", "name": "Card Constructions", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "brute force", "dp", "math"]}, {"contestId": 1344, "index": "C", "name": "Quantifier Question", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "math"]}, {"contestId": 1343, "index": "C", "name": "Alternating Subsequence", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1342, "index": "F", "name": "Make It Ascending", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 1340, "index": "C", "name": "Nastya and Unexpected Guest", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 1340, "index": "B", "name": "Nastya and Scoreboard", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["bitmasks", "dp", "graphs", "greedy"]}, {"contestId": 1339, "index": "A", "name": "Filling Diamonds", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "dp", "implementation", "math"]}, {"contestId": 1338, "index": "D", "name": "Nested Rubber Bands", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 1336, "index": "C", "name": "Kaavi and Magic Spell", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dp", "strings"]}, {"contestId": 1336, "index": "A", "name": "Linova and Kingdom", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"]}, {"contestId": 1335, "index": "E2", "name": "Three Blocks Palindrome (hard version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp", "two pointers"]}, {"contestId": 1335, "index": "E1", "name": "Three Blocks Palindrome (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"]}, {"contestId": 1334, "index": "F", "name": "Strange Function", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "greedy"]}, {"contestId": 1332, "index": "F", "name": "Independent Set", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1331, "index": "F", "name": "Elementary!", "type": "PROGRAMMING", "tags": ["*special", "brute force", "dp", "strings"]}, {"contestId": 1328, "index": "D", "name": "Carousel", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"]}, {"contestId": 1327, "index": "G", "name": "Letters and Question Marks", "type": "PROGRAMMING", "rating": 2800, "tags": ["bitmasks", "dp", "string suffix structures"]}, {"contestId": 1327, "index": "F", "name": "AND Segments", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "combinatorics", "data structures", "dp", "two pointers"]}, {"contestId": 1327, "index": "E", "name": "Count The Blocks", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1326, "index": "G", "name": "Spiderweb Trees", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "geometry", "trees"]}, {"contestId": 1326, "index": "F2", "name": "Wise Men (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3200, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 1326, "index": "F1", "name": "Wise Men (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"]}, {"contestId": 1324, "index": "F", "name": "Maximum White Subtree", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1324, "index": "E", "name": "Sleeping Schedule", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "implementation"]}, {"contestId": 1323, "index": "A", "name": "Even Subset Sum Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1322, "index": "F", "name": "Assigning Fares", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["dp", "trees"]}, {"contestId": 1322, "index": "D", "name": "Reality Show", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "dp"]}, {"contestId": 1320, "index": "E", "name": "Treeland and Viruses", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "dp", "shortest paths", "trees"]}, {"contestId": 1320, "index": "A", "name": "Journey Planning", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "dp", "greedy", "math", "sortings"]}, {"contestId": 1316, "index": "E", "name": "Team Building", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["bitmasks", "dp", "greedy", "sortings"]}, {"contestId": 1315, "index": "B", "name": "Homecoming", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "dp", "greedy", "strings"]}, {"contestId": 1313, "index": "D", "name": "Happy New Year", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["bitmasks", "dp", "implementation"]}, {"contestId": 1313, "index": "C2", "name": "Skyscrapers (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1313, "index": "C1", "name": "Skyscrapers (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "dp", "greedy"]}, {"contestId": 1312, "index": "G", "name": "Autocompletion", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dfs and similar", "dp"]}, {"contestId": 1312, "index": "E", "name": "Array Shrinking", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy"]}, {"contestId": 1310, "index": "E", "name": "Strange Function", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["dp"]}, {"contestId": 1310, "index": "D", "name": "Tourism", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "graphs", "probabilities"]}, {"contestId": 1310, "index": "C", "name": "Au Pont Rouge", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["binary search", "dp", "strings"]}, {"contestId": 1310, "index": "B", "name": "Double Elimination", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["dp", "implementation"]}, {"contestId": 1307, "index": "E", "name": "Cow and Treats", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "combinatorics", "dp", "greedy", "implementation", "math"]}, {"contestId": 1307, "index": "C", "name": "Cow and Message", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp", "math", "strings"]}, {"contestId": 1305, "index": "G", "name": "Kuroni and Antihype", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["bitmasks", "brute force", "dp", "dsu", "graphs"]}, {"contestId": 1304, "index": "F2", "name": "Animal Observation (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1304, "index": "F1", "name": "Animal Observation (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dp"]}, {"contestId": 1304, "index": "C", "name": "Air Conditioner", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy", "implementation", "sortings", "two pointers"]}, {"contestId": 1303, "index": "E", "name": "Erase Subsequences", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "strings"]}, {"contestId": 1301, "index": "E", "name": "Nanosoft", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "dp", "implementation"]}, {"contestId": 1299, "index": "D", "name": "Around the World", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "graphs", "graphs", "math", "trees"]}, {"contestId": 1297, "index": "H", "name": "Paint the String", "type": "PROGRAMMING", "tags": ["*special", "dp", "strings"]}, {"contestId": 1297, "index": "G", "name": "M-numbers", "type": "PROGRAMMING", "tags": ["*special", "dp", "math"]}, {"contestId": 1296, "index": "E2", "name": "String Coloring (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp"]}, {"contestId": 1296, "index": "E1", "name": "String Coloring (easy version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "sortings"]}, {"contestId": 1295, "index": "F", "name": "Good Contest", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 1295, "index": "C", "name": "Obtain The String", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "strings"]}, {"contestId": 1294, "index": "F", "name": "Three Paths on a Tree", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1292, "index": "F", "name": "Nora's Toy Boxes", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 1292, "index": "D", "name": "Chaotic V.", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["dp", "graphs", "greedy", "math", "number theory", "trees"]}, {"contestId": 1292, "index": "C", "name": "Xenon's Attack on the Gangs", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1290, "index": "F", "name": "Making Shapes", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["dp"]}, {"contestId": 1288, "index": "D", "name": "Minimax Problem", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "bitmasks", "dp"]}, {"contestId": 1288, "index": "C", "name": "Two Arrays", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "dp"]}, {"contestId": 1286, "index": "F", "name": "Harry The Potter", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["brute force", "constructive algorithms", "dp", "fft", "implementation", "math"]}, {"contestId": 1286, "index": "A", "name": "Garland", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1285, "index": "E", "name": "Delete a Segment", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "sortings", "trees", "two pointers"]}, {"contestId": 1285, "index": "D", "name": "Dr. Evil Underscores", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dfs and similar", "divide and conquer", "dp", "greedy", "strings", "trees"]}, {"contestId": 1285, "index": "B", "name": "Just Eat It!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1284, "index": "B", "name": "New Year and Ascent Sequence", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "combinatorics", "data structures", "dp", "implementation", "sortings"]}, {"contestId": 1283, "index": "E", "name": "New Year Parties", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "greedy"]}, {"contestId": 1282, "index": "B2", "name": "K for the Price of One (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1282, "index": "B1", "name": "K for the Price of One (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1280, "index": "D", "name": "Miss Punyverse", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["dp", "greedy", "trees"]}, {"contestId": 1279, "index": "F", "name": "New Year and Handle Change", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "dp"]}, {"contestId": 1279, "index": "E", "name": "New Year Permutations", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp"]}, {"contestId": 1278, "index": "F", "name": "Cards", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "math", "number theory", "probabilities"]}, {"contestId": 1278, "index": "C", "name": "Berry Jam", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "greedy", "implementation"]}, {"contestId": 1276, "index": "D", "name": "Tree Elimination", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "trees"]}, {"contestId": 1276, "index": "A", "name": "As Simple as One and Two", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dp", "greedy"]}, {"contestId": 1272, "index": "F", "name": "Two Bracket Sequences", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "strings", "two pointers"]}, {"contestId": 1272, "index": "D", "name": "Remove One Element", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp"]}, {"contestId": 1272, "index": "C", "name": "Yet Another Broken Keyboard", "type": "PROGRAMMING", "rating": 1200, "tags": ["combinatorics", "dp", "implementation"]}, {"contestId": 1271, "index": "E", "name": "Common Number", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["binary search", "combinatorics", "dp", "math"]}, {"contestId": 1271, "index": "D", "name": "Portals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 1268, "index": "E", "name": "Happy Cactus", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["dp"]}, {"contestId": 1268, "index": "B", "name": "Domino for Young", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "greedy", "math"]}, {"contestId": 1266, "index": "H", "name": "Red-Blue Graph", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["dp", "graphs", "math", "matrices", "meet-in-the-middle"]}, {"contestId": 1265, "index": "E", "name": "Beautiful Mirrors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dp", "math", "probabilities"]}, {"contestId": 1264, "index": "D1", "name": "Beautiful Bracket Sequence (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 1263, "index": "F", "name": "Economic Difficulties", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dp", "flows", "graphs", "trees"]}, {"contestId": 1260, "index": "E", "name": "Tournament", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1260, "index": "D", "name": "A Game with Traps", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp", "greedy", "sortings"]}, {"contestId": 1257, "index": "E", "name": "The Contest", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1257, "index": "D", "name": "Yet Another Monster Killing Problem", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 1256, "index": "E", "name": "Yet Another Division Into Teams", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1253, "index": "E", "name": "Antenna Coverage", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "sortings"]}, {"contestId": 1253, "index": "C", "name": "Sweets Eating", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy", "math", "sortings"]}, {"contestId": 1252, "index": "J", "name": "Tiling Terrace", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dp"]}, {"contestId": 1252, "index": "D", "name": "Find String in a Grid", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "dp", "strings", "trees"]}, {"contestId": 1252, "index": "B", "name": "Cleaning Robots", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "trees"]}, {"contestId": 1251, "index": "E1", "name": "Voting (Easy Version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1250, "index": "G", "name": "Discarding Game", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1250, "index": "D", "name": "Conference Problem", "type": "PROGRAMMING", "rating": 3000, "tags": ["dp"]}, {"contestId": 1249, "index": "F", "name": "Maximum Weight Subset", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "trees"]}, {"contestId": 1249, "index": "E", "name": "By Elevator or Stairs?", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "shortest paths"]}, {"contestId": 1248, "index": "D1", "name": "The World Is Just a Programming Task (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1245, "index": "F", "name": "Daniel and Spring Cleaning", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "dp"]}, {"contestId": 1245, "index": "E", "name": "Hyakugoku and Ladders", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "probabilities", "shortest paths"]}, {"contestId": 1245, "index": "C", "name": "Constanze's Machine", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp"]}, {"contestId": 1245, "index": "B", "name": "Restricted RPS", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1244, "index": "D", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "trees"]}, {"contestId": 1242, "index": "C", "name": "Sum Balance", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["bitmasks", "dfs and similar", "dp", "graphs"]}, {"contestId": 1239, "index": "E", "name": "Turtle", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "implementation"]}, {"contestId": 1239, "index": "A", "name": "Ivan the Fool and the Probability Theory", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1238, "index": "F", "name": "The Maximum Subtree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1238, "index": "E", "name": "Keyboard Purchase", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 1238, "index": "D", "name": "AB-string", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "combinatorics", "dp", "strings"]}, {"contestId": 1238, "index": "C", "name": "Standard Free2play", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "math"]}, {"contestId": 1237, "index": "G", "name": "Balanced Distribution", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1237, "index": "F", "name": "Balanced Domino Placements", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 1237, "index": "E", "name": "Balanced Binary Search Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp", "math"]}, {"contestId": 1236, "index": "E", "name": "Alice and the Unfair Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "data structures", "dp", "dsu"]}, {"contestId": 1234, "index": "F", "name": "Yet Another Substring Reverse", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 1234, "index": "C", "name": "Pipes", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation"]}, {"contestId": 1228, "index": "E", "name": "Another Filling the Grid", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1227, "index": "F1", "name": "Wrong Answer on test 233 (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dp"]}, {"contestId": 1225, "index": "G", "name": "To Make 1", "type": "PROGRAMMING", "points": 3750.0, "rating": 3100, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "number theory"]}, {"contestId": 1225, "index": "E", "name": "Rock Is Push", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["binary search", "dp"]}, {"contestId": 1223, "index": "F", "name": "Stack Exterminable Arrays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "hashing"]}, {"contestId": 1223, "index": "E", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dp", "sortings", "trees"]}, {"contestId": 1223, "index": "D", "name": "Sequence Sorting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 1221, "index": "G", "name": "Graph And Numbers", "type": "PROGRAMMING", "rating": 2900, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "meet-in-the-middle"]}, {"contestId": 1221, "index": "D", "name": "Make The Fence Great Again", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 1220, "index": "E", "name": "Tourism", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"]}, {"contestId": 1218, "index": "C", "name": "Jumping Transformers", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp"]}, {"contestId": 1218, "index": "A", "name": "BubbleReactor", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "graphs"]}, {"contestId": 1216, "index": "F", "name": "Wi-Fi", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1215, "index": "E", "name": "Marbles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 1215, "index": "B", "name": "The Number of Products", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["combinatorics", "dp", "implementation"]}, {"contestId": 1214, "index": "D", "name": "Treasure Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "flows", "hashing"]}, {"contestId": 1211, "index": "H", "name": "Road Repair in Treeland", "type": "PROGRAMMING", "rating": 3100, "tags": ["*special", "binary search", "dp", "trees"]}, {"contestId": 1210, "index": "G", "name": "Mateusz and Escape Room", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp"]}, {"contestId": 1209, "index": "E2", "name": "Rotate Columns (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "dp", "greedy", "sortings"]}, {"contestId": 1209, "index": "E1", "name": "Rotate Columns (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp", "greedy", "sortings"]}, {"contestId": 1208, "index": "F", "name": "Bits And Pieces", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "dfs and similar", "dp", "greedy"]}, {"contestId": 1207, "index": "C", "name": "Gas Pipeline", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "greedy"]}, {"contestId": 1206, "index": "B", "name": "Make Product Equal One", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["dp", "implementation"]}, {"contestId": 1204, "index": "E", "name": "Natasha, Sasha and the Prefix Sums", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 1204, "index": "C", "name": "Anna, Svyatoslav and Maps", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 1203, "index": "F2", "name": "Complete the Projects (hard version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy"]}, {"contestId": 1202, "index": "C", "name": "You Are Given a WASD-string...", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "math", "strings"]}, {"contestId": 1202, "index": "B", "name": "You Are Given a Decimal String...", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "shortest paths"]}, {"contestId": 1201, "index": "D", "name": "Treasure Hunting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "dp", "greedy", "implementation"]}, {"contestId": 1200, "index": "F", "name": "Graph Traveler", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "implementation", "math", "number theory"]}, {"contestId": 1200, "index": "D", "name": "White Lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "implementation", "two pointers"]}, {"contestId": 1200, "index": "B", "name": "Block Adventure", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "greedy"]}, {"contestId": 1198, "index": "D", "name": "Rectangle Painting 1", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 1197, "index": "F", "name": "Coloring Game", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "games", "matrices"]}, {"contestId": 1197, "index": "E", "name": "Culture Code", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "combinatorics", "data structures", "dp", "shortest paths", "sortings"]}, {"contestId": 1197, "index": "D", "name": "Yet Another Subarray Problem", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "greedy", "math"]}, {"contestId": 1196, "index": "D2", "name": "RGB Substring (hard version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "implementation", "two pointers"]}, {"contestId": 1195, "index": "C", "name": "Basketball Exercise", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["dp"]}, {"contestId": 1194, "index": "G", "name": "Another Meme Problem", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp"]}, {"contestId": 1194, "index": "F", "name": "Crossword Expert", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "number theory", "probabilities", "two pointers"]}, {"contestId": 1193, "index": "B", "name": "Magic Tree", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dp", "trees"]}, {"contestId": 1193, "index": "A", "name": "Amusement Park", "type": "PROGRAMMING", "tags": ["*special", "dp", "math"]}, {"contestId": 1192, "index": "C", "name": "Cubeword", "type": "PROGRAMMING", "tags": ["*special", "brute force", "dp", "meet-in-the-middle"]}, {"contestId": 1189, "index": "C", "name": "Candies!", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["data structures", "dp", "implementation", "math"]}, {"contestId": 1188, "index": "D", "name": "Make Equal", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["dp"]}, {"contestId": 1188, "index": "C", "name": "Array Beauty", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 1187, "index": "F", "name": "Expected Square Beauty", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1187, "index": "E", "name": "Tree Painting", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1185, "index": "G2", "name": "Playlist for Polycarp (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 1185, "index": "G1", "name": "Playlist for Polycarp (easy version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2100, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 1183, "index": "H", "name": "Subsequences (hard version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "strings"]}, {"contestId": 1183, "index": "E", "name": "Subsequences (easy version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "graphs", "implementation", "shortest paths"]}, {"contestId": 1182, "index": "E", "name": "Product Oriented Recurrence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "matrices", "number theory"]}, {"contestId": 1182, "index": "D", "name": "Complete Mirror", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dp", "hashing", "implementation", "trees"]}, {"contestId": 1182, "index": "A", "name": "Filling Shapes", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dp", "math"]}, {"contestId": 1181, "index": "C", "name": "Flag", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "combinatorics", "dp", "implementation"]}, {"contestId": 1180, "index": "A", "name": "Alex and a Rhombus", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dp", "implementation", "math"]}, {"contestId": 1179, "index": "D", "name": "Fedor Runs for President", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1178, "index": "F2", "name": "Long Colorful Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dp"]}, {"contestId": 1178, "index": "F1", "name": "Short Colorful Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["combinatorics", "dfs and similar", "dp"]}, {"contestId": 1178, "index": "B", "name": "WOW Factor", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["dp", "strings"]}, {"contestId": 1176, "index": "F", "name": "Destroy it!", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "implementation", "sortings"]}, {"contestId": 1176, "index": "C", "name": "Lose it!", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1175, "index": "G", "name": "Yet Another Partiton Problem", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "divide and conquer", "dp", "geometry", "two pointers"]}, {"contestId": 1175, "index": "E", "name": "Minimal Segment Cover", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "greedy", "implementation", "trees"]}, {"contestId": 1174, "index": "E", "name": "Ehab and the Expected GCD Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 1172, "index": "C2", "name": "Nauuo and Pictures (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2600, "tags": ["dp", "probabilities"]}, {"contestId": 1172, "index": "C1", "name": "Nauuo and Pictures (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["dp", "probabilities"]}, {"contestId": 1172, "index": "B", "name": "Nauuo and Circle", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "dp", "trees"]}, {"contestId": 1170, "index": "I", "name": "Good Subsets", "type": "PROGRAMMING", "tags": ["*special", "dp"]}, {"contestId": 1168, "index": "D", "name": "Anagram Paths", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["dp", "implementation", "trees"]}, {"contestId": 1168, "index": "C", "name": "And Reachability", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 1163, "index": "D", "name": "Mysterious Code", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dp", "strings"]}, {"contestId": 1158, "index": "F", "name": "Density of subarrays", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["dp", "math"]}, {"contestId": 1157, "index": "F", "name": "Maximum Balanced Circle", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dp", "greedy", "two pointers"]}, {"contestId": 1156, "index": "F", "name": "Card Bag", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1156, "index": "D", "name": "0-1-Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "divide and conquer", "dp", "dsu", "trees"]}, {"contestId": 1155, "index": "F", "name": "Delivery Oligopoly", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "graphs"]}, {"contestId": 1155, "index": "D", "name": "Beautiful Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"]}, {"contestId": 1154, "index": "F", "name": "Shovels Shop", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 1153, "index": "F", "name": "Serval and Bonus Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1153, "index": "D", "name": "Serval and Rooted Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1152, "index": "F2", "name": "Neko Rules the Catniverse (Large Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 3000, "tags": ["bitmasks", "dp", "matrices"]}, {"contestId": 1152, "index": "F1", "name": "Neko Rules the Catniverse (Small Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["bitmasks", "dp", "matrices"]}, {"contestId": 1152, "index": "D", "name": "Neko and Aki's Prank", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "greedy", "trees"]}, {"contestId": 1151, "index": "F", "name": "Sonya and Informatics", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["combinatorics", "dp", "matrices", "probabilities"]}, {"contestId": 1151, "index": "E", "name": "Number of Components", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "data structures", "dp", "math"]}, {"contestId": 1151, "index": "B", "name": "Dima and a Bad XOR", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"]}, {"contestId": 1149, "index": "D", "name": "Abandoning Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "dp", "graphs", "greedy"]}, {"contestId": 1149, "index": "B", "name": "Three Religions", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["dp", "implementation", "strings"]}, {"contestId": 1146, "index": "H", "name": "Satanic Panic", "type": "PROGRAMMING", "points": 3750.0, "rating": 2900, "tags": ["dp", "geometry"]}, {"contestId": 1146, "index": "G", "name": "Zoning Restrictions", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["dp", "flows", "graphs"]}, {"contestId": 1146, "index": "F", "name": "Leaf Partition", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["dp", "trees"]}, {"contestId": 1144, "index": "G", "name": "Two Merged Sequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "greedy"]}, {"contestId": 1142, "index": "D", "name": "Foreigner", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dp"]}, {"contestId": 1142, "index": "B", "name": "Lynyrd Skynyrd", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 1140, "index": "E", "name": "Palindrome-less Arrays", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "divide and conquer", "dp"]}, {"contestId": 1140, "index": "D", "name": "Minimum Triangulation", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "math"]}, {"contestId": 1139, "index": "D", "name": "Steps to One", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "number theory", "probabilities"]}, {"contestId": 1137, "index": "C", "name": "Museums Tour", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp", "graphs", "implementation"]}, {"contestId": 1133, "index": "E", "name": "K Balanced Teams", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "sortings", "two pointers"]}, {"contestId": 1132, "index": "G", "name": "Greedy Subsequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1132, "index": "F", "name": "Clear the String", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"]}, {"contestId": 1132, "index": "E", "name": "Knapsack", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "dp", "greedy"]}, {"contestId": 1131, "index": "G", "name": "Most Dangerous Shark", "type": "PROGRAMMING", "points": 3500.0, "rating": 2700, "tags": ["data structures", "dp", "two pointers"]}, {"contestId": 1131, "index": "E", "name": "String Multiplication", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp", "greedy", "strings"]}, {"contestId": 1131, "index": "D", "name": "Gourmet choice", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy"]}, {"contestId": 1129, "index": "D", "name": "Isolation", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures", "dp"]}, {"contestId": 1129, "index": "C", "name": "Morse Code", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "hashing", "sortings", "string suffix structures", "strings"]}, {"contestId": 1120, "index": "F", "name": "Secret Letters", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 1120, "index": "D", "name": "Power Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"]}, {"contestId": 1120, "index": "C", "name": "Compress String", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "strings"]}, {"contestId": 1119, "index": "F", "name": "Niyaz and Small Degrees", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1119, "index": "E", "name": "Pavel and Triangles", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["brute force", "dp", "fft", "greedy", "ternary search"]}, {"contestId": 1118, "index": "F2", "name": "Tree Cutting (Hard Version)", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dfs and similar", "dp", "trees"]}, {"contestId": 1117, "index": "F", "name": "Crisp String", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dp"]}, {"contestId": 1117, "index": "D", "name": "Magic Gems", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math", "matrices"]}, {"contestId": 1114, "index": "D", "name": "Flood Fill", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 1113, "index": "A", "name": "Sasha and His Trip", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["dp", "greedy", "math"]}, {"contestId": 1111, "index": "E", "name": "Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 1111, "index": "D", "name": "Destroy the Colony", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1110, "index": "H", "name": "Modest Substrings", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "strings"]}, {"contestId": 1110, "index": "D", "name": "Jongmah", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp"]}, {"contestId": 1109, "index": "D", "name": "Sasha and Interesting Fact from Graph Theory", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math", "trees"]}, {"contestId": 1109, "index": "A", "name": "Sasha and a Bit of Relax", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "implementation"]}, {"contestId": 1108, "index": "D", "name": "Diverse Garland", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 1107, "index": "G", "name": "Vasya and Maximum Profit", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "dsu"]}, {"contestId": 1107, "index": "F", "name": "Vasya and Endless Credits", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "flows", "graph matchings", "graphs", "sortings"]}, {"contestId": 1107, "index": "E", "name": "Vasya and Binary String", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp"]}, {"contestId": 1107, "index": "D", "name": "Compression", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "implementation", "math", "number theory"]}, {"contestId": 1106, "index": "E", "name": "Lunar New Year and Red Envelopes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["data structures", "dp"]}, {"contestId": 1105, "index": "E", "name": "Helping Hiasat ", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"]}, {"contestId": 1105, "index": "C", "name": "Ayoub and Lost Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1103, "index": "D", "name": "Professional layer", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["bitmasks", "dp"]}, {"contestId": 1102, "index": "F", "name": "Elongated Matrix", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "bitmasks", "brute force", "dp", "graphs"]}, {"contestId": 1101, "index": "F", "name": "Trucks and Cities", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dp"]}, {"contestId": 1101, "index": "D", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "number theory", "trees"]}, {"contestId": 1099, "index": "F", "name": "Cookies", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dp", "games", "trees"]}, {"contestId": 1097, "index": "H", "name": "Mateusz and an Infinite Sequence", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["bitmasks", "brute force", "dp", "strings"]}, {"contestId": 1097, "index": "G", "name": "Vladislav and a Great Legend", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 1097, "index": "D", "name": "Makoto and a Blackboard", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "math", "number theory", "probabilities"]}, {"contestId": 1097, "index": "B", "name": "Petr and a Combination Lock", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 1096, "index": "G", "name": "Lucky Tickets", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "fft"]}, {"contestId": 1096, "index": "F", "name": "Inversion Expectation", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1096, "index": "E", "name": "The Top Scorer", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 1096, "index": "D", "name": "Easy Problem", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 1093, "index": "F", "name": "Vasya and Array", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp"]}, {"contestId": 1092, "index": "F", "name": "Tree with Maximum Cost", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1091, "index": "D", "name": "New Year and the Permutation Concatenation", "type": "PROGRAMMING", "points": 2250.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1089, "index": "A", "name": "Alice the Fan", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"]}, {"contestId": 1088, "index": "E", "name": "Ehab and a component choosing problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp", "greedy", "math", "trees"]}, {"contestId": 1085, "index": "G", "name": "Beautiful Matrix", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["combinatorics", "data structures", "dp"]}, {"contestId": 1084, "index": "C", "name": "The Fair Nut and String", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["combinatorics", "dp", "implementation"]}, {"contestId": 1083, "index": "E", "name": "The Fair Nut and Rectangles", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "geometry"]}, {"contestId": 1083, "index": "A", "name": "The Fair Nut and the Best Path", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1082, "index": "F", "name": "Speed Dial", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "strings", "trees"]}, {"contestId": 1082, "index": "E", "name": "Increasing Frequency", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 1081, "index": "C", "name": "Colorful Bricks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1077, "index": "F2", "name": "Pictures with Kittens (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp"]}, {"contestId": 1077, "index": "F1", "name": "Pictures with Kittens (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"]}, {"contestId": 1076, "index": "F", "name": "Summer Practice Report", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "greedy"]}, {"contestId": 1073, "index": "F", "name": "Choosing Two Paths", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 1073, "index": "E", "name": "Segment Sum", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 1070, "index": "J", "name": "Streets and Avenues in Berhattan", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp"]}, {"contestId": 1070, "index": "G", "name": "Monsters and Potions", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 1070, "index": "A", "name": "Find a Number", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "graphs", "number theory", "shortest paths"]}, {"contestId": 1067, "index": "E", "name": "Random Forest Rank", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "graph matchings", "math", "trees"]}, {"contestId": 1067, "index": "D", "name": "Computer Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["dp", "greedy", "math", "probabilities"]}, {"contestId": 1067, "index": "A", "name": "Array Without Local Maximums ", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 1066, "index": "F", "name": "Yet another 2D Walking", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"]}, {"contestId": 1065, "index": "F", "name": "Up and Down the Tree", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1065, "index": "D", "name": "Three Pieces", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "shortest paths"]}, {"contestId": 1063, "index": "F", "name": "String Journey", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures", "dp", "string suffix structures"]}, {"contestId": 1061, "index": "C", "name": "Multiplicity", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp", "implementation", "math", "number theory"]}, {"contestId": 1060, "index": "F", "name": "Shrinking Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["combinatorics", "dp"]}, {"contestId": 1060, "index": "E", "name": "Sergey and Subway", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1059, "index": "E", "name": "Split the Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "trees"]}, {"contestId": 1057, "index": "C", "name": "Tanya and Colored Candies", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["*special", "dp"]}, {"contestId": 1056, "index": "F", "name": "Write The Contest", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "dp", "math"]}, {"contestId": 1056, "index": "D", "name": "Decorate Apple Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"]}, {"contestId": 1055, "index": "E", "name": "Segments on the Line", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["binary search", "dp"]}, {"contestId": 1051, "index": "E", "name": "Vasya and Big Integers", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "data structures", "dp", "hashing", "strings"]}, {"contestId": 1051, "index": "D", "name": "Bicolorings", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "dp"]}, {"contestId": 1051, "index": "C", "name": "Vasya and Multisets", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp", "greedy", "implementation", "math"]}, {"contestId": 1044, "index": "C", "name": "Optimal Polygon Perimeter", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "geometry"]}, {"contestId": 1043, "index": "F", "name": "Make It One", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory", "shortest paths"]}, {"contestId": 1042, "index": "E", "name": "Vasya and Magic Matrix", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "probabilities"]}, {"contestId": 1042, "index": "B", "name": "Vitamins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "dp", "implementation"]}, {"contestId": 1041, "index": "F", "name": "Ray in the tube", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math"]}, {"contestId": 1040, "index": "B", "name": "Shashlik Cooking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "math"]}, {"contestId": 1039, "index": "D", "name": "You Are Given a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1038, "index": "F", "name": "Wrap Around", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["dp", "strings"]}, {"contestId": 1038, "index": "E", "name": "Maximum Matching", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs"]}, {"contestId": 1038, "index": "D", "name": "Slime", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 1037, "index": "C", "name": "Equalize", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "strings"]}, {"contestId": 1036, "index": "C", "name": "Classy Numbers", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "dp"]}, {"contestId": 1034, "index": "E", "name": "Little C Loves 3 III", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 1034, "index": "C", "name": "Region Separation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["combinatorics", "dp", "number theory", "trees"]}, {"contestId": 1033, "index": "C", "name": "Permutation Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "dp", "games"]}, {"contestId": 1032, "index": "F", "name": "Vasya and Maximum Matching", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "trees"]}, {"contestId": 1032, "index": "E", "name": "The Unbearable Lightness of Weights", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "math"]}, {"contestId": 1032, "index": "C", "name": "Playing Piano", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dp"]}, {"contestId": 1030, "index": "E", "name": "Vasya and Good Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "dp"]}, {"contestId": 1029, "index": "E", "name": "Tree with Small Distances", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "graphs", "greedy"]}, {"contestId": 1029, "index": "B", "name": "Creating the Contest", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "math"]}, {"contestId": 1028, "index": "G", "name": "Guess the number", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["dp", "interactive"]}, {"contestId": 1027, "index": "E", "name": "Inverse Coloring", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 1025, "index": "D", "name": "Recovering BST", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "dp", "math", "number theory", "trees"]}, {"contestId": 1016, "index": "F", "name": "Road Projects", "type": "PROGRAMMING", "rating": 2600, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 1016, "index": "C", "name": "Vasya And The Mushrooms", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "implementation"]}, {"contestId": 1015, "index": "F", "name": "Bracket Substring", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "strings"]}, {"contestId": 1015, "index": "E2", "name": "Stars Drawing (Hard Edition)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 1015, "index": "E1", "name": "Stars Drawing (Easy Edition)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 1012, "index": "F", "name": "Passports", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["dp", "implementation"]}, {"contestId": 1012, "index": "C", "name": "Hills", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 1007, "index": "E", "name": "Mini Metro", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["dp"]}, {"contestId": 1006, "index": "F", "name": "Xor-Paths", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"]}, {"contestId": 1005, "index": "D", "name": "Polycarp and Div 3", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "greedy", "number theory"]}, {"contestId": 1004, "index": "E", "name": "Sonya and Ice Cream", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "trees"]}, {"contestId": 1003, "index": "F", "name": "Abbreviation", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "hashing", "strings"]}, {"contestId": 1000, "index": "G", "name": "Two-Paths", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "trees"]}, {"contestId": 1000, "index": "D", "name": "Yet Another Problem On a Subsequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "dp"]}, {"contestId": 999, "index": "F", "name": "Cards and Joy", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"]}, {"contestId": 998, "index": "B", "name": "Cutting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 997, "index": "B", "name": "Roman Digits", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["brute force", "combinatorics", "dp", "greedy", "math"]}, {"contestId": 996, "index": "A", "name": "Hit the Lottery", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dp", "greedy"]}, {"contestId": 995, "index": "F", "name": "Cowmpany Cowmpensation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "trees"]}, {"contestId": 993, "index": "D", "name": "Compute Power", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 991, "index": "D", "name": "Bishwock", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy"]}, {"contestId": 990, "index": "G", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "dsu", "number theory", "trees"]}, {"contestId": 990, "index": "F", "name": "Flow Control", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 989, "index": "E", "name": "A Trance of Nightfall", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "geometry", "matrices", "probabilities"]}, {"contestId": 988, "index": "F", "name": "Rain and Umbrellas", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"]}, {"contestId": 987, "index": "C", "name": "Three displays", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 985, "index": "E", "name": "Pencils and Boxes", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"]}, {"contestId": 983, "index": "C", "name": "Elevator", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 983, "index": "B", "name": "XOR-pyramid", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 982, "index": "C", "name": "Cut 'em all!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 981, "index": "H", "name": "K Paths", "type": "PROGRAMMING", "points": 3750.0, "rating": 3100, "tags": ["combinatorics", "data structures", "dp", "fft", "math"]}, {"contestId": 981, "index": "E", "name": "Addition on Segments", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["bitmasks", "data structures", "divide and conquer", "dp"]}, {"contestId": 981, "index": "D", "name": "Bookshelves", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 980, "index": "F", "name": "Cactus to Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "graphs", "trees"]}, {"contestId": 980, "index": "D", "name": "Perfect Groups", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "math", "number theory"]}, {"contestId": 979, "index": "E", "name": "Kuro and Topological Parity", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 979, "index": "D", "name": "Kuro and GCD and XOR and SUM", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp", "dsu", "greedy", "math", "number theory", "strings", "trees"]}, {"contestId": 977, "index": "F", "name": "Consecutive Subsequence", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp"]}, {"contestId": 965, "index": "E", "name": "Short Code", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "strings", "trees"]}, {"contestId": 963, "index": "B", "name": "Destruction of a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 961, "index": "B", "name": "Lecture Sleep", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "dp", "implementation", "two pointers"]}, {"contestId": 960, "index": "G", "name": "Bandit Blues", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 960, "index": "F", "name": "Pathwalks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dp", "graphs"]}, {"contestId": 960, "index": "E", "name": "Alternating Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "divide and conquer", "dp", "probabilities", "trees"]}, {"contestId": 959, "index": "F", "name": "Mahmoud and Ehab and yet another xor task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "dp", "math", "matrices"]}, {"contestId": 959, "index": "E", "name": "Mahmoud and Ehab and the xor-MST", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "dp", "graphs", "implementation", "math"]}, {"contestId": 958, "index": "E2", "name": "Guard Duty (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "dp", "greedy", "sortings"]}, {"contestId": 958, "index": "C3", "name": "Encryption (hard)", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dp"]}, {"contestId": 958, "index": "C2", "name": "Encryption (medium)", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"]}, {"contestId": 955, "index": "F", "name": "Heaps", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["dp", "trees"]}, {"contestId": 954, "index": "H", "name": "Path Counting", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "dp"]}, {"contestId": 954, "index": "F", "name": "Runner's Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "matrices", "sortings"]}, {"contestId": 946, "index": "G", "name": "Almost Increasing Array", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dp"]}, {"contestId": 946, "index": "F", "name": "Fibonacci String Subsequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "matrices"]}, {"contestId": 946, "index": "D", "name": "Timetable", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 940, "index": "E", "name": "Cashback", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp", "greedy", "math"]}, {"contestId": 940, "index": "B", "name": "Our Tanya is Crying Out Loud", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp", "greedy"]}, {"contestId": 939, "index": "F", "name": "Cutlet", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dp"]}, {"contestId": 938, "index": "F", "name": "Erasing Substrings", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 936, "index": "D", "name": "World of Tank", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["dp", "greedy"]}, {"contestId": 936, "index": "B", "name": "Sleepy Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "games", "graphs"]}, {"contestId": 935, "index": "E", "name": "Fafa and Ancient Mathematics", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 933, "index": "E", "name": "A Preponderant Reunion", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "dp"]}, {"contestId": 933, "index": "A", "name": "A Twisty Movement", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 932, "index": "G", "name": "Palindrome Partition", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "string suffix structures", "strings"]}, {"contestId": 932, "index": "F", "name": "Escape Through Leaf", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "dp", "geometry"]}, {"contestId": 932, "index": "E", "name": "Team Work", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 932, "index": "D", "name": "Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "dp", "trees"]}, {"contestId": 930, "index": "E", "name": "Coins Exhibition", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "dp", "math"]}, {"contestId": 930, "index": "C", "name": "Teodor is not a liar!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp"]}, {"contestId": 928, "index": "B", "name": "Chat", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["*special", "dp"]}, {"contestId": 924, "index": "F", "name": "Minimal Subset Difference", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp"]}, {"contestId": 924, "index": "E", "name": "Wardrobe", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "greedy"]}, {"contestId": 924, "index": "C", "name": "Riverside Curio", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 922, "index": "F", "name": "Divisibility", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "greedy", "number theory"]}, {"contestId": 922, "index": "E", "name": "Birds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp"]}, {"contestId": 920, "index": "D", "name": "Tanks", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 919, "index": "D", "name": "Substring", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs"]}, {"contestId": 919, "index": "B", "name": "Perfect Number", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["binary search", "brute force", "dp", "implementation", "number theory"]}, {"contestId": 917, "index": "D", "name": "Stranger Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "math", "matrices", "trees"]}, {"contestId": 917, "index": "C", "name": "Pollywog", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["combinatorics", "dp", "matrices"]}, {"contestId": 917, "index": "B", "name": "MADMAX", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["dfs and similar", "dp", "games", "graphs"]}, {"contestId": 917, "index": "A", "name": "The Monster", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy", "implementation", "math"]}, {"contestId": 915, "index": "C", "name": "Permute Digits", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "greedy"]}, {"contestId": 914, "index": "H", "name": "Ember and Storm's Tree Game", "type": "PROGRAMMING", "points": 3750.0, "rating": 3400, "tags": ["combinatorics", "dp", "games", "trees"]}, {"contestId": 914, "index": "G", "name": "Sum the Fibonacci", "type": "PROGRAMMING", "points": 3500.0, "rating": 2600, "tags": ["bitmasks", "divide and conquer", "dp", "fft", "math"]}, {"contestId": 914, "index": "C", "name": "Travelling Salesman and Special Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "combinatorics", "dp"]}, {"contestId": 913, "index": "F", "name": "Strongly Connected Tournament", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["dp", "graphs", "math", "probabilities"]}, {"contestId": 913, "index": "E", "name": "Logical Expression", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["bitmasks", "dp", "shortest paths"]}, {"contestId": 913, "index": "C", "name": "Party Lemonade", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 910, "index": "A", "name": "The Way to Home", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dfs and similar", "dp", "greedy", "implementation"]}, {"contestId": 909, "index": "E", "name": "Coprocessor", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "greedy"]}, {"contestId": 909, "index": "C", "name": "Python Indentation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 908, "index": "G", "name": "New Year and Original Order", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["dp", "math"]}, {"contestId": 908, "index": "E", "name": "New Year and Entity Enumeration", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 908, "index": "D", "name": "New Year and Arbitrary Arrangement", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dp", "math", "probabilities"]}, {"contestId": 906, "index": "E", "name": "Reverses", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["dp", "string suffix structures", "strings"]}, {"contestId": 906, "index": "C", "name": "Party", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dp", "graphs"]}, {"contestId": 903, "index": "F", "name": "Clear The Matrix", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 900, "index": "E", "name": "Maximum Questions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dp", "strings"]}, {"contestId": 900, "index": "D", "name": "Unusual Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"]}, {"contestId": 895, "index": "C", "name": "Square Subsets", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 894, "index": "E", "name": "Ralph and Mushrooms", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "graphs"]}, {"contestId": 894, "index": "A", "name": "QAQ", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "dp"]}, {"contestId": 893, "index": "E", "name": "Counting Arrays", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 893, "index": "D", "name": "Credit Card", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp", "greedy", "implementation"]}, {"contestId": 891, "index": "D", "name": "Sloth", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["dfs and similar", "dp", "graph matchings", "trees"]}, {"contestId": 891, "index": "A", "name": "Pride", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "dp", "greedy", "math", "number theory"]}, {"contestId": 889, "index": "E", "name": "Mod Mod Mod", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["binary search", "dp", "math"]}, {"contestId": 888, "index": "F", "name": "Connecting Vertices", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "graphs"]}, {"contestId": 888, "index": "D", "name": "Almost Identity Permutations", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 886, "index": "E", "name": "Maximum Element", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 883, "index": "I", "name": "Photo Processing", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp"]}, {"contestId": 883, "index": "D", "name": "Packmen Strike Back", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "dp", "math"]}, {"contestId": 878, "index": "E", "name": "Numbers on the blackboard", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["combinatorics", "dp"]}, {"contestId": 877, "index": "B", "name": "Nikita and string", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dp"]}, {"contestId": 875, "index": "E", "name": "Delivery Club", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 873, "index": "E", "name": "Awards For Contestants", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 873, "index": "B", "name": "Balanced Substring", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation"]}, {"contestId": 870, "index": "C", "name": "Maximum splitting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["dp", "greedy", "math", "number theory"]}, {"contestId": 869, "index": "C", "name": "The Intriguing Obsession", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 868, "index": "F", "name": "Yet Another Minimization Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "dp"]}, {"contestId": 868, "index": "E", "name": "Policeman and a Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "graphs", "trees"]}, {"contestId": 868, "index": "D", "name": "Huge Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dp", "implementation", "strings"]}, {"contestId": 868, "index": "C", "name": "Qualification Rounds", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"]}, {"contestId": 865, "index": "E", "name": "Hex Dyslexia", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["bitmasks", "brute force", "dp", "graphs"]}, {"contestId": 865, "index": "C", "name": "Gotta Go Fast", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "dp"]}, {"contestId": 864, "index": "E", "name": "Fire", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["dp", "sortings"]}, {"contestId": 859, "index": "D", "name": "Third Month Insanity", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "probabilities", "trees"]}, {"contestId": 859, "index": "C", "name": "Pie Rules", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "games"]}, {"contestId": 858, "index": "C", "name": "Did you mean...", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 856, "index": "D", "name": "Masha and Cactus", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "trees"]}, {"contestId": 856, "index": "C", "name": "Eleventh Birthday", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 856, "index": "B", "name": "Similar Words", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "hashing", "strings", "trees"]}, {"contestId": 855, "index": "G", "name": "Harry Vs Voldemort", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 855, "index": "E", "name": "Salazar Slytherin's Locket", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 855, "index": "C", "name": "Helga Hufflepuff's Cup", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "trees"]}, {"contestId": 855, "index": "B", "name": "Marvolo Gaunt's Ring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 853, "index": "D", "name": "Michael and Charging Stations", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 852, "index": "H", "name": "Bob and stages", "type": "PROGRAMMING", "rating": 3000, "tags": ["dp", "geometry"]}, {"contestId": 852, "index": "E", "name": "Casinos and travel", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"]}, {"contestId": 852, "index": "B", "name": "Neural Network country", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "matrices"]}, {"contestId": 850, "index": "D", "name": "Tournament Construction", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"]}, {"contestId": 850, "index": "C", "name": "Arpa and a game with Mojtaba", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["bitmasks", "dp", "games"]}, {"contestId": 848, "index": "E", "name": "Days of Floral Colours", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"]}, {"contestId": 848, "index": "D", "name": "Shake It!", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["combinatorics", "dp", "flows", "graphs"]}, {"contestId": 847, "index": "E", "name": "Packmen", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp"]}, {"contestId": 846, "index": "C", "name": "Four Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 845, "index": "F", "name": "Guards In The Storehouse", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dp"]}, {"contestId": 845, "index": "D", "name": "Driving Test", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 840, "index": "C", "name": "On the Bench", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp"]}, {"contestId": 840, "index": "B", "name": "Leha and another game about graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "graphs"]}, {"contestId": 839, "index": "D", "name": "Winter is here", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 839, "index": "C", "name": "Journey", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "probabilities", "trees"]}, {"contestId": 838, "index": "E", "name": "Convex Countour", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp"]}, {"contestId": 838, "index": "C", "name": "Future Failure", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "games"]}, {"contestId": 837, "index": "D", "name": "Round Subset", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math"]}, {"contestId": 835, "index": "F", "name": "Roads in the Kingdom", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 835, "index": "D", "name": "Palindromic characteristics", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp", "hashing", "strings"]}, {"contestId": 835, "index": "C", "name": "Star sky", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dp", "implementation"]}, {"contestId": 833, "index": "E", "name": "Caramel Clouds", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "dp", "sortings"]}, {"contestId": 833, "index": "B", "name": "The Bakery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"]}, {"contestId": 830, "index": "E", "name": "Perpetual Motion Machine", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["constructive algorithms", "dp", "graphs", "implementation", "math", "trees"]}, {"contestId": 830, "index": "D", "name": "Singer House", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["combinatorics", "dp", "graphs", "trees"]}, {"contestId": 830, "index": "A", "name": "Office Keys", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "brute force", "dp", "greedy", "sortings"]}, {"contestId": 827, "index": "F", "name": "Dirty Arkady's Kitchen", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dp", "graphs", "shortest paths"]}, {"contestId": 825, "index": "F", "name": "String Compression", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "hashing", "string suffix structures", "strings"]}, {"contestId": 822, "index": "E", "name": "Liar", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "dp", "hashing", "string suffix structures"]}, {"contestId": 822, "index": "D", "name": "My pretty girl Noora", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "dp", "greedy", "math", "number theory"]}, {"contestId": 821, "index": "E", "name": "Okabe and El Psy Kongroo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "matrices"]}, {"contestId": 817, "index": "C", "name": "Really Big Numbers", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "dp", "math"]}, {"contestId": 815, "index": "C", "name": "Karen and Supermarket", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["brute force", "dp", "trees"]}, {"contestId": 814, "index": "E", "name": "An unavoidable detour for home", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "graphs", "shortest paths"]}, {"contestId": 814, "index": "D", "name": "An overnight dance in discotheque", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "geometry", "greedy", "trees"]}, {"contestId": 814, "index": "C", "name": "An impassioned circulation of affection", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "dp", "strings", "two pointers"]}, {"contestId": 813, "index": "D", "name": "Two Melodies", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "flows"]}, {"contestId": 812, "index": "B", "name": "Sagheer, the Hausmeister", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 811, "index": "C", "name": "Vladik and Memorable Trip", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp", "implementation"]}, {"contestId": 809, "index": "D", "name": "Hitchhiking in the Baltic States", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dp"]}, {"contestId": 809, "index": "C", "name": "Find a car", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["combinatorics", "divide and conquer", "dp"]}, {"contestId": 808, "index": "G", "name": "Anthem of Berland", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "strings"]}, {"contestId": 808, "index": "E", "name": "Selling Souvenirs", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "dp", "greedy", "ternary search"]}, {"contestId": 804, "index": "F", "name": "Fake bullions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["combinatorics", "dfs and similar", "dp", "graphs", "number theory"]}, {"contestId": 804, "index": "D", "name": "Expected diameter of a tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "brute force", "dfs and similar", "dp", "sortings", "trees"]}, {"contestId": 803, "index": "E", "name": "Roma and Poker", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "graphs"]}, {"contestId": 802, "index": "L", "name": "Send the Fool Further! (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "dp", "math", "trees"]}, {"contestId": 802, "index": "K", "name": "Send the Fool Further! (medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "trees"]}, {"contestId": 799, "index": "D", "name": "Field expansion", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "dp", "meet-in-the-middle"]}, {"contestId": 798, "index": "C", "name": "Mike and gcd problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "greedy", "number theory"]}, {"contestId": 798, "index": "B", "name": "Mike and strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dp", "strings"]}, {"contestId": 797, "index": "F", "name": "Mice and Holes", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "greedy", "sortings"]}, {"contestId": 797, "index": "E", "name": "Array Queries", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 797, "index": "B", "name": "Odd sum", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 796, "index": "E", "name": "Exam Cheating", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "dp"]}, {"contestId": 796, "index": "D", "name": "Police Stations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths", "trees"]}, {"contestId": 796, "index": "C", "name": "Bank Hacking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "trees"]}, {"contestId": 794, "index": "G", "name": "Replace All", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 793, "index": "F", "name": "Julia the snail", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"]}, {"contestId": 793, "index": "E", "name": "Problem of offices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"]}, {"contestId": 793, "index": "D", "name": "Presents in Bankopolis", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 792, "index": "C", "name": "Divide by Three", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "greedy", "math", "number theory"]}, {"contestId": 788, "index": "A", "name": "Functions again", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "two pointers"]}, {"contestId": 786, "index": "A", "name": "Berzerk", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "games"]}, {"contestId": 785, "index": "D", "name": "Anton and School - 2", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 780, "index": "G", "name": "Andryusha and Nervous Barriers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures", "dp"]}, {"contestId": 780, "index": "F", "name": "Axel and Marston in Bitland", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "dp", "graphs", "matrices"]}, {"contestId": 778, "index": "E", "name": "Selling Numbers", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["dp", "sortings"]}, {"contestId": 777, "index": "E", "name": "Hanoi Factory", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"]}, {"contestId": 777, "index": "C", "name": "Alyona and Spreadsheet", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"]}, {"contestId": 777, "index": "B", "name": "Game of Credit Cards", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "dp", "greedy", "sortings"]}, {"contestId": 776, "index": "G", "name": "Sherlock and the Encrypted Data", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 774, "index": "J", "name": "Stepan's Series", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "dp"]}, {"contestId": 774, "index": "I", "name": "Composing Of String", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "dp"]}, {"contestId": 773, "index": "F", "name": "Test Data Generation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"]}, {"contestId": 773, "index": "D", "name": "Perishable Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 772, "index": "D", "name": "Varying Kibibits", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["bitmasks", "dp"]}, {"contestId": 772, "index": "C", "name": "Vulnerable Kerbals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dp", "graphs", "math", "number theory"]}, {"contestId": 771, "index": "E", "name": "Bear and Rectangle Strips", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["dp", "greedy"]}, {"contestId": 771, "index": "D", "name": "Bear and Company", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 771, "index": "C", "name": "Bear and Tree Jumps", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 768, "index": "E", "name": "Game of Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "dp", "games"]}, {"contestId": 768, "index": "D", "name": "Jon and Orbs", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dp", "math", "probabilities"]}, {"contestId": 768, "index": "C", "name": "Jon Snow and his Favourite Number", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "dp", "implementation", "sortings"]}, {"contestId": 766, "index": "E", "name": "Mahmoud and a xor trip", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "dp", "math", "trees"]}, {"contestId": 766, "index": "D", "name": "Mahmoud and a Dictionary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs"]}, {"contestId": 766, "index": "C", "name": "Mahmoud and a Message", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "dp", "greedy", "strings"]}, {"contestId": 765, "index": "G", "name": "Math, math everywhere", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["brute force", "dp", "math", "meet-in-the-middle", "number theory"]}, {"contestId": 765, "index": "E", "name": "Tree Folding", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "dp", "greedy", "implementation", "trees"]}, {"contestId": 763, "index": "A", "name": "Timofey and a tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"]}, {"contestId": 762, "index": "D", "name": "Maximum path", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 761, "index": "F", "name": "Dasha and Photos", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["brute force", "data structures", "dp", "implementation"]}, {"contestId": 761, "index": "C", "name": "Dasha and Password", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 758, "index": "E", "name": "Broken Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 758, "index": "D", "name": "Ability To Convert", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "dp", "greedy", "math", "strings"]}, {"contestId": 757, "index": "E", "name": "Bash Plays with Functions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "combinatorics", "dp", "number theory"]}, {"contestId": 757, "index": "D", "name": "Felicity's Big Secret Revealed", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 756, "index": "E", "name": "Byteland coins", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 756, "index": "D", "name": "Bacterial Melee", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "string suffix structures"]}, {"contestId": 756, "index": "B", "name": "Travel Card", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "dp"]}, {"contestId": 755, "index": "G", "name": "PolandBall and Many Other Balls", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"]}, {"contestId": 755, "index": "F", "name": "PolandBall and Gifts", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["bitmasks", "dp", "greedy"]}, {"contestId": 754, "index": "C", "name": "Vladik and chat", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "implementation", "strings"]}, {"contestId": 753, "index": "A", "name": "Santa Claus and Candies", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dp", "greedy", "math"]}, {"contestId": 750, "index": "G", "name": "New Year and Binary Tree Paths", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["bitmasks", "brute force", "combinatorics", "dp"]}, {"contestId": 750, "index": "E", "name": "New Year and Old Subsequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "matrices"]}, {"contestId": 750, "index": "D", "name": "New Year and Fireworks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation"]}, {"contestId": 747, "index": "F", "name": "Igor and Interesting Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "combinatorics", "dp", "math"]}, {"contestId": 747, "index": "D", "name": "Winter Is Coming", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 744, "index": "C", "name": "Hongcow Buys a Deck of Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 743, "index": "E", "name": "Vladik and cards", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "dp"]}, {"contestId": 743, "index": "D", "name": "Chloe and pleasant prizes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 741, "index": "B", "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "dp", "dsu"]}, {"contestId": 739, "index": "E", "name": "Gosha is hunting", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "data structures", "dp", "flows", "math", "probabilities", "sortings"]}, {"contestId": 735, "index": "E", "name": "Ostap and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "trees"]}, {"contestId": 734, "index": "E", "name": "Anton and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 734, "index": "C", "name": "Anton and Making Potions", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "two pointers"]}, {"contestId": 733, "index": "C", "name": "Epidemic in Monstropolis", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy", "two pointers"]}, {"contestId": 732, "index": "B", "name": "Cormen --- The Best Friend Of a Man", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["dp", "greedy"]}, {"contestId": 731, "index": "E", "name": "Funny Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "games"]}, {"contestId": 730, "index": "J", "name": "Bottles", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"]}, {"contestId": 730, "index": "I", "name": "Olympiad in Programming and Sports", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "flows", "graphs", "greedy"]}, {"contestId": 729, "index": "F", "name": "Financiers Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 729, "index": "B", "name": "Spotlights", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "implementation"]}, {"contestId": 727, "index": "F", "name": "Polycarp's problems", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 724, "index": "F", "name": "Uniformly Branched Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 724, "index": "E", "name": "Goods transportation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "flows", "greedy"]}, {"contestId": 722, "index": "E", "name": "Research Rover", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["combinatorics", "dp"]}, {"contestId": 721, "index": "E", "name": "Road to Home", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "dp"]}, {"contestId": 721, "index": "C", "name": "Journey", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "graphs"]}, {"contestId": 720, "index": "D", "name": "Slalom", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "dp", "sortings"]}, {"contestId": 718, "index": "D", "name": "Andrew and Chemistry", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "hashing", "trees"]}, {"contestId": 718, "index": "A", "name": "Efim and Strange Grade", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dp", "implementation", "math"]}, {"contestId": 717, "index": "B", "name": "R3D3\u2019s Summer Adventure", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "greedy"]}, {"contestId": 713, "index": "E", "name": "Sonya Partymaker", "type": "PROGRAMMING", "points": 2000.0, "rating": 3300, "tags": ["binary search", "dp"]}, {"contestId": 713, "index": "C", "name": "Sonya and Problem Wihtout a Legend", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "sortings"]}, {"contestId": 712, "index": "D", "name": "Memory and Scores", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 711, "index": "C", "name": "Coloring Trees", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 710, "index": "E", "name": "Generate a String", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp"]}, {"contestId": 708, "index": "E", "name": "Student's Camp", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "math"]}, {"contestId": 708, "index": "C", "name": "Centroids", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 706, "index": "C", "name": "Hard problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "strings"]}, {"contestId": 706, "index": "B", "name": "Interesting drink", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "dp", "implementation"]}, {"contestId": 704, "index": "C", "name": "Black Widow", "type": "PROGRAMMING", "points": 1250.0, "rating": 2900, "tags": ["dp", "graphs", "implementation", "math"]}, {"contestId": 704, "index": "B", "name": "Ant Man", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["dp", "graphs", "greedy"]}, {"contestId": 703, "index": "E", "name": "Mishka and Divisors", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["dp", "number theory"]}, {"contestId": 702, "index": "A", "name": "Maximum Increase", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 700, "index": "B", "name": "Connecting Universities", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 698, "index": "C", "name": "LRU", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["bitmasks", "dp", "math", "probabilities"]}, {"contestId": 698, "index": "A", "name": "Vacations", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dp"]}, {"contestId": 696, "index": "D", "name": "Legen...", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "dp", "matrices", "strings"]}, {"contestId": 696, "index": "C", "name": "PLEASE", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp", "implementation", "math", "matrices"]}, {"contestId": 691, "index": "F", "name": "Couple Cover", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dp", "number theory"]}, {"contestId": 690, "index": "D3", "name": "The Wall (hard)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"]}, {"contestId": 689, "index": "E", "name": "Mike and Geometry Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["combinatorics", "data structures", "dp", "geometry", "implementation"]}, {"contestId": 687, "index": "C", "name": "The Values You Can Make", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 685, "index": "B", "name": "Kay and Snowflake", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 685, "index": "A", "name": "Robbers' watch", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "combinatorics", "dp", "math"]}, {"contestId": 682, "index": "D", "name": "Alyona and Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "strings"]}, {"contestId": 682, "index": "C", "name": "Alyona and the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 679, "index": "B", "name": "Bear and Tower of Cubes", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 678, "index": "E", "name": "Another Sith Tournament", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp", "math", "probabilities"]}, {"contestId": 677, "index": "E", "name": "Vanya and Balloons", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "brute force", "dp", "implementation"]}, {"contestId": 677, "index": "D", "name": "Vanya and Treasure", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "dp", "graphs", "shortest paths"]}, {"contestId": 676, "index": "C", "name": "Vasya and String", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "dp", "strings", "two pointers"]}, {"contestId": 675, "index": "E", "name": "Trains and Statistic", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 671, "index": "D", "name": "Roads in Yusland", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 671, "index": "A", "name": "Recycling Bottles", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "geometry", "greedy", "implementation"]}, {"contestId": 666, "index": "A", "name": "Reberland Linguistics", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "implementation", "strings"]}, {"contestId": 665, "index": "F", "name": "Four Divisors", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dp", "math", "number theory", "sortings", "two pointers"]}, {"contestId": 665, "index": "C", "name": "Simple Strings", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "strings"]}, {"contestId": 662, "index": "E", "name": "To Hack or not to Hack", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 662, "index": "C", "name": "Binary Table", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "fft", "math"]}, {"contestId": 660, "index": "C", "name": "Hard Process", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "dp", "two pointers"]}, {"contestId": 659, "index": "G", "name": "Fence Divercity", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp", "number theory"]}, {"contestId": 653, "index": "B", "name": "Bear and Compressing", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dfs and similar", "dp", "strings"]}, {"contestId": 651, "index": "A", "name": "Joysticks", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["dp", "greedy", "implementation", "math"]}, {"contestId": 650, "index": "D", "name": "Zip-line", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dp", "hashing"]}, {"contestId": 650, "index": "C", "name": "Table Compression", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy"]}, {"contestId": 650, "index": "B", "name": "Image Preview", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "brute force", "dp", "two pointers"]}, {"contestId": 645, "index": "E", "name": "Intellectual Inquiry", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "greedy", "strings"]}, {"contestId": 645, "index": "D", "name": "Robot Rapping Results Report", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "dp", "graphs"]}, {"contestId": 643, "index": "F", "name": "Bears and Juice", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "math", "meet-in-the-middle"]}, {"contestId": 643, "index": "E", "name": "Bear and Destroying Subtrees", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "math", "probabilities", "trees"]}, {"contestId": 643, "index": "C", "name": "Levels and Regions", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 641, "index": "D", "name": "Little Artem and Random Variable", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["dp", "implementation", "math", "probabilities"]}, {"contestId": 637, "index": "D", "name": "Running with Obstacles", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["*special", "data structures", "dp", "greedy"]}, {"contestId": 633, "index": "F", "name": "The Chocolate Spree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 633, "index": "D", "name": "Fibonacci-ish", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["brute force", "dp", "hashing", "implementation", "math"]}, {"contestId": 633, "index": "C", "name": "Spy Syndrome 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp", "hashing", "implementation", "sortings", "string suffix structures", "strings"]}, {"contestId": 632, "index": "E", "name": "Thief in a Shop", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "fft", "math"]}, {"contestId": 631, "index": "E", "name": "Product Sum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "geometry"]}, {"contestId": 629, "index": "E", "name": "Famil Door and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "probabilities", "trees"]}, {"contestId": 629, "index": "D", "name": "Babaei and Birthday Cake", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp"]}, {"contestId": 629, "index": "C", "name": "Famil Door and Brackets", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "strings"]}, {"contestId": 628, "index": "D", "name": "Magic Numbers", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"]}, {"contestId": 628, "index": "B", "name": "New Skateboard", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp"]}, {"contestId": 627, "index": "D", "name": "Preorder Test", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "dfs and similar", "dp", "graphs", "greedy", "trees"]}, {"contestId": 627, "index": "A", "name": "XOR Equation", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dp", "math"]}, {"contestId": 626, "index": "G", "name": "Raffles", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dp", "greedy", "math"]}, {"contestId": 626, "index": "F", "name": "Group Projects", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 626, "index": "D", "name": "Jerry's Protest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "combinatorics", "dp", "probabilities"]}, {"contestId": 626, "index": "B", "name": "Cards", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 623, "index": "E", "name": "Transforming Sequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["combinatorics", "dp", "fft", "math"]}, {"contestId": 623, "index": "C", "name": "Electric Charges", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["binary search", "dp"]}, {"contestId": 623, "index": "B", "name": "Array GCD", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["dp", "greedy", "number theory"]}, {"contestId": 621, "index": "E", "name": "Wet Shark and Blocks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["dp", "matrices"]}, {"contestId": 618, "index": "G", "name": "Combining Slimes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["dp", "math", "matrices", "probabilities"]}, {"contestId": 618, "index": "D", "name": "Hamiltonian Spanning Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"]}, {"contestId": 615, "index": "C", "name": "Running Track", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "greedy", "strings", "trees"]}, {"contestId": 615, "index": "B", "name": "Longtail Hedgehog", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dp", "graphs"]}, {"contestId": 613, "index": "E", "name": "Puzzle Lover", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["dp", "hashing", "strings"]}, {"contestId": 613, "index": "D", "name": "Kingdom and its Cities", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dfs and similar", "divide and conquer", "dp", "graphs", "sortings", "trees"]}, {"contestId": 613, "index": "B", "name": "Skills", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["binary search", "brute force", "dp", "greedy", "sortings", "two pointers"]}, {"contestId": 612, "index": "F", "name": "Simba on the Circle", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp"]}, {"contestId": 611, "index": "D", "name": "New Year and Ancient Prophecy", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "hashing", "strings"]}, {"contestId": 611, "index": "C", "name": "New Year and Domino", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["dp", "implementation"]}, {"contestId": 607, "index": "B", "name": "Zuma", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 607, "index": "A", "name": "Chain Reaction", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "dp"]}, {"contestId": 603, "index": "A", "name": "Alternative Thinking", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "greedy", "math"]}, {"contestId": 602, "index": "B", "name": "Approximating a Constant Range", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "implementation", "two pointers"]}, {"contestId": 601, "index": "E", "name": "A Museum Robbery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "dp"]}, {"contestId": 601, "index": "C", "name": "Kleof\u00e1\u0161 and the n-thlon", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["dp", "math", "probabilities"]}, {"contestId": 599, "index": "E", "name": "Sandy and Nuts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "dp", "trees"]}, {"contestId": 598, "index": "E", "name": "Chocolate Bar", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp"]}, {"contestId": 597, "index": "C", "name": "Subsequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp"]}, {"contestId": 597, "index": "B", "name": "Restaurant", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 596, "index": "E", "name": "Wilbur and Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "graphs", "strings"]}, {"contestId": 596, "index": "D", "name": "Wilbur and Trees", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "probabilities", "sortings"]}, {"contestId": 593, "index": "E", "name": "Strange Calculation and Cats", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "matrices"]}, {"contestId": 592, "index": "D", "name": "Super M", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 590, "index": "D", "name": "Top Secret Task", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 587, "index": "B", "name": "Duff in Beach", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 585, "index": "F", "name": "Digits of Number Pi", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "implementation", "strings"]}, {"contestId": 582, "index": "E", "name": "Boolean Function", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["bitmasks", "dp", "expression parsing"]}, {"contestId": 582, "index": "D", "name": "Number of Binominal Coefficients", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["dp", "math", "number theory"]}, {"contestId": 582, "index": "B", "name": "Once Again...", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms", "dp", "matrices"]}, {"contestId": 581, "index": "F", "name": "Zublicanes and Mumocrates", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "trees", "two pointers"]}, {"contestId": 581, "index": "E", "name": "Kojiro and Furrari", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dp", "greedy"]}, {"contestId": 580, "index": "D", "name": "Kefa and Dishes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["bitmasks", "dp"]}, {"contestId": 580, "index": "A", "name": "Kefa and First Steps", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 578, "index": "D", "name": "LCS Again", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "greedy"]}, {"contestId": 577, "index": "B", "name": "Modulo Sum", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["combinatorics", "data structures", "dp", "two pointers"]}, {"contestId": 576, "index": "D", "name": "Flights for Regular Customers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "matrices"]}, {"contestId": 575, "index": "H", "name": "Bots", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 575, "index": "F", "name": "Bulbo", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy"]}, {"contestId": 573, "index": "D", "name": "Bear and Cavalry", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"]}, {"contestId": 573, "index": "B", "name": "Bear and Blocks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "data structures", "dp", "math"]}, {"contestId": 571, "index": "B", "name": "Minimization", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["dp", "greedy", "sortings"]}, {"contestId": 570, "index": "E", "name": "Pig and Palindromes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp"]}, {"contestId": 568, "index": "E", "name": "Longest Increasing Subsequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dp"]}, {"contestId": 568, "index": "B", "name": "Symmetric and Transitive", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 567, "index": "F", "name": "Mausoleum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 567, "index": "C", "name": "Geometric Progression", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 566, "index": "F", "name": "Clique in the Divisibility Graph", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp", "math", "number theory"]}, {"contestId": 559, "index": "E", "name": "Gerald and Path", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["dp", "sortings"]}, {"contestId": 559, "index": "C", "name": "Gerald and Giant Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 557, "index": "E", "name": "Ann and Half-Palindrome", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "graphs", "string suffix structures", "strings", "trees"]}, {"contestId": 557, "index": "C", "name": "Arthur and Table", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "greedy", "math", "sortings"]}, {"contestId": 553, "index": "E", "name": "Kyoya and Train", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "fft", "graphs", "math", "probabilities"]}, {"contestId": 553, "index": "A", "name": "Kyoya and Colored Balls", "type": "PROGRAMMING", "points": 250.0, "rating": 1500, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 552, "index": "E", "name": "Vanya and Brackets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "dp", "expression parsing", "greedy", "implementation", "strings"]}, {"contestId": 552, "index": "C", "name": "Vanya and Scales", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp", "greedy", "math", "meet-in-the-middle", "number theory"]}, {"contestId": 550, "index": "C", "name": "Divisibility by Eight", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dp", "math"]}, {"contestId": 550, "index": "A", "name": "Two Substrings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dp", "greedy", "implementation", "strings"]}, {"contestId": 548, "index": "B", "name": "Mike and Fun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dp", "greedy", "implementation"]}, {"contestId": 547, "index": "C", "name": "Mike and Foam", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"]}, {"contestId": 547, "index": "B", "name": "Mike and Feet", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "dsu"]}, {"contestId": 546, "index": "D", "name": "Soldier and Number Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dp", "math", "number theory"]}, {"contestId": 545, "index": "C", "name": "Woodcutters", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["dp", "greedy"]}, {"contestId": 543, "index": "D", "name": "Road Improvement", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp", "trees"]}, {"contestId": 543, "index": "C", "name": "Remembering Strings", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "dp"]}, {"contestId": 543, "index": "A", "name": "Writing Code", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 542, "index": "F", "name": "Quest", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dp", "greedy"]}, {"contestId": 542, "index": "D", "name": "Superhero's Job", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["dfs and similar", "dp", "hashing", "math", "number theory"]}, {"contestId": 540, "index": "D", "name": "Bad Luck Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "probabilities"]}, {"contestId": 538, "index": "E", "name": "Demiurges Play Again", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "math", "trees"]}, {"contestId": 538, "index": "B", "name": "Quasi Binary", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "dp", "greedy", "implementation"]}, {"contestId": 536, "index": "D", "name": "Tavas in Kansas", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "games"]}, {"contestId": 534, "index": "F", "name": "Simplified Nonogram", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["bitmasks", "dp", "hashing", "meet-in-the-middle"]}, {"contestId": 534, "index": "B", "name": "Covered Path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "greedy", "math"]}, {"contestId": 533, "index": "E", "name": "Correcting Mistakes", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy", "hashing", "strings", "two pointers"]}, {"contestId": 533, "index": "D", "name": "Landmarks", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dp"]}, {"contestId": 533, "index": "B", "name": "Work Group", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "graphs", "strings", "trees"]}, {"contestId": 527, "index": "D", "name": "Clique Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"]}, {"contestId": 526, "index": "E", "name": "Transmitting Levels", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["dp", "implementation"]}, {"contestId": 525, "index": "E", "name": "Anya and Cubes", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "brute force", "dp", "math", "meet-in-the-middle"]}, {"contestId": 524, "index": "B", "name": "\u0424\u043e\u0442\u043e \u043d\u0430 \u043f\u0430\u043c\u044f\u0442\u044c - 2 (round version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dp", "greedy"]}, {"contestId": 522, "index": "B", "name": "Photo to Remember", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["*special", "data structures", "dp", "implementation"]}, {"contestId": 522, "index": "A", "name": "Reposts", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["*special", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 520, "index": "E", "name": "Pluses everywhere", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"]}, {"contestId": 519, "index": "E", "name": "A and B and Lecture Rooms", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 519, "index": "D", "name": "A and B and Interesting Substrings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "two pointers"]}, {"contestId": 518, "index": "F", "name": "Pasha and Pipe", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "combinatorics", "dp", "implementation"]}, {"contestId": 518, "index": "D", "name": "Ilya and Escalator", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 516, "index": "D", "name": "Drazil and Morning Exercise", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "dp", "dsu", "trees", "two pointers"]}, {"contestId": 514, "index": "E", "name": "Darth Vader and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "matrices"]}, {"contestId": 513, "index": "G3", "name": "Inversions problem", "type": "PROGRAMMING", "points": 16.0, "rating": 3100, "tags": ["dp"]}, {"contestId": 513, "index": "G2", "name": "Inversions problem", "type": "PROGRAMMING", "points": 5.0, "rating": 2400, "tags": ["dp", "probabilities"]}, {"contestId": 513, "index": "G1", "name": "Inversions problem", "type": "PROGRAMMING", "points": 3.0, "rating": 1800, "tags": ["brute force", "dfs and similar", "dp", "meet-in-the-middle"]}, {"contestId": 513, "index": "E2", "name": "Subarray Cuts", "type": "PROGRAMMING", "points": 12.0, "rating": 2700, "tags": ["dp"]}, {"contestId": 513, "index": "E1", "name": "Subarray Cuts", "type": "PROGRAMMING", "points": 9.0, "rating": 2600, "tags": ["dp"]}, {"contestId": 512, "index": "D", "name": "Fox And Travelling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["dp", "trees"]}, {"contestId": 510, "index": "D", "name": "Fox And Jumping", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dp", "math"]}, {"contestId": 509, "index": "F", "name": "Progress Monitoring", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "trees"]}, {"contestId": 509, "index": "C", "name": "Sums of Digits", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 508, "index": "E", "name": "Arthur and Brackets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "greedy"]}, {"contestId": 507, "index": "E", "name": "Breaking Good", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 507, "index": "D", "name": "The Maths Lecture", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "implementation"]}, {"contestId": 506, "index": "E", "name": "Mr. Kitayuta's Gift", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["combinatorics", "dp", "matrices", "strings"]}, {"contestId": 505, "index": "C", "name": "Mr. Kitayuta, the Treasure Hunter", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dfs and similar", "dp", "two pointers"]}, {"contestId": 505, "index": "B", "name": "Mr. Kitayuta's Colorful Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "dp", "dsu", "graphs"]}, {"contestId": 500, "index": "F", "name": "New Year Shopping", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["divide and conquer", "dp"]}, {"contestId": 500, "index": "E", "name": "New Year Domino", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["data structures", "dp", "dsu"]}, {"contestId": 498, "index": "E", "name": "Stairs and Lines", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "matrices"]}, {"contestId": 498, "index": "D", "name": "Traffic Jams in the Land", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "number theory"]}, {"contestId": 498, "index": "B", "name": "Name That Tune", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "probabilities", "two pointers"]}, {"contestId": 497, "index": "E", "name": "Subsequences Return", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "matrices"]}, {"contestId": 494, "index": "D", "name": "Birthday", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 494, "index": "C", "name": "Helping People", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["dp", "probabilities"]}, {"contestId": 494, "index": "B", "name": "Obsessive String", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "strings"]}, {"contestId": 490, "index": "F", "name": "Treeland Tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dfs and similar", "dp", "trees"]}, {"contestId": 489, "index": "F", "name": "Special Matrices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["combinatorics", "dp"]}, {"contestId": 489, "index": "E", "name": "Hiking", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "dp"]}, {"contestId": 489, "index": "C", "name": "Given Length and Sum of Digits...", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 489, "index": "B", "name": "BerSU Ball", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "sortings", "two pointers"]}, {"contestId": 487, "index": "B", "name": "Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "two pointers"]}, {"contestId": 486, "index": "E", "name": "LIS of Sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "hashing", "math"]}, {"contestId": 486, "index": "D", "name": "Valid Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "math", "trees"]}, {"contestId": 484, "index": "D", "name": "Kindergarten", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 482, "index": "D", "name": "Random Function and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["combinatorics", "dp", "trees"]}, {"contestId": 482, "index": "C", "name": "Game with Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["bitmasks", "dp", "probabilities"]}, {"contestId": 480, "index": "D", "name": "Parcels", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "graphs"]}, {"contestId": 479, "index": "E", "name": "Riding in a Lift", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["combinatorics", "dp"]}, {"contestId": 478, "index": "D", "name": "Red-Green Towers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 477, "index": "D", "name": "Dreamoon and Binary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "strings"]}, {"contestId": 476, "index": "E", "name": "Dreamoon and Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "strings"]}, {"contestId": 476, "index": "B", "name": "Dreamoon and WiFi", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "math", "probabilities"]}, {"contestId": 474, "index": "E", "name": "Pillars", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "sortings", "trees"]}, {"contestId": 474, "index": "D", "name": "Flowers", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 468, "index": "E", "name": "Permanent", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "graph matchings", "math", "meet-in-the-middle"]}, {"contestId": 467, "index": "E", "name": "Alex and Complicated Task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"]}, {"contestId": 467, "index": "D", "name": "Fedor and Essay", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dfs and similar", "dp", "graphs", "hashing", "strings"]}, {"contestId": 467, "index": "C", "name": "George and Job", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "implementation"]}, {"contestId": 466, "index": "D", "name": "Increase Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "dp"]}, {"contestId": 466, "index": "C", "name": "Number of Ways", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"]}, {"contestId": 464, "index": "D", "name": "World of Darkraft - 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "probabilities"]}, {"contestId": 464, "index": "C", "name": "Substitutes in Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 463, "index": "D", "name": "Gargari and Permutations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "implementation"]}, {"contestId": 461, "index": "B", "name": "Appleman and Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 459, "index": "E", "name": "Pashmak and Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 1900, "tags": ["dp", "sortings"]}, {"contestId": 457, "index": "F", "name": "An easy problem about trees", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "games", "greedy", "trees"]}, {"contestId": 455, "index": "C", "name": "Civilization", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "ternary search", "trees"]}, {"contestId": 455, "index": "B", "name": "A Lot of Games", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "games", "implementation", "strings", "trees"]}, {"contestId": 455, "index": "A", "name": "Boredom", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp"]}, {"contestId": 453, "index": "D", "name": "Little Pony and Elements of Harmony", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dp", "matrices"]}, {"contestId": 453, "index": "B", "name": "Little Pony and Harmony Chest", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 449, "index": "E", "name": "Jzzhu and Squares", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "math", "number theory"]}, {"contestId": 449, "index": "D", "name": "Jzzhu and Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["bitmasks", "combinatorics", "dp"]}, {"contestId": 448, "index": "C", "name": "Painting Fence", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["divide and conquer", "dp", "greedy"]}, {"contestId": 446, "index": "A", "name": "DZY Loves Sequences", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "implementation", "two pointers"]}, {"contestId": 441, "index": "E", "name": "Valera and Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "dp", "math", "probabilities"]}, {"contestId": 440, "index": "D", "name": "Berland Federalization", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "trees"]}, {"contestId": 439, "index": "E", "name": "Devu and Birthday Celebration", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 437, "index": "E", "name": "The Child and Polygon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "geometry"]}, {"contestId": 436, "index": "F", "name": "Banners", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 436, "index": "D", "name": "Pudding Monsters", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp"]}, {"contestId": 435, "index": "D", "name": "Special Grid", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 433, "index": "E", "name": "Tachibana Kanade's Tofu", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 433, "index": "B", "name": "Kuriyama Mirai's Stones", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["dp", "implementation", "sortings"]}, {"contestId": 432, "index": "D", "name": "Prefixes and Suffixes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "string suffix structures", "strings", "two pointers"]}, {"contestId": 431, "index": "D", "name": "Random Task", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 431, "index": "C", "name": "k-Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "implementation", "trees"]}, {"contestId": 429, "index": "C", "name": "Guess the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "trees"]}, {"contestId": 429, "index": "B", "name": "Working out", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp"]}, {"contestId": 427, "index": "D", "name": "Match & Catch", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "string suffix structures", "strings"]}, {"contestId": 425, "index": "E", "name": "Sereja and Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 425, "index": "C", "name": "Sereja and Two Sequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dp"]}, {"contestId": 424, "index": "E", "name": "Colored Jenga", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dfs and similar", "dp", "probabilities"]}, {"contestId": 424, "index": "D", "name": "Biathlon Track", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp"]}, {"contestId": 417, "index": "D", "name": "Cunning Gena", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "dp", "greedy", "sortings"]}, {"contestId": 417, "index": "A", "name": "Elimination", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp", "implementation", "math"]}, {"contestId": 416, "index": "E", "name": "President's Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 416, "index": "C", "name": "Booking System", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "implementation"]}, {"contestId": 416, "index": "B", "name": "Art Union", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 414, "index": "B", "name": "Mashmokh and ACM", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["combinatorics", "dp", "number theory"]}, {"contestId": 413, "index": "D", "name": "2048", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "dp"]}, {"contestId": 407, "index": "D", "name": "Largest Submatrix 3", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "hashing"]}, {"contestId": 407, "index": "B", "name": "Long Path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp", "implementation"]}, {"contestId": 404, "index": "D", "name": "Minesweeper 1D", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "implementation"]}, {"contestId": 403, "index": "D", "name": "Beautiful Pairs of Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "dp"]}, {"contestId": 402, "index": "D", "name": "Upgrading Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy", "math", "number theory"]}, {"contestId": 401, "index": "D", "name": "Roman and Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "number theory"]}, {"contestId": 398, "index": "B", "name": "Painting The Wall", "type": "PROGRAMMING", "points": 1000.0, "tags": ["dp", "probabilities"]}, {"contestId": 392, "index": "B", "name": "Tower of Hanoi", "type": "PROGRAMMING", "points": 1000.0, "tags": ["dp"]}, {"contestId": 391, "index": "F1", "name": "Stock Trading", "type": "PROGRAMMING", "points": 8.0, "tags": ["dp"]}, {"contestId": 386, "index": "D", "name": "Game with Points", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "graphs", "implementation", "shortest paths"]}, {"contestId": 386, "index": "C", "name": "Diverse Substrings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "strings", "two pointers"]}, {"contestId": 385, "index": "D", "name": "Bear and Floodlight", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "dp", "geometry"]}, {"contestId": 385, "index": "C", "name": "Bear and Prime Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "math", "number theory"]}, {"contestId": 383, "index": "E", "name": "Vowels", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "divide and conquer", "dp"]}, {"contestId": 383, "index": "D", "name": "Antimatter", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 382, "index": "E", "name": "Ksenia and Combinatorics", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 379, "index": "G", "name": "New Year Cactus", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["dp"]}, {"contestId": 379, "index": "D", "name": "New Year Letter", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 377, "index": "E", "name": "Cookie Clicker", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "geometry"]}, {"contestId": 377, "index": "C", "name": "Captains Mode", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["bitmasks", "dp", "games"]}, {"contestId": 375, "index": "E", "name": "Red and Black Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dp", "implementation", "math"]}, {"contestId": 375, "index": "B", "name": "Maximum Submatrix 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "dp", "implementation", "sortings"]}, {"contestId": 374, "index": "D", "name": "Inna and Sequence ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "trees"]}, {"contestId": 374, "index": "C", "name": "Inna and Dima", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "implementation"]}, {"contestId": 372, "index": "C", "name": "Watching Fireworks is Fun", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures", "dp", "math"]}, {"contestId": 372, "index": "B", "name": "Counting Rectangles is Fun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "divide and conquer", "dp"]}, {"contestId": 370, "index": "E", "name": "Summer Reading", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "greedy"]}, {"contestId": 369, "index": "D", "name": "Valera and Fools", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"]}, {"contestId": 368, "index": "B", "name": "Sereja and Suffixes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "dp"]}, {"contestId": 367, "index": "E", "name": "Sereja and Intervals", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["combinatorics", "dp"]}, {"contestId": 366, "index": "C", "name": "Dima and Salad", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 364, "index": "B", "name": "Free Market", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dp", "greedy"]}, {"contestId": 363, "index": "B", "name": "Fence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "dp"]}, {"contestId": 362, "index": "C", "name": "Insertion Sort", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures", "dp", "implementation", "math"]}, {"contestId": 360, "index": "C", "name": "Levko and Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp"]}, {"contestId": 360, "index": "B", "name": "Levko and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "dp"]}, {"contestId": 359, "index": "B", "name": "Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 358, "index": "D", "name": "Dima and Hares", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy"]}, {"contestId": 356, "index": "E", "name": "Xenia and String Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings"]}, {"contestId": 356, "index": "D", "name": "Bags and Coins", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"]}, {"contestId": 354, "index": "E", "name": "Lucky Number Representation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "dp"]}, {"contestId": 354, "index": "D", "name": "Transferring Pyramid", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp"]}, {"contestId": 354, "index": "C", "name": "Vasya and Beautiful Arrays", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "dp", "number theory"]}, {"contestId": 354, "index": "B", "name": "Game with Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["bitmasks", "dp", "games"]}, {"contestId": 353, "index": "E", "name": "Antichain", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["dp", "graph matchings", "greedy"]}, {"contestId": 353, "index": "D", "name": "Queue", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "dp"]}, {"contestId": 351, "index": "C", "name": "Jeff and Brackets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp", "matrices"]}, {"contestId": 351, "index": "B", "name": "Jeff and Furik", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 351, "index": "A", "name": "Jeff and Rounding", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "greedy", "implementation", "math"]}, {"contestId": 349, "index": "B", "name": "Color the Fence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures", "dp", "greedy", "implementation"]}, {"contestId": 348, "index": "E", "name": "Pilgrims", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 348, "index": "D", "name": "Turtles", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "matrices"]}, {"contestId": 346, "index": "D", "name": "Robot Control", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 346, "index": "B", "name": "Lucky Common Subsequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "strings"]}, {"contestId": 342, "index": "D", "name": "Xenia and Dominoes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "dfs and similar", "dp"]}, {"contestId": 340, "index": "D", "name": "Bubble Sort Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 339, "index": "C", "name": "Xenia and Weights", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"]}, {"contestId": 337, "index": "D", "name": "Book of Evil", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "divide and conquer", "dp", "trees"]}, {"contestId": 336, "index": "E", "name": "Vasily the Bear and Painting Square", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks", "combinatorics", "dp", "implementation"]}, {"contestId": 335, "index": "F", "name": "Buy One, Get One Free", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "greedy"]}, {"contestId": 335, "index": "E", "name": "Counting Skyscrapers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "math", "probabilities"]}, {"contestId": 335, "index": "D", "name": "Rectangles and Square", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "dp"]}, {"contestId": 335, "index": "B", "name": "Palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "dp"]}, {"contestId": 332, "index": "E", "name": "Binary Key", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 332, "index": "B", "name": "Maximum Absurdity", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "dp", "implementation"]}, {"contestId": 331, "index": "E2", "name": "Deja Vu", "type": "PROGRAMMING", "points": 50.0, "rating": 3100, "tags": ["constructive algorithms", "dp"]}, {"contestId": 331, "index": "C3", "name": "The Great Julya Calendar", "type": "PROGRAMMING", "points": 60.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 331, "index": "C2", "name": "The Great Julya Calendar", "type": "PROGRAMMING", "points": 20.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 331, "index": "C1", "name": "The Great Julya Calendar", "type": "PROGRAMMING", "points": 20.0, "rating": 1100, "tags": ["dp"]}, {"contestId": 327, "index": "E", "name": "Axis Walking", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "meet-in-the-middle"]}, {"contestId": 327, "index": "A", "name": "Flipping Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 321, "index": "E", "name": "Ciel and Gondolas", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp"]}, {"contestId": 321, "index": "D", "name": "Ciel and Flipboard", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "greedy", "math"]}, {"contestId": 321, "index": "B", "name": "Ciel and Duel", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dp", "flows", "greedy"]}, {"contestId": 319, "index": "C", "name": "Kalila and Dimna in the Logging Industry", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "geometry"]}, {"contestId": 317, "index": "D", "name": "Game with Powers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dp", "games"]}, {"contestId": 316, "index": "D3", "name": "PE Lesson", "type": "PROGRAMMING", "points": 30.0, "rating": 2400, "tags": ["dp", "math"]}, {"contestId": 316, "index": "D2", "name": "PE Lesson", "type": "PROGRAMMING", "points": 40.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 316, "index": "D1", "name": "PE Lesson", "type": "PROGRAMMING", "points": 30.0, "rating": 2300, "tags": ["brute force", "dp"]}, {"contestId": 316, "index": "B2", "name": "EKG", "type": "PROGRAMMING", "points": 70.0, "rating": 1600, "tags": ["dfs and similar", "dp"]}, {"contestId": 314, "index": "E", "name": "Sereja and Squares", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp"]}, {"contestId": 314, "index": "C", "name": "Sereja and Subsequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dp"]}, {"contestId": 313, "index": "D", "name": "Ilya and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 313, "index": "B", "name": "Ilya and Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["dp", "implementation"]}, {"contestId": 311, "index": "B", "name": "Cats Transport", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["data structures", "dp"]}, {"contestId": 309, "index": "B", "name": "Context Advertising", "type": "PROGRAMMING", "points": 500.0, "rating": 2100, "tags": ["dp", "two pointers"]}, {"contestId": 303, "index": "E", "name": "Random Ranking", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "math", "probabilities"]}, {"contestId": 301, "index": "E", "name": "Yaroslav and Arrangements", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp"]}, {"contestId": 300, "index": "D", "name": "Painting Square", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["dp", "fft"]}, {"contestId": 296, "index": "B", "name": "Yaroslav and Two Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp"]}, {"contestId": 295, "index": "D", "name": "Greg and Caves", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dp"]}, {"contestId": 295, "index": "C", "name": "Greg and Friends", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "dp", "graphs", "shortest paths"]}, {"contestId": 295, "index": "B", "name": "Greg and Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 294, "index": "E", "name": "Shaass the Great", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp", "trees"]}, {"contestId": 294, "index": "B", "name": "Shaass and Bookshelf", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp", "greedy"]}, {"contestId": 292, "index": "D", "name": "Connected Components", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "dsu"]}, {"contestId": 289, "index": "B", "name": "Polo the Penguin and Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dp", "implementation", "sortings", "ternary search"]}, {"contestId": 288, "index": "E", "name": "Polo the Penguin and Lucky Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "implementation", "math"]}, {"contestId": 285, "index": "E", "name": "Positions in Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 285, "index": "D", "name": "Permutation Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "combinatorics", "dp", "implementation", "meet-in-the-middle"]}, {"contestId": 283, "index": "D", "name": "Cows and Cool Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "math", "number theory"]}, {"contestId": 283, "index": "C", "name": "Coin Troubles", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 283, "index": "B", "name": "Cow Program", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs"]}, {"contestId": 282, "index": "D", "name": "Yet Another Number Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "games"]}, {"contestId": 280, "index": "E", "name": "Sequence Transformation", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "data structures", "dp", "implementation", "math"]}, {"contestId": 279, "index": "E", "name": "Beautiful Decomposition", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "games", "greedy", "number theory"]}, {"contestId": 279, "index": "D", "name": "The Minimum Number of Variables", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 279, "index": "C", "name": "Ladder", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "implementation", "two pointers"]}, {"contestId": 277, "index": "D", "name": "Google Code Jam", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dp", "probabilities"]}, {"contestId": 276, "index": "D", "name": "Little Girl and Maximum XOR", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["bitmasks", "dp", "greedy", "implementation", "math"]}, {"contestId": 274, "index": "B", "name": "Zero Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 273, "index": "E", "name": "Dima and Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "games"]}, {"contestId": 273, "index": "D", "name": "Dima and Figure", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 269, "index": "D", "name": "Maximum Waterfall", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "dp", "graphs", "sortings"]}, {"contestId": 269, "index": "B", "name": "Greenhouse Effect", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 268, "index": "D", "name": "Wall Bars", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 264, "index": "E", "name": "Roadside Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dp"]}, {"contestId": 264, "index": "D", "name": "Colorful Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "two pointers"]}, {"contestId": 264, "index": "C", "name": "Choosing Balls", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 264, "index": "B", "name": "Good Sequences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "number theory"]}, {"contestId": 263, "index": "E", "name": "Rhombus", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["brute force", "data structures", "dp"]}, {"contestId": 261, "index": "E", "name": "Maxim and Calculator", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["brute force", "dp", "two pointers"]}, {"contestId": 261, "index": "D", "name": "Maxim and Increasing Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp"]}, {"contestId": 261, "index": "C", "name": "Maxim and Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 261, "index": "B", "name": "Maxim and Restaurant", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dp", "math", "probabilities"]}, {"contestId": 258, "index": "D", "name": "Little Elephant and Broken Sorting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "math", "probabilities"]}, {"contestId": 258, "index": "C", "name": "Little Elephant and LCM", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "combinatorics", "dp", "math"]}, {"contestId": 258, "index": "B", "name": "Little Elephant and Elections", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "combinatorics", "dp"]}, {"contestId": 256, "index": "D", "name": "Liars and Serge", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp"]}, {"contestId": 255, "index": "C", "name": "Almost Arithmetical Progression", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp"]}, {"contestId": 254, "index": "E", "name": "Dormitory", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "implementation"]}, {"contestId": 253, "index": "B", "name": "Physics Practical", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "dp", "sortings", "two pointers"]}, {"contestId": 251, "index": "E", "name": "Tree and Table", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dfs and similar", "dp", "implementation", "trees"]}, {"contestId": 251, "index": "C", "name": "Number Transformation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "greedy", "number theory"]}, {"contestId": 249, "index": "D", "name": "Donkey and Stars", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["data structures", "dp", "geometry", "math", "sortings"]}, {"contestId": 248, "index": "E", "name": "Piglet's Birthday", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "math", "probabilities"]}, {"contestId": 246, "index": "E", "name": "Blood Cousins Return", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dp", "sortings"]}, {"contestId": 245, "index": "H", "name": "Queries for Number of Palindromes", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "hashing", "strings"]}, {"contestId": 243, "index": "D", "name": "Cubes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures", "dp", "geometry", "two pointers"]}, {"contestId": 238, "index": "E", "name": "Meeting Her", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 238, "index": "C", "name": "World Eater Brothers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "greedy", "trees"]}, {"contestId": 235, "index": "E", "name": "Number Challenge", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "implementation", "math", "number theory"]}, {"contestId": 235, "index": "B", "name": "Let's Play Osu!", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "math", "probabilities"]}, {"contestId": 234, "index": "F", "name": "Fence", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"]}, {"contestId": 234, "index": "C", "name": "Weather", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "implementation"]}, {"contestId": 232, "index": "E", "name": "Quick Tortoise", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["bitmasks", "divide and conquer", "dp"]}, {"contestId": 232, "index": "C", "name": "Doe Graphs", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["constructive algorithms", "divide and conquer", "dp", "graphs", "shortest paths"]}, {"contestId": 232, "index": "B", "name": "Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "combinatorics", "dp", "math"]}, {"contestId": 231, "index": "E", "name": "Cactus", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 229, "index": "E", "name": "Gifts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 229, "index": "D", "name": "Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dp", "greedy", "two pointers"]}, {"contestId": 228, "index": "C", "name": "Fractal Detector", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "hashing"]}, {"contestId": 225, "index": "C", "name": "Barcode", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "matrices"]}, {"contestId": 223, "index": "B", "name": "Two Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dp", "strings"]}, {"contestId": 222, "index": "E", "name": "Decoding Genome", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["dp", "matrices"]}, {"contestId": 219, "index": "D", "name": "Choosing Capital for Treeland", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 219, "index": "C", "name": "Color Stripe", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 217, "index": "C", "name": "Formurosa", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["divide and conquer", "dp", "expression parsing"]}, {"contestId": 215, "index": "E", "name": "Periodical Numbers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["combinatorics", "dp", "number theory"]}, {"contestId": 213, "index": "C", "name": "Relay Race", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 213, "index": "B", "name": "Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dp"]}, {"contestId": 212, "index": "E", "name": "IT Restaurants", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 212, "index": "C", "name": "Cowboys", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 209, "index": "A", "name": "Multicolored Marbles", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "math"]}, {"contestId": 208, "index": "C", "name": "Police Station", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["dp", "graphs", "shortest paths"]}, {"contestId": 208, "index": "B", "name": "Solitaire", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp"]}, {"contestId": 204, "index": "D", "name": "Little Elephant and Retro Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 204, "index": "A", "name": "Little Elephant and Interval", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "combinatorics", "dp"]}, {"contestId": 201, "index": "D", "name": "Brand New Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["bitmasks", "brute force", "dp"]}, {"contestId": 201, "index": "C", "name": "Fragile Bridges", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 201, "index": "A", "name": "Clear Symmetry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "dp", "math"]}, {"contestId": 191, "index": "A", "name": "Dynasty Puzzles", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp"]}, {"contestId": 189, "index": "A", "name": "Cut Ribbon", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "dp"]}, {"contestId": 187, "index": "B", "name": "AlgoRace", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "shortest paths"]}, {"contestId": 185, "index": "C", "name": "Clever Fat Rat", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 183, "index": "D", "name": "T-shirt", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "greedy", "probabilities"]}, {"contestId": 182, "index": "E", "name": "Wooden Fence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 180, "index": "E", "name": "Cubes", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp", "two pointers"]}, {"contestId": 180, "index": "C", "name": "Letter", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp"]}, {"contestId": 178, "index": "F2", "name": "Representative Sampling", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["dp", "sortings", "strings"]}, {"contestId": 176, "index": "D", "name": "Hyper String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp"]}, {"contestId": 176, "index": "B", "name": "Word Cut", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 175, "index": "E", "name": "Power Defence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["brute force", "dp", "geometry", "greedy"]}, {"contestId": 175, "index": "D", "name": "Plane of Tanks: Duel", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "dp", "math", "probabilities"]}, {"contestId": 174, "index": "B", "name": "File List", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "greedy", "implementation"]}, {"contestId": 173, "index": "C", "name": "Spiral Maximum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp"]}, {"contestId": 167, "index": "B", "name": "Wizards and Huge Prize", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "math", "probabilities"]}, {"contestId": 166, "index": "E", "name": "Tetrahedron", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "math", "matrices"]}, {"contestId": 166, "index": "D", "name": "Shoe Store", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "graph matchings", "greedy", "sortings", "two pointers"]}, {"contestId": 165, "index": "E", "name": "Compatible Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dfs and similar", "dp"]}, {"contestId": 165, "index": "C", "name": "Another Problem on Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force", "dp", "math", "strings", "two pointers"]}, {"contestId": 163, "index": "E", "name": "e-Government", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "dp", "strings", "trees"]}, {"contestId": 163, "index": "A", "name": "Substring and Subsequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 161, "index": "E", "name": "Polycarpus the Safecracker", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "dp"]}, {"contestId": 161, "index": "D", "name": "Distance in Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "trees"]}, {"contestId": 159, "index": "D", "name": "Palindrome pairs", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["*special", "brute force", "dp", "strings"]}, {"contestId": 158, "index": "E", "name": "Phone Talks", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["*special", "dp", "sortings"]}, {"contestId": 156, "index": "E", "name": "Mrs. Hudson's Pancakes", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "dp"]}, {"contestId": 156, "index": "C", "name": "Cipher", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp"]}, {"contestId": 152, "index": "E", "name": "Garden", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "dp", "graphs", "trees"]}, {"contestId": 150, "index": "D", "name": "Mission Impassable", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dp", "strings"]}, {"contestId": 149, "index": "D", "name": "Coloring Brackets", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 148, "index": "E", "name": "Porcelain", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 148, "index": "D", "name": "Bag of mice", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "games", "math", "probabilities"]}, {"contestId": 145, "index": "C", "name": "Lucky Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 142, "index": "C", "name": "Help Caretaker", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "dp"]}, {"contestId": 141, "index": "E", "name": "Clearing Up", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "dp", "dsu", "graphs"]}, {"contestId": 140, "index": "E", "name": "New Year Garland", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 138, "index": "E", "name": "Hellish Constraints", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "dp", "two pointers"]}, {"contestId": 138, "index": "D", "name": "World of Darkraft", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "games"]}, {"contestId": 137, "index": "D", "name": "Palindromes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "strings"]}, {"contestId": 132, "index": "D", "name": "Constants in the language of Shakespeare", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dp", "greedy"]}, {"contestId": 132, "index": "C", "name": "Logo Turtle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 128, "index": "C", "name": "Games with Rectangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp"]}, {"contestId": 126, "index": "D", "name": "Fibonacci Sums", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "math"]}, {"contestId": 126, "index": "B", "name": "Password", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "dp", "hashing", "string suffix structures", "strings"]}, {"contestId": 123, "index": "E", "name": "Maze", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "probabilities", "trees"]}, {"contestId": 123, "index": "C", "name": "Brackets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "dp", "greedy"]}, {"contestId": 120, "index": "F", "name": "Spiders", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp", "greedy", "trees"]}, {"contestId": 119, "index": "C", "name": "Education Reform", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 118, "index": "D", "name": "Caesar's Legions", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 115, "index": "E", "name": "Linear Kingdom Races", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dp"]}, {"contestId": 115, "index": "D", "name": "Unambiguous Arithmetic Expression", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "expression parsing"]}, {"contestId": 111, "index": "D", "name": "Petya and Coloring", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "dp"]}, {"contestId": 111, "index": "C", "name": "Petya and Spiders", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["bitmasks", "dp", "dsu"]}, {"contestId": 109, "index": "C", "name": "Lucky Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp", "dsu", "trees"]}, {"contestId": 107, "index": "D", "name": "Crime Management", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "graphs", "matrices"]}, {"contestId": 107, "index": "C", "name": "Arrangement", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["bitmasks", "dp"]}, {"contestId": 107, "index": "B", "name": "Basketball Team", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["combinatorics", "dp", "math", "probabilities"]}, {"contestId": 106, "index": "C", "name": "Buns", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp"]}, {"contestId": 101, "index": "E", "name": "Candies and Stones", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "dp"]}, {"contestId": 101, "index": "D", "name": "Castle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "greedy", "probabilities", "sortings", "trees"]}, {"contestId": 101, "index": "B", "name": "Buses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 98, "index": "E", "name": "Help Shrek and Donkey", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "games", "math", "probabilities"]}, {"contestId": 95, "index": "E", "name": "Lucky Country", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "dsu", "graphs"]}, {"contestId": 95, "index": "D", "name": "Horse Races", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math"]}, {"contestId": 95, "index": "B", "name": "Lucky Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "greedy"]}, {"contestId": 93, "index": "E", "name": "Lostborn", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "math", "number theory"]}, {"contestId": 93, "index": "D", "name": "Flags", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math", "matrices"]}, {"contestId": 89, "index": "B", "name": "Widget Library", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["dp", "expression parsing", "graphs", "implementation"]}, {"contestId": 87, "index": "D", "name": "Beautiful Road", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "sortings", "trees"]}, {"contestId": 87, "index": "C", "name": "Interesting Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "games", "math"]}, {"contestId": 86, "index": "C", "name": "Genetic engineering", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "string suffix structures", "trees"]}, {"contestId": 83, "index": "E", "name": "Two Subsequences", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["bitmasks", "dp"]}, {"contestId": 83, "index": "D", "name": "Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "math", "number theory"]}, {"contestId": 82, "index": "D", "name": "Two out of Three", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp"]}, {"contestId": 81, "index": "E", "name": "Pairs", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"]}, {"contestId": 79, "index": "D", "name": "Password", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "dp", "shortest paths"]}, {"contestId": 79, "index": "C", "name": "Beaver", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "hashing", "strings", "two pointers"]}, {"contestId": 78, "index": "C", "name": "Beaver Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "games", "number theory"]}, {"contestId": 77, "index": "D", "name": "Domino Carpet", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "implementation"]}, {"contestId": 77, "index": "C", "name": "Beavermuncher-0xFF", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "greedy", "trees"]}, {"contestId": 76, "index": "F", "name": "Tourist", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 76, "index": "D", "name": "Plus and xor", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "greedy", "math"]}, {"contestId": 76, "index": "C", "name": "Mutation", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "dp", "math"]}, {"contestId": 75, "index": "D", "name": "Big Maximum Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp", "greedy", "implementation", "math", "trees"]}, {"contestId": 74, "index": "B", "name": "Train", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "games", "greedy"]}, {"contestId": 73, "index": "C", "name": "LionAge II", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp"]}, {"contestId": 72, "index": "G", "name": "Fibonacci army", "type": "PROGRAMMING", "rating": 1000, "tags": ["*special", "dp"]}, {"contestId": 71, "index": "E", "name": "Nuclear Fusion", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "dp"]}, {"contestId": 71, "index": "C", "name": "Round Table Knights", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "math", "number theory"]}, {"contestId": 70, "index": "E", "name": "Information Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "implementation", "trees"]}, {"contestId": 69, "index": "D", "name": "Dot", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "games"]}, {"contestId": 68, "index": "D", "name": "Half-decay tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math", "probabilities"]}, {"contestId": 67, "index": "D", "name": "Optical Experiment", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp"]}, {"contestId": 67, "index": "C", "name": "Sequence of Balls", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dp"]}, {"contestId": 67, "index": "A", "name": "Partial Teacher", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "graphs", "greedy", "implementation"]}, {"contestId": 66, "index": "E", "name": "Petya and Post", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "dp"]}, {"contestId": 63, "index": "E", "name": "Sweets Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["bitmasks", "dfs and similar", "dp", "games", "implementation"]}, {"contestId": 62, "index": "E", "name": "World Evil", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "flows"]}, {"contestId": 58, "index": "E", "name": "Expression", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 57, "index": "D", "name": "Journey", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math"]}, {"contestId": 56, "index": "D", "name": "Changing a String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp"]}, {"contestId": 55, "index": "D", "name": "Beautiful numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "number theory"]}, {"contestId": 54, "index": "D", "name": "Writing a Song", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "dp", "strings"]}, {"contestId": 54, "index": "C", "name": "First Digit Law", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "math", "probabilities"]}, {"contestId": 53, "index": "E", "name": "Dead Ends", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "dp"]}, {"contestId": 51, "index": "F", "name": "Caterpillar", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "dp", "graphs", "trees"]}, {"contestId": 50, "index": "D", "name": "Bombing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "dp", "probabilities"]}, {"contestId": 49, "index": "E", "name": "Common ancestor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp"]}, {"contestId": 49, "index": "D", "name": "Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "dp", "implementation"]}, {"contestId": 48, "index": "G", "name": "Galaxy Union", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "trees", "two pointers"]}, {"contestId": 48, "index": "E", "name": "Ivan the Fool VS Gorynych the Dragon", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "games", "graphs"]}, {"contestId": 46, "index": "E", "name": "Comb", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp"]}, {"contestId": 45, "index": "B", "name": "School", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "dsu"]}, {"contestId": 44, "index": "H", "name": "Phone Number", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp"]}, {"contestId": 44, "index": "E", "name": "Anfisa the Monkey", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp"]}, {"contestId": 41, "index": "D", "name": "Pawn", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp"]}, {"contestId": 39, "index": "E", "name": "What Has Dirichlet Got to Do with That?", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "games"]}, {"contestId": 39, "index": "C", "name": "Moon Craters", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "sortings"]}, {"contestId": 38, "index": "H", "name": "The Great Marathon", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp"]}, {"contestId": 38, "index": "F", "name": "Smart Boy", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "games", "strings"]}, {"contestId": 38, "index": "E", "name": "Let's Go Rolling!", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "sortings"]}, {"contestId": 37, "index": "D", "name": "Lesson Timetable", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "dp", "math"]}, {"contestId": 35, "index": "D", "name": "Animals", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dp", "greedy"]}, {"contestId": 31, "index": "E", "name": "TV Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"]}, {"contestId": 30, "index": "C", "name": "Shooting Gallery", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "probabilities"]}, {"contestId": 28, "index": "D", "name": "Don't fear, DravDe is kind", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "hashing"]}, {"contestId": 28, "index": "C", "name": "Bath Queue", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["combinatorics", "dp", "probabilities"]}, {"contestId": 27, "index": "E", "name": "Number With The Given Amount Of Divisors", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "dp", "number theory"]}, {"contestId": 24, "index": "D", "name": "Broken robot", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "math", "probabilities"]}, {"contestId": 23, "index": "E", "name": "Tree", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp"]}, {"contestId": 22, "index": "B", "name": "Bargaining Table", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp"]}, {"contestId": 21, "index": "C", "name": "Stripe 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "dp", "sortings"]}, {"contestId": 19, "index": "B", "name": "Checkout Assistant", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"]}, {"contestId": 18, "index": "E", "name": "Flag 2", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"]}, {"contestId": 18, "index": "D", "name": "Seller Bob", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp", "greedy"]}, {"contestId": 17, "index": "C", "name": "Balance", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp"]}, {"contestId": 16, "index": "E", "name": "Fish", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dp", "probabilities"]}, {"contestId": 15, "index": "E", "name": "Triangles", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp"]}, {"contestId": 14, "index": "E", "name": "Camels", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"]}, {"contestId": 14, "index": "D", "name": "Two Paths", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees", "two pointers"]}, {"contestId": 13, "index": "D", "name": "Triangles", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "geometry"]}, {"contestId": 13, "index": "C", "name": "Sequence", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "sortings"]}, {"contestId": 11, "index": "E", "name": "Forward, march!", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "dp", "greedy"]}, {"contestId": 11, "index": "D", "name": "A Simple Task", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp", "graphs"]}, {"contestId": 10, "index": "D", "name": "LCIS", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp"]}, {"contestId": 10, "index": "B", "name": "Cinema Cashier", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation"]}, {"contestId": 9, "index": "D", "name": "How many trees?", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "divide and conquer", "dp"]}, {"contestId": 8, "index": "E", "name": "Beads", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "graphs"]}, {"contestId": 8, "index": "C", "name": "Looking for Order", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "dp"]}, {"contestId": 7, "index": "E", "name": "Defining Macros", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "expression parsing", "implementation"]}, {"contestId": 6, "index": "D", "name": "Lizards and Basements 2", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "dp"]}, {"contestId": 5, "index": "C", "name": "Longest Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings", "strings"]}, {"contestId": 4, "index": "D", "name": "Mysterious Present", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "sortings"]}, {"contestId": 2, "index": "B", "name": "The least round way", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "math"]}], "problemStatistics": [{"contestId": 2108, "index": "C", "solvedCount": 8562}, {"contestId": 2107, "index": "F2", "solvedCount": 231}, {"contestId": 2107, "index": "F1", "solvedCount": 1095}, {"contestId": 2107, "index": "C", "solvedCount": 6975}, {"contestId": 2106, "index": "F", "solvedCount": 2524}, {"contestId": 2106, "index": "D", "solvedCount": 7651}, {"contestId": 2104, "index": "F", "solvedCount": 447}, {"contestId": 2104, "index": "E", "solvedCount": 4982}, {"contestId": 2104, "index": "B", "solvedCount": 13710}, {"contestId": 2103, "index": "F", "solvedCount": 401}, {"contestId": 2101, "index": "F", "solvedCount": 51}, {"contestId": 2101, "index": "E", "solvedCount": 102}, {"contestId": 2097, "index": "F", "solvedCount": 45}, {"contestId": 2097, "index": "E", "solvedCount": 120}, {"contestId": 2097, "index": "B", "solvedCount": 1179}, {"contestId": 2096, "index": "H", "solvedCount": 110}, {"contestId": 2096, "index": "C", "solvedCount": 5655}, {"contestId": 2091, "index": "G", "solvedCount": 1164}, {"contestId": 2091, "index": "F", "solvedCount": 4784}, {"contestId": 2091, "index": "B", "solvedCount": 27716}, {"contestId": 2090, "index": "B", "solvedCount": 12749}, {"contestId": 2089, "index": "C2", "solvedCount": 156}, {"contestId": 2089, "index": "C1", "solvedCount": 904}, {"contestId": 2089, "index": "B2", "solvedCount": 935}, {"contestId": 2087, "index": "F", "solvedCount": 54}, {"contestId": 2087, "index": "E", "solvedCount": 138}, {"contestId": 2086, "index": "E", "solvedCount": 1145}, {"contestId": 2086, "index": "D", "solvedCount": 5972}, {"contestId": 2086, "index": "C", "solvedCount": 12437}, {"contestId": 2085, "index": "C", "solvedCount": 10128}, {"contestId": 2084, "index": "H", "solvedCount": 61}, {"contestId": 2084, "index": "G2", "solvedCount": 59}, {"contestId": 2084, "index": "G1", "solvedCount": 471}, {"contestId": 2084, "index": "E", "solvedCount": 1315}, {"contestId": 2081, "index": "E", "solvedCount": 43}, {"contestId": 2081, "index": "A", "solvedCount": 2580}, {"contestId": 2079, "index": "B", "solvedCount": 120}, {"contestId": 2079, "index": "A", "solvedCount": 20}, {"contestId": 2078, "index": "D", "solvedCount": 4813}, {"contestId": 2077, "index": "F", "solvedCount": 188}, {"contestId": 2077, "index": "E", "solvedCount": 448}, {"contestId": 2077, "index": "C", "solvedCount": 1326}, {"contestId": 2075, "index": "E", "solvedCount": 795}, {"contestId": 2075, "index": "D", "solvedCount": 4310}, {"contestId": 2074, "index": "G", "solvedCount": 1582}, {"contestId": 2072, "index": "E", "solvedCount": 9944}, {"contestId": 2071, "index": "E", "solvedCount": 325}, {"contestId": 2071, "index": "D2", "solvedCount": 761}, {"contestId": 2071, "index": "D1", "solvedCount": 5204}, {"contestId": 2071, "index": "C", "solvedCount": 7590}, {"contestId": 2070, "index": "F", "solvedCount": 259}, {"contestId": 2070, "index": "D", "solvedCount": 8155}, {"contestId": 2069, "index": "C", "solvedCount": 11811}, {"contestId": 2068, "index": "D", "solvedCount": 158}, {"contestId": 2067, "index": "B", "solvedCount": 15807}, {"contestId": 2066, "index": "F", "solvedCount": 49}, {"contestId": 2066, "index": "D2", "solvedCount": 439}, {"contestId": 2066, "index": "D1", "solvedCount": 1052}, {"contestId": 2066, "index": "C", "solvedCount": 1835}, {"contestId": 2066, "index": "B", "solvedCount": 4283}, {"contestId": 2065, "index": "H", "solvedCount": 1448}, {"contestId": 2065, "index": "C1", "solvedCount": 23054}, {"contestId": 2064, "index": "F", "solvedCount": 531}, {"contestId": 2064, "index": "D", "solvedCount": 4619}, {"contestId": 2064, "index": "C", "solvedCount": 14561}, {"contestId": 2063, "index": "F1", "solvedCount": 1211}, {"contestId": 2063, "index": "E", "solvedCount": 1926}, {"contestId": 2063, "index": "C", "solvedCount": 11804}, {"contestId": 2062, "index": "H", "solvedCount": 108}, {"contestId": 2062, "index": "F", "solvedCount": 480}, {"contestId": 2062, "index": "D", "solvedCount": 3045}, {"contestId": 2061, "index": "I", "solvedCount": 63}, {"contestId": 2061, "index": "F2", "solvedCount": 111}, {"contestId": 2061, "index": "E", "solvedCount": 3277}, {"contestId": 2061, "index": "C", "solvedCount": 8043}, {"contestId": 2060, "index": "G", "solvedCount": 986}, {"contestId": 2060, "index": "F", "solvedCount": 1991}, {"contestId": 2057, "index": "F", "solvedCount": 217}, {"contestId": 2057, "index": "E2", "solvedCount": 1625}, {"contestId": 2057, "index": "E1", "solvedCount": 2239}, {"contestId": 2056, "index": "F2", "solvedCount": 206}, {"contestId": 2056, "index": "F1", "solvedCount": 302}, {"contestId": 2056, "index": "E", "solvedCount": 835}, {"contestId": 2056, "index": "D", "solvedCount": 3043}, {"contestId": 2053, "index": "I2", "solvedCount": 49}, {"contestId": 2053, "index": "I1", "solvedCount": 444}, {"contestId": 2053, "index": "F", "solvedCount": 844}, {"contestId": 2053, "index": "E", "solvedCount": 3902}, {"contestId": 2053, "index": "C", "solvedCount": 10774}, {"contestId": 2053, "index": "A", "solvedCount": 20066}, {"contestId": 2052, "index": "M", "solvedCount": 315}, {"contestId": 2052, "index": "F", "solvedCount": 2606}, {"contestId": 2051, "index": "G", "solvedCount": 1923}, {"contestId": 2050, "index": "G", "solvedCount": 4382}, {"contestId": 2050, "index": "E", "solvedCount": 11910}, {"contestId": 2050, "index": "C", "solvedCount": 21274}, {"contestId": 2049, "index": "D", "solvedCount": 5030}, {"contestId": 2048, "index": "H", "solvedCount": 176}, {"contestId": 2048, "index": "G", "solvedCount": 524}, {"contestId": 2048, "index": "F", "solvedCount": 1099}, {"contestId": 2045, "index": "H", "solvedCount": 596}, {"contestId": 2044, "index": "H", "solvedCount": 1894}, {"contestId": 2044, "index": "G2", "solvedCount": 2894}, {"contestId": 2043, "index": "F", "solvedCount": 762}, {"contestId": 2043, "index": "C", "solvedCount": 9436}, {"contestId": 2042, "index": "F", "solvedCount": 744}, {"contestId": 2041, "index": "J", "solvedCount": 183}, {"contestId": 2041, "index": "H", "solvedCount": 733}, {"contestId": 2041, "index": "C", "solvedCount": 1433}, {"contestId": 2040, "index": "F", "solvedCount": 364}, {"contestId": 2040, "index": "E", "solvedCount": 2187}, {"contestId": 2039, "index": "F2", "solvedCount": 226}, {"contestId": 2039, "index": "F1", "solvedCount": 400}, {"contestId": 2039, "index": "E", "solvedCount": 2038}, {"contestId": 2038, "index": "M", "solvedCount": 268}, {"contestId": 2038, "index": "L", "solvedCount": 6489}, {"contestId": 2038, "index": "K", "solvedCount": 1458}, {"contestId": 2038, "index": "D", "solvedCount": 682}, {"contestId": 2037, "index": "G", "solvedCount": 3016}, {"contestId": 2037, "index": "E", "solvedCount": 6273}, {"contestId": 2036, "index": "F", "solvedCount": 4240}, {"contestId": 2035, "index": "G2", "solvedCount": 92}, {"contestId": 2035, "index": "G1", "solvedCount": 152}, {"contestId": 2035, "index": "F", "solvedCount": 951}, {"contestId": 2034, "index": "H", "solvedCount": 119}, {"contestId": 2034, "index": "F2", "solvedCount": 458}, {"contestId": 2034, "index": "F1", "solvedCount": 732}, {"contestId": 2033, "index": "G", "solvedCount": 1579}, {"contestId": 2033, "index": "D", "solvedCount": 15686}, {"contestId": 2033, "index": "C", "solvedCount": 15424}, {"contestId": 2032, "index": "F", "solvedCount": 405}, {"contestId": 2031, "index": "E", "solvedCount": 2320}, {"contestId": 2031, "index": "D", "solvedCount": 7914}, {"contestId": 2031, "index": "A", "solvedCount": 19310}, {"contestId": 2030, "index": "F", "solvedCount": 948}, {"contestId": 2030, "index": "E", "solvedCount": 1623}, {"contestId": 2029, "index": "H", "solvedCount": 81}, {"contestId": 2029, "index": "G", "solvedCount": 180}, {"contestId": 2029, "index": "C", "solvedCount": 6330}, {"contestId": 2028, "index": "F", "solvedCount": 460}, {"contestId": 2028, "index": "E", "solvedCount": 1605}, {"contestId": 2028, "index": "D", "solvedCount": 3178}, {"contestId": 2028, "index": "C", "solvedCount": 8355}, {"contestId": 2027, "index": "E2", "solvedCount": 79}, {"contestId": 2027, "index": "D2", "solvedCount": 1624}, {"contestId": 2027, "index": "D1", "solvedCount": 5873}, {"contestId": 2027, "index": "C", "solvedCount": 11574}, {"contestId": 2026, "index": "F", "solvedCount": 292}, {"contestId": 2026, "index": "D", "solvedCount": 4930}, {"contestId": 2025, "index": "F", "solvedCount": 904}, {"contestId": 2025, "index": "E", "solvedCount": 2059}, {"contestId": 2025, "index": "D", "solvedCount": 6872}, {"contestId": 2025, "index": "B", "solvedCount": 18109}, {"contestId": 2023, "index": "E", "solvedCount": 118}, {"contestId": 2023, "index": "D", "solvedCount": 506}, {"contestId": 2023, "index": "B", "solvedCount": 5978}, {"contestId": 2022, "index": "D2", "solvedCount": 681}, {"contestId": 2022, "index": "C", "solvedCount": 4953}, {"contestId": 2021, "index": "E3", "solvedCount": 544}, {"contestId": 2021, "index": "E2", "solvedCount": 991}, {"contestId": 2021, "index": "E1", "solvedCount": 1681}, {"contestId": 2021, "index": "D", "solvedCount": 828}, {"contestId": 2020, "index": "F", "solvedCount": 231}, {"contestId": 2020, "index": "E", "solvedCount": 3393}, {"contestId": 2020, "index": "D", "solvedCount": 6448}, {"contestId": 2019, "index": "A", "solvedCount": 25150}, {"contestId": 2018, "index": "F3", "solvedCount": 247}, {"contestId": 2018, "index": "F2", "solvedCount": 226}, {"contestId": 2018, "index": "F1", "solvedCount": 265}, {"contestId": 2018, "index": "D", "solvedCount": 1864}, {"contestId": 2018, "index": "B", "solvedCount": 4546}, {"contestId": 2014, "index": "F", "solvedCount": 4200}, {"contestId": 2013, "index": "F1", "solvedCount": 571}, {"contestId": 2013, "index": "E", "solvedCount": 3677}, {"contestId": 2009, "index": "G3", "solvedCount": 432}, {"contestId": 2009, "index": "G2", "solvedCount": 1436}, {"contestId": 2008, "index": "E", "solvedCount": 11493}, {"contestId": 2008, "index": "D", "solvedCount": 21156}, {"contestId": 2005, "index": "E2", "solvedCount": 919}, {"contestId": 2005, "index": "E1", "solvedCount": 3001}, {"contestId": 2005, "index": "C", "solvedCount": 7858}, {"contestId": 2004, "index": "G", "solvedCount": 364}, {"contestId": 2003, "index": "F", "solvedCount": 578}, {"contestId": 2003, "index": "E2", "solvedCount": 569}, {"contestId": 2003, "index": "E1", "solvedCount": 794}, {"contestId": 2003, "index": "D2", "solvedCount": 4260}, {"contestId": 2002, "index": "F2", "solvedCount": 495}, {"contestId": 2002, "index": "F1", "solvedCount": 916}, {"contestId": 2002, "index": "E", "solvedCount": 2644}, {"contestId": 2001, "index": "E2", "solvedCount": 249}, {"contestId": 2001, "index": "E1", "solvedCount": 1401}, {"contestId": 2000, "index": "F", "solvedCount": 5942}, {"contestId": 1999, "index": "E", "solvedCount": 21087}, {"contestId": 1998, "index": "D", "solvedCount": 3678}, {"contestId": 1997, "index": "F", "solvedCount": 1111}, {"contestId": 1997, "index": "D", "solvedCount": 13947}, {"contestId": 1996, "index": "C", "solvedCount": 25283}, {"contestId": 1995, "index": "E2", "solvedCount": 340}, {"contestId": 1995, "index": "E1", "solvedCount": 442}, {"contestId": 1995, "index": "D", "solvedCount": 2575}, {"contestId": 1994, "index": "G", "solvedCount": 1386}, {"contestId": 1994, "index": "C", "solvedCount": 11960}, {"contestId": 1993, "index": "E", "solvedCount": 622}, {"contestId": 1993, "index": "D", "solvedCount": 4072}, {"contestId": 1992, "index": "G", "solvedCount": 3495}, {"contestId": 1992, "index": "F", "solvedCount": 6298}, {"contestId": 1992, "index": "D", "solvedCount": 22162}, {"contestId": 1991, "index": "H", "solvedCount": 528}, {"contestId": 1990, "index": "F", "solvedCount": 367}, {"contestId": 1990, "index": "D", "solvedCount": 6976}, {"contestId": 1989, "index": "E", "solvedCount": 2202}, {"contestId": 1989, "index": "D", "solvedCount": 6471}, {"contestId": 1988, "index": "F", "solvedCount": 270}, {"contestId": 1988, "index": "D", "solvedCount": 5401}, {"contestId": 1987, "index": "G2", "solvedCount": 194}, {"contestId": 1987, "index": "G1", "solvedCount": 295}, {"contestId": 1987, "index": "F2", "solvedCount": 1138}, {"contestId": 1987, "index": "F1", "solvedCount": 1236}, {"contestId": 1987, "index": "D", "solvedCount": 7800}, {"contestId": 1987, "index": "C", "solvedCount": 18882}, {"contestId": 1986, "index": "D", "solvedCount": 16483}, {"contestId": 1985, "index": "H2", "solvedCount": 1668}, {"contestId": 1984, "index": "H", "solvedCount": 191}, {"contestId": 1984, "index": "F", "solvedCount": 1031}, {"contestId": 1984, "index": "E", "solvedCount": 1556}, {"contestId": 1984, "index": "C2", "solvedCount": 7985}, {"contestId": 1984, "index": "C1", "solvedCount": 18211}, {"contestId": 1983, "index": "G", "solvedCount": 243}, {"contestId": 1982, "index": "E", "solvedCount": 1735}, {"contestId": 1982, "index": "C", "solvedCount": 19598}, {"contestId": 1981, "index": "F", "solvedCount": 306}, {"contestId": 1979, "index": "D", "solvedCount": 7153}, {"contestId": 1978, "index": "E", "solvedCount": 4170}, {"contestId": 1977, "index": "C", "solvedCount": 7291}, {"contestId": 1976, "index": "F", "solvedCount": 694}, {"contestId": 1976, "index": "C", "solvedCount": 11263}, {"contestId": 1975, "index": "I", "solvedCount": 134}, {"contestId": 1975, "index": "F", "solvedCount": 918}, {"contestId": 1975, "index": "D", "solvedCount": 6646}, {"contestId": 1974, "index": "E", "solvedCount": 9108}, {"contestId": 1973, "index": "F", "solvedCount": 284}, {"contestId": 1973, "index": "A", "solvedCount": 26499}, {"contestId": 1971, "index": "D", "solvedCount": 28019}, {"contestId": 1970, "index": "G3", "solvedCount": 419}, {"contestId": 1970, "index": "G2", "solvedCount": 695}, {"contestId": 1970, "index": "E3", "solvedCount": 886}, {"contestId": 1970, "index": "E2", "solvedCount": 1587}, {"contestId": 1970, "index": "E1", "solvedCount": 2717}, {"contestId": 1970, "index": "C3", "solvedCount": 1866}, {"contestId": 1970, "index": "C2", "solvedCount": 3320}, {"contestId": 1969, "index": "F", "solvedCount": 326}, {"contestId": 1969, "index": "E", "solvedCount": 1594}, {"contestId": 1969, "index": "C", "solvedCount": 9860}, {"contestId": 1968, "index": "G2", "solvedCount": 2165}, {"contestId": 1968, "index": "G1", "solvedCount": 4629}, {"contestId": 1967, "index": "E2", "solvedCount": 137}, {"contestId": 1967, "index": "E1", "solvedCount": 253}, {"contestId": 1967, "index": "C", "solvedCount": 1941}, {"contestId": 1958, "index": "H", "solvedCount": 82}, {"contestId": 1958, "index": "A", "solvedCount": 2252}, {"contestId": 1957, "index": "E", "solvedCount": 1437}, {"contestId": 1957, "index": "D", "solvedCount": 5012}, {"contestId": 1957, "index": "C", "solvedCount": 10688}, {"contestId": 1956, "index": "D", "solvedCount": 4313}, {"contestId": 1955, "index": "H", "solvedCount": 1372}, {"contestId": 1955, "index": "G", "solvedCount": 5017}, {"contestId": 1955, "index": "F", "solvedCount": 7757}, {"contestId": 1954, "index": "F", "solvedCount": 296}, {"contestId": 1954, "index": "D", "solvedCount": 6890}, {"contestId": 1951, "index": "H", "solvedCount": 305}, {"contestId": 1950, "index": "G", "solvedCount": 4991}, {"contestId": 1950, "index": "D", "solvedCount": 24865}, {"contestId": 1949, "index": "C", "solvedCount": 2101}, {"contestId": 1949, "index": "A", "solvedCount": 185}, {"contestId": 1948, "index": "C", "solvedCount": 18747}, {"contestId": 1948, "index": "B", "solvedCount": 24609}, {"contestId": 1946, "index": "F", "solvedCount": 1090}, {"contestId": 1946, "index": "E", "solvedCount": 2823}, {"contestId": 1946, "index": "C", "solvedCount": 12127}, {"contestId": 1946, "index": "B", "solvedCount": 21928}, {"contestId": 1945, "index": "D", "solvedCount": 15815}, {"contestId": 1943, "index": "F", "solvedCount": 126}, {"contestId": 1943, "index": "D2", "solvedCount": 918}, {"contestId": 1943, "index": "D1", "solvedCount": 1685}, {"contestId": 1942, "index": "H", "solvedCount": 164}, {"contestId": 1942, "index": "G", "solvedCount": 520}, {"contestId": 1942, "index": "D", "solvedCount": 3009}, {"contestId": 1941, "index": "E", "solvedCount": 10647}, {"contestId": 1941, "index": "D", "solvedCount": 19526}, {"contestId": 1941, "index": "C", "solvedCount": 35952}, {"contestId": 1941, "index": "B", "solvedCount": 32104}, {"contestId": 1939, "index": "D", "solvedCount": 103}, {"contestId": 1939, "index": "A", "solvedCount": 25}, {"contestId": 1937, "index": "B", "solvedCount": 16130}, {"contestId": 1935, "index": "C", "solvedCount": 8812}, {"contestId": 1934, "index": "B", "solvedCount": 20367}, {"contestId": 1933, "index": "F", "solvedCount": 2685}, {"contestId": 1932, "index": "F", "solvedCount": 4714}, {"contestId": 1932, "index": "A", "solvedCount": 31458}, {"contestId": 1930, "index": "G", "solvedCount": 445}, {"contestId": 1930, "index": "E", "solvedCount": 1312}, {"contestId": 1930, "index": "D2", "solvedCount": 2832}, {"contestId": 1930, "index": "D1", "solvedCount": 4441}, {"contestId": 1929, "index": "E", "solvedCount": 1860}, {"contestId": 1929, "index": "D", "solvedCount": 5168}, {"contestId": 1928, "index": "E", "solvedCount": 1891}, {"contestId": 1927, "index": "G", "solvedCount": 1819}, {"contestId": 1927, "index": "D", "solvedCount": 25073}, {"contestId": 1926, "index": "G", "solvedCount": 3983}, {"contestId": 1926, "index": "F", "solvedCount": 1871}, {"contestId": 1926, "index": "E", "solvedCount": 13294}, {"contestId": 1926, "index": "C", "solvedCount": 29298}, {"contestId": 1925, "index": "D", "solvedCount": 3988}, {"contestId": 1924, "index": "F", "solvedCount": 178}, {"contestId": 1924, "index": "D", "solvedCount": 1148}, {"contestId": 1924, "index": "A", "solvedCount": 15141}, {"contestId": 1923, "index": "E", "solvedCount": 4361}, {"contestId": 1923, "index": "B", "solvedCount": 18761}, {"contestId": 1922, "index": "F", "solvedCount": 1539}, {"contestId": 1921, "index": "G", "solvedCount": 1326}, {"contestId": 1921, "index": "F", "solvedCount": 4263}, {"contestId": 1920, "index": "E", "solvedCount": 3004}, {"contestId": 1919, "index": "F2", "solvedCount": 919}, {"contestId": 1919, "index": "E", "solvedCount": 929}, {"contestId": 1919, "index": "C", "solvedCount": 22018}, {"contestId": 1918, "index": "D", "solvedCount": 5263}, {"contestId": 1917, "index": "F", "solvedCount": 1076}, {"contestId": 1917, "index": "D", "solvedCount": 1930}, {"contestId": 1917, "index": "B", "solvedCount": 26353}, {"contestId": 1916, "index": "H2", "solvedCount": 575}, {"contestId": 1916, "index": "H1", "solvedCount": 650}, {"contestId": 1916, "index": "G", "solvedCount": 167}, {"contestId": 1914, "index": "G2", "solvedCount": 1532}, {"contestId": 1914, "index": "G1", "solvedCount": 2057}, {"contestId": 1914, "index": "F", "solvedCount": 4480}, {"contestId": 1914, "index": "D", "solvedCount": 26533}, {"contestId": 1913, "index": "D", "solvedCount": 3501}, {"contestId": 1912, "index": "K", "solvedCount": 3014}, {"contestId": 1910, "index": "I", "solvedCount": 54}, {"contestId": 1910, "index": "E", "solvedCount": 211}, {"contestId": 1909, "index": "I", "solvedCount": 133}, {"contestId": 1909, "index": "F2", "solvedCount": 1039}, {"contestId": 1909, "index": "F1", "solvedCount": 1983}, {"contestId": 1906, "index": "J", "solvedCount": 927}, {"contestId": 1906, "index": "H", "solvedCount": 879}, {"contestId": 1906, "index": "E", "solvedCount": 1838}, {"contestId": 1905, "index": "E", "solvedCount": 1105}, {"contestId": 1904, "index": "B", "solvedCount": 18993}, {"contestId": 1903, "index": "D2", "solvedCount": 878}, {"contestId": 1902, "index": "D", "solvedCount": 4520}, {"contestId": 1901, "index": "E", "solvedCount": 1700}, {"contestId": 1901, "index": "D", "solvedCount": 7627}, {"contestId": 1900, "index": "E", "solvedCount": 2279}, {"contestId": 1900, "index": "D", "solvedCount": 4699}, {"contestId": 1900, "index": "C", "solvedCount": 13013}, {"contestId": 1900, "index": "B", "solvedCount": 18841}, {"contestId": 1899, "index": "C", "solvedCount": 25079}, {"contestId": 1896, "index": "H2", "solvedCount": 119}, {"contestId": 1896, "index": "H1", "solvedCount": 100}, {"contestId": 1895, "index": "G", "solvedCount": 249}, {"contestId": 1895, "index": "F", "solvedCount": 848}, {"contestId": 1895, "index": "E", "solvedCount": 1698}, {"contestId": 1895, "index": "C", "solvedCount": 12054}, {"contestId": 1893, "index": "E", "solvedCount": 212}, {"contestId": 1889, "index": "F", "solvedCount": 136}, {"contestId": 1889, "index": "C2", "solvedCount": 1086}, {"contestId": 1889, "index": "C1", "solvedCount": 3541}, {"contestId": 1886, "index": "E", "solvedCount": 1629}, {"contestId": 1884, "index": "D", "solvedCount": 3558}, {"contestId": 1884, "index": "C", "solvedCount": 6646}, {"contestId": 1883, "index": "C", "solvedCount": 34184}, {"contestId": 1882, "index": "D", "solvedCount": 6013}, {"contestId": 1881, "index": "F", "solvedCount": 8110}, {"contestId": 1881, "index": "E", "solvedCount": 17393}, {"contestId": 1879, "index": "D", "solvedCount": 8386}, {"contestId": 1879, "index": "C", "solvedCount": 20193}, {"contestId": 1876, "index": "E", "solvedCount": 319}, {"contestId": 1875, "index": "D", "solvedCount": 9937}, {"contestId": 1874, "index": "G", "solvedCount": 112}, {"contestId": 1874, "index": "F", "solvedCount": 289}, {"contestId": 1874, "index": "E", "solvedCount": 382}, {"contestId": 1874, "index": "D", "solvedCount": 784}, {"contestId": 1874, "index": "C", "solvedCount": 1849}, {"contestId": 1874, "index": "B", "solvedCount": 1230}, {"contestId": 1872, "index": "E", "solvedCount": 16158}, {"contestId": 1870, "index": "E", "solvedCount": 2576}, {"contestId": 1870, "index": "C", "solvedCount": 12253}, {"contestId": 1868, "index": "E", "solvedCount": 99}, {"contestId": 1868, "index": "C", "solvedCount": 1264}, {"contestId": 1868, "index": "B2", "solvedCount": 2545}, {"contestId": 1866, "index": "M", "solvedCount": 873}, {"contestId": 1866, "index": "K", "solvedCount": 495}, {"contestId": 1866, "index": "J", "solvedCount": 332}, {"contestId": 1866, "index": "I", "solvedCount": 842}, {"contestId": 1866, "index": "G", "solvedCount": 1874}, {"contestId": 1866, "index": "E", "solvedCount": 474}, {"contestId": 1866, "index": "D", "solvedCount": 1446}, {"contestId": 1866, "index": "C", "solvedCount": 3198}, {"contestId": 1864, "index": "H", "solvedCount": 325}, {"contestId": 1864, "index": "D", "solvedCount": 7171}, {"contestId": 1863, "index": "I", "solvedCount": 113}, {"contestId": 1863, "index": "H", "solvedCount": 100}, {"contestId": 1863, "index": "G", "solvedCount": 704}, {"contestId": 1863, "index": "F", "solvedCount": 1211}, {"contestId": 1863, "index": "E", "solvedCount": 2932}, {"contestId": 1862, "index": "F", "solvedCount": 6815}, {"contestId": 1862, "index": "A", "solvedCount": 34153}, {"contestId": 1861, "index": "E", "solvedCount": 1874}, {"contestId": 1861, "index": "D", "solvedCount": 7330}, {"contestId": 1861, "index": "B", "solvedCount": 22582}, {"contestId": 1860, "index": "D", "solvedCount": 3225}, {"contestId": 1860, "index": "C", "solvedCount": 14361}, {"contestId": 1859, "index": "E", "solvedCount": 1909}, {"contestId": 1859, "index": "D", "solvedCount": 7454}, {"contestId": 1859, "index": "C", "solvedCount": 17758}, {"contestId": 1858, "index": "D", "solvedCount": 2973}, {"contestId": 1858, "index": "B", "solvedCount": 12072}, {"contestId": 1856, "index": "E2", "solvedCount": 1503}, {"contestId": 1856, "index": "E1", "solvedCount": 5725}, {"contestId": 1856, "index": "C", "solvedCount": 14484}, {"contestId": 1854, "index": "F", "solvedCount": 133}, {"contestId": 1854, "index": "E", "solvedCount": 471}, {"contestId": 1854, "index": "C", "solvedCount": 1631}, {"contestId": 1854, "index": "B", "solvedCount": 3800}, {"contestId": 1852, "index": "F", "solvedCount": 136}, {"contestId": 1852, "index": "D", "solvedCount": 525}, {"contestId": 1852, "index": "C", "solvedCount": 1772}, {"contestId": 1851, "index": "E", "solvedCount": 11682}, {"contestId": 1849, "index": "E", "solvedCount": 1818}, {"contestId": 1848, "index": "F", "solvedCount": 1761}, {"contestId": 1847, "index": "C", "solvedCount": 13703}, {"contestId": 1846, "index": "G", "solvedCount": 4754}, {"contestId": 1846, "index": "C", "solvedCount": 20214}, {"contestId": 1845, "index": "F", "solvedCount": 397}, {"contestId": 1845, "index": "E", "solvedCount": 1429}, {"contestId": 1845, "index": "D", "solvedCount": 8339}, {"contestId": 1845, "index": "C", "solvedCount": 15362}, {"contestId": 1844, "index": "H", "solvedCount": 200}, {"contestId": 1844, "index": "C", "solvedCount": 16673}, {"contestId": 1843, "index": "F2", "solvedCount": 1784}, {"contestId": 1843, "index": "F1", "solvedCount": 5719}, {"contestId": 1843, "index": "D", "solvedCount": 19446}, {"contestId": 1842, "index": "I", "solvedCount": 152}, {"contestId": 1842, "index": "H", "solvedCount": 752}, {"contestId": 1842, "index": "G", "solvedCount": 1203}, {"contestId": 1842, "index": "E", "solvedCount": 1730}, {"contestId": 1842, "index": "C", "solvedCount": 14344}, {"contestId": 1841, "index": "C", "solvedCount": 8351}, {"contestId": 1840, "index": "F", "solvedCount": 1952}, {"contestId": 1839, "index": "E", "solvedCount": 1333}, {"contestId": 1839, "index": "D", "solvedCount": 2490}, {"contestId": 1838, "index": "E", "solvedCount": 1606}, {"contestId": 1835, "index": "E", "solvedCount": 244}, {"contestId": 1833, "index": "G", "solvedCount": 5807}, {"contestId": 1832, "index": "F", "solvedCount": 303}, {"contestId": 1832, "index": "E", "solvedCount": 2319}, {"contestId": 1830, "index": "F", "solvedCount": 287}, {"contestId": 1830, "index": "D", "solvedCount": 759}, {"contestId": 1830, "index": "A", "solvedCount": 15736}, {"contestId": 1829, "index": "H", "solvedCount": 8749}, {"contestId": 1829, "index": "G", "solvedCount": 11972}, {"contestId": 1829, "index": "D", "solvedCount": 29463}, {"contestId": 1827, "index": "C", "solvedCount": 1456}, {"contestId": 1827, "index": "B2", "solvedCount": 2050}, {"contestId": 1827, "index": "B1", "solvedCount": 4146}, {"contestId": 1826, "index": "E", "solvedCount": 1769}, {"contestId": 1826, "index": "D", "solvedCount": 11636}, {"contestId": 1824, "index": "C", "solvedCount": 1515}, {"contestId": 1823, "index": "F", "solvedCount": 1006}, {"contestId": 1823, "index": "E", "solvedCount": 1346}, {"contestId": 1822, "index": "F", "solvedCount": 6747}, {"contestId": 1821, "index": "F", "solvedCount": 808}, {"contestId": 1821, "index": "E", "solvedCount": 2505}, {"contestId": 1819, "index": "F", "solvedCount": 141}, {"contestId": 1819, "index": "D", "solvedCount": 741}, {"contestId": 1819, "index": "C", "solvedCount": 1612}, {"contestId": 1815, "index": "E", "solvedCount": 372}, {"contestId": 1815, "index": "D", "solvedCount": 1263}, {"contestId": 1814, "index": "E", "solvedCount": 1508}, {"contestId": 1811, "index": "G2", "solvedCount": 1920}, {"contestId": 1811, "index": "G1", "solvedCount": 2240}, {"contestId": 1811, "index": "E", "solvedCount": 13243}, {"contestId": 1810, "index": "G", "solvedCount": 801}, {"contestId": 1809, "index": "G", "solvedCount": 476}, {"contestId": 1809, "index": "E", "solvedCount": 942}, {"contestId": 1808, "index": "E3", "solvedCount": 477}, {"contestId": 1808, "index": "E2", "solvedCount": 743}, {"contestId": 1808, "index": "E1", "solvedCount": 1438}, {"contestId": 1808, "index": "C", "solvedCount": 4034}, {"contestId": 1807, "index": "G2", "solvedCount": 21880}, {"contestId": 1807, "index": "G1", "solvedCount": 20412}, {"contestId": 1806, "index": "D", "solvedCount": 990}, {"contestId": 1805, "index": "E", "solvedCount": 1741}, {"contestId": 1805, "index": "D", "solvedCount": 7383}, {"contestId": 1804, "index": "H", "solvedCount": 207}, {"contestId": 1804, "index": "E", "solvedCount": 1567}, {"contestId": 1804, "index": "D", "solvedCount": 4851}, {"contestId": 1801, "index": "F", "solvedCount": 635}, {"contestId": 1801, "index": "D", "solvedCount": 2454}, {"contestId": 1801, "index": "C", "solvedCount": 3714}, {"contestId": 1799, "index": "H", "solvedCount": 317}, {"contestId": 1799, "index": "G", "solvedCount": 854}, {"contestId": 1799, "index": "F", "solvedCount": 905}, {"contestId": 1799, "index": "D2", "solvedCount": 2681}, {"contestId": 1799, "index": "D1", "solvedCount": 4993}, {"contestId": 1798, "index": "F", "solvedCount": 543}, {"contestId": 1798, "index": "E", "solvedCount": 1721}, {"contestId": 1797, "index": "D", "solvedCount": 4248}, {"contestId": 1796, "index": "E", "solvedCount": 830}, {"contestId": 1796, "index": "D", "solvedCount": 4740}, {"contestId": 1795, "index": "E", "solvedCount": 2190}, {"contestId": 1794, "index": "E", "solvedCount": 1202}, {"contestId": 1794, "index": "D", "solvedCount": 3899}, {"contestId": 1793, "index": "E", "solvedCount": 1174}, {"contestId": 1793, "index": "D", "solvedCount": 6602}, {"contestId": 1792, "index": "F2", "solvedCount": 423}, {"contestId": 1792, "index": "F1", "solvedCount": 787}, {"contestId": 1792, "index": "E", "solvedCount": 1470}, {"contestId": 1791, "index": "E", "solvedCount": 32523}, {"contestId": 1789, "index": "F", "solvedCount": 792}, {"contestId": 1789, "index": "E", "solvedCount": 881}, {"contestId": 1789, "index": "C", "solvedCount": 9297}, {"contestId": 1788, "index": "E", "solvedCount": 2856}, {"contestId": 1787, "index": "H", "solvedCount": 298}, {"contestId": 1787, "index": "C", "solvedCount": 7567}, {"contestId": 1784, "index": "E", "solvedCount": 377}, {"contestId": 1784, "index": "D", "solvedCount": 1118}, {"contestId": 1783, "index": "D", "solvedCount": 4823}, {"contestId": 1781, "index": "F", "solvedCount": 1041}, {"contestId": 1780, "index": "F", "solvedCount": 1661}, {"contestId": 1779, "index": "F", "solvedCount": 1315}, {"contestId": 1779, "index": "D", "solvedCount": 8379}, {"contestId": 1778, "index": "F", "solvedCount": 759}, {"contestId": 1778, "index": "D", "solvedCount": 2988}, {"contestId": 1777, "index": "D", "solvedCount": 3867}, {"contestId": 1776, "index": "M", "solvedCount": 462}, {"contestId": 1776, "index": "K", "solvedCount": 75}, {"contestId": 1776, "index": "E", "solvedCount": 83}, {"contestId": 1776, "index": "B", "solvedCount": 1436}, {"contestId": 1775, "index": "F", "solvedCount": 796}, {"contestId": 1774, "index": "G", "solvedCount": 503}, {"contestId": 1774, "index": "E", "solvedCount": 3723}, {"contestId": 1774, "index": "C", "solvedCount": 12592}, {"contestId": 1773, "index": "L", "solvedCount": 69}, {"contestId": 1773, "index": "G", "solvedCount": 435}, {"contestId": 1771, "index": "E", "solvedCount": 741}, {"contestId": 1771, "index": "D", "solvedCount": 2962}, {"contestId": 1771, "index": "B", "solvedCount": 16577}, {"contestId": 1770, "index": "F", "solvedCount": 778}, {"contestId": 1770, "index": "E", "solvedCount": 1451}, {"contestId": 1769, "index": "D1", "solvedCount": 401}, {"contestId": 1769, "index": "C2", "solvedCount": 1019}, {"contestId": 1769, "index": "C1", "solvedCount": 1012}, {"contestId": 1768, "index": "F", "solvedCount": 980}, {"contestId": 1767, "index": "E", "solvedCount": 1041}, {"contestId": 1767, "index": "D", "solvedCount": 10509}, {"contestId": 1767, "index": "C", "solvedCount": 2797}, {"contestId": 1766, "index": "E", "solvedCount": 1322}, {"contestId": 1766, "index": "C", "solvedCount": 14221}, {"contestId": 1765, "index": "F", "solvedCount": 668}, {"contestId": 1765, "index": "C", "solvedCount": 463}, {"contestId": 1764, "index": "E", "solvedCount": 1329}, {"contestId": 1764, "index": "D", "solvedCount": 2903}, {"contestId": 1763, "index": "F", "solvedCount": 545}, {"contestId": 1763, "index": "E", "solvedCount": 1911}, {"contestId": 1763, "index": "D", "solvedCount": 2159}, {"contestId": 1762, "index": "F", "solvedCount": 750}, {"contestId": 1761, "index": "F2", "solvedCount": 90}, {"contestId": 1761, "index": "F1", "solvedCount": 229}, {"contestId": 1759, "index": "E", "solvedCount": 11572}, {"contestId": 1753, "index": "C", "solvedCount": 4752}, {"contestId": 1753, "index": "A2", "solvedCount": 10940}, {"contestId": 1753, "index": "A1", "solvedCount": 15678}, {"contestId": 1750, "index": "H", "solvedCount": 106}, {"contestId": 1750, "index": "G", "solvedCount": 274}, {"contestId": 1750, "index": "F", "solvedCount": 993}, {"contestId": 1750, "index": "E", "solvedCount": 1513}, {"contestId": 1749, "index": "D", "solvedCount": 5887}, {"contestId": 1748, "index": "E", "solvedCount": 2196}, {"contestId": 1748, "index": "C", "solvedCount": 11936}, {"contestId": 1747, "index": "E", "solvedCount": 542}, {"contestId": 1746, "index": "G", "solvedCount": 103}, {"contestId": 1746, "index": "E2", "solvedCount": 427}, {"contestId": 1746, "index": "D", "solvedCount": 4831}, {"contestId": 1743, "index": "G", "solvedCount": 275}, {"contestId": 1743, "index": "F", "solvedCount": 1619}, {"contestId": 1743, "index": "E", "solvedCount": 1713}, {"contestId": 1743, "index": "D", "solvedCount": 7892}, {"contestId": 1743, "index": "C", "solvedCount": 19830}, {"contestId": 1741, "index": "G", "solvedCount": 1659}, {"contestId": 1741, "index": "E", "solvedCount": 14128}, {"contestId": 1740, "index": "I", "solvedCount": 125}, {"contestId": 1740, "index": "F", "solvedCount": 877}, {"contestId": 1740, "index": "E", "solvedCount": 4611}, {"contestId": 1739, "index": "F", "solvedCount": 573}, {"contestId": 1739, "index": "E", "solvedCount": 1302}, {"contestId": 1739, "index": "C", "solvedCount": 9513}, {"contestId": 1738, "index": "G", "solvedCount": 493}, {"contestId": 1738, "index": "E", "solvedCount": 1611}, {"contestId": 1738, "index": "C", "solvedCount": 11863}, {"contestId": 1737, "index": "E", "solvedCount": 981}, {"contestId": 1737, "index": "D", "solvedCount": 1972}, {"contestId": 1736, "index": "E", "solvedCount": 780}, {"contestId": 1736, "index": "C2", "solvedCount": 1381}, {"contestId": 1734, "index": "F", "solvedCount": 865}, {"contestId": 1734, "index": "D", "solvedCount": 6604}, {"contestId": 1733, "index": "E", "solvedCount": 1323}, {"contestId": 1733, "index": "D2", "solvedCount": 4429}, {"contestId": 1732, "index": "E", "solvedCount": 476}, {"contestId": 1732, "index": "B", "solvedCount": 15926}, {"contestId": 1731, "index": "F", "solvedCount": 733}, {"contestId": 1731, "index": "E", "solvedCount": 3090}, {"contestId": 1731, "index": "D", "solvedCount": 7668}, {"contestId": 1730, "index": "F", "solvedCount": 599}, {"contestId": 1729, "index": "G", "solvedCount": 2310}, {"contestId": 1728, "index": "G", "solvedCount": 508}, {"contestId": 1728, "index": "D", "solvedCount": 7693}, {"contestId": 1725, "index": "M", "solvedCount": 3477}, {"contestId": 1725, "index": "J", "solvedCount": 424}, {"contestId": 1725, "index": "E", "solvedCount": 530}, {"contestId": 1722, "index": "E", "solvedCount": 11876}, {"contestId": 1721, "index": "E", "solvedCount": 2146}, {"contestId": 1720, "index": "D2", "solvedCount": 1974}, {"contestId": 1720, "index": "D1", "solvedCount": 6255}, {"contestId": 1718, "index": "A2", "solvedCount": 5519}, {"contestId": 1718, "index": "A1", "solvedCount": 6043}, {"contestId": 1716, "index": "F", "solvedCount": 1139}, {"contestId": 1716, "index": "E", "solvedCount": 1191}, {"contestId": 1716, "index": "D", "solvedCount": 5659}, {"contestId": 1716, "index": "C", "solvedCount": 4364}, {"contestId": 1715, "index": "E", "solvedCount": 1877}, {"contestId": 1714, "index": "D", "solvedCount": 9623}, {"contestId": 1713, "index": "F", "solvedCount": 574}, {"contestId": 1713, "index": "C", "solvedCount": 18032}, {"contestId": 1710, "index": "C", "solvedCount": 1494}, {"contestId": 1709, "index": "F", "solvedCount": 622}, {"contestId": 1709, "index": "B", "solvedCount": 24081}, {"contestId": 1707, "index": "F", "solvedCount": 164}, {"contestId": 1707, "index": "D", "solvedCount": 716}, {"contestId": 1706, "index": "D2", "solvedCount": 1812}, {"contestId": 1706, "index": "C", "solvedCount": 15503}, {"contestId": 1706, "index": "B", "solvedCount": 16983}, {"contestId": 1704, "index": "H1", "solvedCount": 216}, {"contestId": 1704, "index": "F", "solvedCount": 1135}, {"contestId": 1704, "index": "E", "solvedCount": 2471}, {"contestId": 1703, "index": "G", "solvedCount": 11535}, {"contestId": 1703, "index": "F", "solvedCount": 23045}, {"contestId": 1701, "index": "E", "solvedCount": 1201}, {"contestId": 1700, "index": "F", "solvedCount": 987}, {"contestId": 1700, "index": "D", "solvedCount": 6436}, {"contestId": 1699, "index": "E", "solvedCount": 1277}, {"contestId": 1699, "index": "D", "solvedCount": 3273}, {"contestId": 1697, "index": "E", "solvedCount": 1294}, {"contestId": 1696, "index": "H", "solvedCount": 178}, {"contestId": 1695, "index": "D2", "solvedCount": 2100}, {"contestId": 1695, "index": "D1", "solvedCount": 2281}, {"contestId": 1695, "index": "C", "solvedCount": 12200}, {"contestId": 1693, "index": "D", "solvedCount": 991}, {"contestId": 1693, "index": "B", "solvedCount": 8973}, {"contestId": 1692, "index": "H", "solvedCount": 8188}, {"contestId": 1692, "index": "G", "solvedCount": 20588}, {"contestId": 1691, "index": "F", "solvedCount": 1045}, {"contestId": 1689, "index": "D", "solvedCount": 4410}, {"contestId": 1689, "index": "C", "solvedCount": 12008}, {"contestId": 1686, "index": "B", "solvedCount": 18893}, {"contestId": 1681, "index": "F", "solvedCount": 1945}, {"contestId": 1681, "index": "E", "solvedCount": 832}, {"contestId": 1681, "index": "D", "solvedCount": 10120}, {"contestId": 1680, "index": "E", "solvedCount": 3990}, {"contestId": 1679, "index": "F", "solvedCount": 627}, {"contestId": 1679, "index": "E", "solvedCount": 1279}, {"contestId": 1679, "index": "D", "solvedCount": 5208}, {"contestId": 1678, "index": "B2", "solvedCount": 6901}, {"contestId": 1677, "index": "F", "solvedCount": 101}, {"contestId": 1677, "index": "D", "solvedCount": 1344}, {"contestId": 1677, "index": "A", "solvedCount": 8874}, {"contestId": 1676, "index": "G", "solvedCount": 18163}, {"contestId": 1675, "index": "G", "solvedCount": 1887}, {"contestId": 1675, "index": "F", "solvedCount": 5695}, {"contestId": 1674, "index": "G", "solvedCount": 2664}, {"contestId": 1673, "index": "C", "solvedCount": 14308}, {"contestId": 1671, "index": "F", "solvedCount": 357}, {"contestId": 1671, "index": "E", "solvedCount": 2898}, {"contestId": 1670, "index": "F", "solvedCount": 1066}, {"contestId": 1667, "index": "E", "solvedCount": 714}, {"contestId": 1667, "index": "D", "solvedCount": 700}, {"contestId": 1667, "index": "B", "solvedCount": 3937}, {"contestId": 1666, "index": "J", "solvedCount": 1441}, {"contestId": 1666, "index": "F", "solvedCount": 1274}, {"contestId": 1663, "index": "D", "solvedCount": 1442}, {"contestId": 1662, "index": "L", "solvedCount": 1159}, {"contestId": 1662, "index": "G", "solvedCount": 493}, {"contestId": 1662, "index": "C", "solvedCount": 354}, {"contestId": 1661, "index": "E", "solvedCount": 1013}, {"contestId": 1661, "index": "B", "solvedCount": 18851}, {"contestId": 1660, "index": "C", "solvedCount": 20650}, {"contestId": 1659, "index": "C", "solvedCount": 11944}, {"contestId": 1658, "index": "E", "solvedCount": 1107}, {"contestId": 1657, "index": "E", "solvedCount": 2234}, {"contestId": 1654, "index": "H", "solvedCount": 88}, {"contestId": 1650, "index": "G", "solvedCount": 2660}, {"contestId": 1650, "index": "F", "solvedCount": 1568}, {"contestId": 1648, "index": "D", "solvedCount": 925}, {"contestId": 1647, "index": "F", "solvedCount": 479}, {"contestId": 1647, "index": "D", "solvedCount": 5479}, {"contestId": 1646, "index": "E", "solvedCount": 2553}, {"contestId": 1646, "index": "D", "solvedCount": 4035}, {"contestId": 1646, "index": "C", "solvedCount": 15648}, {"contestId": 1644, "index": "C", "solvedCount": 14249}, {"contestId": 1637, "index": "F", "solvedCount": 1865}, {"contestId": 1637, "index": "D", "solvedCount": 8131}, {"contestId": 1637, "index": "B", "solvedCount": 15047}, {"contestId": 1635, "index": "D", "solvedCount": 6622}, {"contestId": 1633, "index": "D", "solvedCount": 15673}, {"contestId": 1632, "index": "C", "solvedCount": 13247}, {"contestId": 1631, "index": "B", "solvedCount": 22042}, {"contestId": 1630, "index": "D", "solvedCount": 1773}, {"contestId": 1630, "index": "C", "solvedCount": 3105}, {"contestId": 1628, "index": "D2", "solvedCount": 2268}, {"contestId": 1628, "index": "D1", "solvedCount": 3333}, {"contestId": 1627, "index": "E", "solvedCount": 2544}, {"contestId": 1627, "index": "D", "solvedCount": 8690}, {"contestId": 1626, "index": "F", "solvedCount": 781}, {"contestId": 1626, "index": "C", "solvedCount": 11285}, {"contestId": 1625, "index": "E1", "solvedCount": 1087}, {"contestId": 1625, "index": "C", "solvedCount": 11558}, {"contestId": 1624, "index": "E", "solvedCount": 4331}, {"contestId": 1621, "index": "G", "solvedCount": 689}, {"contestId": 1621, "index": "E", "solvedCount": 1799}, {"contestId": 1620, "index": "G", "solvedCount": 987}, {"contestId": 1620, "index": "F", "solvedCount": 658}, {"contestId": 1620, "index": "C", "solvedCount": 6808}, {"contestId": 1619, "index": "E", "solvedCount": 9628}, {"contestId": 1618, "index": "D", "solvedCount": 19765}, {"contestId": 1617, "index": "E", "solvedCount": 923}, {"contestId": 1616, "index": "H", "solvedCount": 1050}, {"contestId": 1616, "index": "G", "solvedCount": 329}, {"contestId": 1616, "index": "D", "solvedCount": 5150}, {"contestId": 1615, "index": "F", "solvedCount": 960}, {"contestId": 1614, "index": "D2", "solvedCount": 2500}, {"contestId": 1614, "index": "D1", "solvedCount": 4140}, {"contestId": 1614, "index": "C", "solvedCount": 10615}, {"contestId": 1613, "index": "D", "solvedCount": 4930}, {"contestId": 1612, "index": "F", "solvedCount": 644}, {"contestId": 1612, "index": "E", "solvedCount": 2643}, {"contestId": 1611, "index": "E2", "solvedCount": 4022}, {"contestId": 1610, "index": "D", "solvedCount": 2832}, {"contestId": 1609, "index": "E", "solvedCount": 2244}, {"contestId": 1609, "index": "C", "solvedCount": 10071}, {"contestId": 1608, "index": "F", "solvedCount": 694}, {"contestId": 1608, "index": "C", "solvedCount": 6963}, {"contestId": 1606, "index": "F", "solvedCount": 594}, {"contestId": 1606, "index": "E", "solvedCount": 3736}, {"contestId": 1605, "index": "F", "solvedCount": 342}, {"contestId": 1603, "index": "F", "solvedCount": 296}, {"contestId": 1603, "index": "E", "solvedCount": 557}, {"contestId": 1603, "index": "D", "solvedCount": 744}, {"contestId": 1603, "index": "C", "solvedCount": 2143}, {"contestId": 1601, "index": "E", "solvedCount": 513}, {"contestId": 1601, "index": "D", "solvedCount": 1592}, {"contestId": 1601, "index": "C", "solvedCount": 2131}, {"contestId": 1601, "index": "B", "solvedCount": 5188}, {"contestId": 1598, "index": "F", "solvedCount": 1499}, {"contestId": 1598, "index": "E", "solvedCount": 2389}, {"contestId": 1598, "index": "C", "solvedCount": 22042}, {"contestId": 1598, "index": "A", "solvedCount": 24174}, {"contestId": 1594, "index": "E2", "solvedCount": 1526}, {"contestId": 1594, "index": "D", "solvedCount": 8079}, {"contestId": 1593, "index": "G", "solvedCount": 1800}, {"contestId": 1593, "index": "F", "solvedCount": 2535}, {"contestId": 1593, "index": "B", "solvedCount": 30966}, {"contestId": 1592, "index": "C", "solvedCount": 8407}, {"contestId": 1585, "index": "G", "solvedCount": 252}, {"contestId": 1585, "index": "F", "solvedCount": 1414}, {"contestId": 1584, "index": "F", "solvedCount": 1044}, {"contestId": 1583, "index": "C", "solvedCount": 7074}, {"contestId": 1582, "index": "F2", "solvedCount": 1927}, {"contestId": 1582, "index": "F1", "solvedCount": 5993}, {"contestId": 1582, "index": "E", "solvedCount": 3917}, {"contestId": 1580, "index": "D", "solvedCount": 990}, {"contestId": 1580, "index": "B", "solvedCount": 1139}, {"contestId": 1580, "index": "A", "solvedCount": 3781}, {"contestId": 1579, "index": "G", "solvedCount": 2516}, {"contestId": 1575, "index": "L", "solvedCount": 1563}, {"contestId": 1575, "index": "H", "solvedCount": 671}, {"contestId": 1575, "index": "D", "solvedCount": 2734}, {"contestId": 1574, "index": "F", "solvedCount": 677}, {"contestId": 1572, "index": "E", "solvedCount": 326}, {"contestId": 1572, "index": "C", "solvedCount": 1557}, {"contestId": 1572, "index": "A", "solvedCount": 9622}, {"contestId": 1571, "index": "G", "solvedCount": 81}, {"contestId": 1571, "index": "F", "solvedCount": 218}, {"contestId": 1571, "index": "E", "solvedCount": 354}, {"contestId": 1569, "index": "F", "solvedCount": 305}, {"contestId": 1567, "index": "C", "solvedCount": 12569}, {"contestId": 1566, "index": "H", "solvedCount": 140}, {"contestId": 1566, "index": "F", "solvedCount": 988}, {"contestId": 1566, "index": "E", "solvedCount": 4279}, {"contestId": 1566, "index": "C", "solvedCount": 18240}, {"contestId": 1566, "index": "B", "solvedCount": 20430}, {"contestId": 1562, "index": "E", "solvedCount": 1469}, {"contestId": 1562, "index": "D1", "solvedCount": 6476}, {"contestId": 1561, "index": "D1", "solvedCount": 5799}, {"contestId": 1560, "index": "F2", "solvedCount": 4605}, {"contestId": 1559, "index": "E", "solvedCount": 2435}, {"contestId": 1559, "index": "B", "solvedCount": 23144}, {"contestId": 1558, "index": "B", "solvedCount": 4975}, {"contestId": 1557, "index": "D", "solvedCount": 2629}, {"contestId": 1557, "index": "C", "solvedCount": 9091}, {"contestId": 1556, "index": "F", "solvedCount": 1340}, {"contestId": 1556, "index": "E", "solvedCount": 2792}, {"contestId": 1555, "index": "D", "solvedCount": 13341}, {"contestId": 1555, "index": "C", "solvedCount": 22706}, {"contestId": 1554, "index": "E", "solvedCount": 1285}, {"contestId": 1553, "index": "I", "solvedCount": 250}, {"contestId": 1553, "index": "D", "solvedCount": 14250}, {"contestId": 1553, "index": "C", "solvedCount": 18706}, {"contestId": 1553, "index": "B", "solvedCount": 14769}, {"contestId": 1552, "index": "F", "solvedCount": 3031}, {"contestId": 1552, "index": "D", "solvedCount": 7370}, {"contestId": 1551, "index": "F", "solvedCount": 1963}, {"contestId": 1551, "index": "E", "solvedCount": 4166}, {"contestId": 1550, "index": "F", "solvedCount": 766}, {"contestId": 1550, "index": "E", "solvedCount": 1642}, {"contestId": 1549, "index": "B", "solvedCount": 25286}, {"contestId": 1548, "index": "C", "solvedCount": 1898}, {"contestId": 1547, "index": "G", "solvedCount": 3222}, {"contestId": 1547, "index": "E", "solvedCount": 15273}, {"contestId": 1545, "index": "F", "solvedCount": 116}, {"contestId": 1545, "index": "E2", "solvedCount": 91}, {"contestId": 1545, "index": "E1", "solvedCount": 92}, {"contestId": 1542, "index": "E2", "solvedCount": 913}, {"contestId": 1542, "index": "E1", "solvedCount": 1305}, {"contestId": 1542, "index": "D", "solvedCount": 2723}, {"contestId": 1540, "index": "C2", "solvedCount": 493}, {"contestId": 1540, "index": "C1", "solvedCount": 661}, {"contestId": 1540, "index": "B", "solvedCount": 2757}, {"contestId": 1539, "index": "E", "solvedCount": 997}, {"contestId": 1539, "index": "B", "solvedCount": 25433}, {"contestId": 1538, "index": "F", "solvedCount": 20417}, {"contestId": 1538, "index": "A", "solvedCount": 38318}, {"contestId": 1537, "index": "E1", "solvedCount": 14020}, {"contestId": 1536, "index": "C", "solvedCount": 14941}, {"contestId": 1535, "index": "E", "solvedCount": 2873}, {"contestId": 1535, "index": "D", "solvedCount": 8059}, {"contestId": 1535, "index": "C", "solvedCount": 17064}, {"contestId": 1534, "index": "H", "solvedCount": 234}, {"contestId": 1534, "index": "G", "solvedCount": 658}, {"contestId": 1534, "index": "F2", "solvedCount": 635}, {"contestId": 1534, "index": "C", "solvedCount": 13174}, {"contestId": 1533, "index": "H", "solvedCount": 87}, {"contestId": 1531, "index": "C", "solvedCount": 651}, {"contestId": 1530, "index": "H", "solvedCount": 178}, {"contestId": 1530, "index": "F", "solvedCount": 872}, {"contestId": 1528, "index": "E", "solvedCount": 554}, {"contestId": 1528, "index": "B", "solvedCount": 9198}, {"contestId": 1528, "index": "A", "solvedCount": 15964}, {"contestId": 1527, "index": "E", "solvedCount": 2537}, {"contestId": 1526, "index": "C1", "solvedCount": 24467}, {"contestId": 1526, "index": "B", "solvedCount": 32911}, {"contestId": 1525, "index": "F", "solvedCount": 355}, {"contestId": 1525, "index": "E", "solvedCount": 2185}, {"contestId": 1525, "index": "D", "solvedCount": 10191}, {"contestId": 1523, "index": "H", "solvedCount": 394}, {"contestId": 1523, "index": "F", "solvedCount": 447}, {"contestId": 1523, "index": "E", "solvedCount": 1773}, {"contestId": 1523, "index": "D", "solvedCount": 2290}, {"contestId": 1521, "index": "E", "solvedCount": 695}, {"contestId": 1521, "index": "D", "solvedCount": 2081}, {"contestId": 1519, "index": "F", "solvedCount": 540}, {"contestId": 1519, "index": "D", "solvedCount": 16052}, {"contestId": 1519, "index": "B", "solvedCount": 31957}, {"contestId": 1517, "index": "H", "solvedCount": 78}, {"contestId": 1517, "index": "F", "solvedCount": 516}, {"contestId": 1517, "index": "D", "solvedCount": 8169}, {"contestId": 1516, "index": "E", "solvedCount": 917}, {"contestId": 1516, "index": "D", "solvedCount": 4647}, {"contestId": 1516, "index": "C", "solvedCount": 12575}, {"contestId": 1516, "index": "B", "solvedCount": 21273}, {"contestId": 1515, "index": "E", "solvedCount": 3856}, {"contestId": 1513, "index": "C", "solvedCount": 15006}, {"contestId": 1512, "index": "G", "solvedCount": 8635}, {"contestId": 1512, "index": "F", "solvedCount": 6447}, {"contestId": 1511, "index": "G", "solvedCount": 864}, {"contestId": 1511, "index": "F", "solvedCount": 474}, {"contestId": 1511, "index": "E", "solvedCount": 2702}, {"contestId": 1510, "index": "H", "solvedCount": 130}, {"contestId": 1510, "index": "D", "solvedCount": 2005}, {"contestId": 1509, "index": "C", "solvedCount": 13539}, {"contestId": 1506, "index": "G", "solvedCount": 4526}, {"contestId": 1503, "index": "E", "solvedCount": 744}, {"contestId": 1503, "index": "C", "solvedCount": 3556}, {"contestId": 1501, "index": "B", "solvedCount": 20049}, {"contestId": 1500, "index": "F", "solvedCount": 372}, {"contestId": 1499, "index": "F", "solvedCount": 1433}, {"contestId": 1499, "index": "E", "solvedCount": 1579}, {"contestId": 1499, "index": "D", "solvedCount": 6262}, {"contestId": 1499, "index": "B", "solvedCount": 21252}, {"contestId": 1498, "index": "F", "solvedCount": 985}, {"contestId": 1498, "index": "D", "solvedCount": 2375}, {"contestId": 1498, "index": "C", "solvedCount": 10408}, {"contestId": 1497, "index": "E2", "solvedCount": 1816}, {"contestId": 1497, "index": "E1", "solvedCount": 8687}, {"contestId": 1497, "index": "D", "solvedCount": 1594}, {"contestId": 1495, "index": "F", "solvedCount": 380}, {"contestId": 1494, "index": "C", "solvedCount": 5541}, {"contestId": 1492, "index": "C", "solvedCount": 16823}, {"contestId": 1491, "index": "D", "solvedCount": 7503}, {"contestId": 1491, "index": "C", "solvedCount": 8125}, {"contestId": 1488, "index": "E", "solvedCount": 220}, {"contestId": 1487, "index": "G", "solvedCount": 620}, {"contestId": 1487, "index": "F", "solvedCount": 421}, {"contestId": 1486, "index": "F", "solvedCount": 722}, {"contestId": 1486, "index": "E", "solvedCount": 3085}, {"contestId": 1486, "index": "D", "solvedCount": 8208}, {"contestId": 1485, "index": "F", "solvedCount": 2084}, {"contestId": 1485, "index": "E", "solvedCount": 1411}, {"contestId": 1485, "index": "B", "solvedCount": 17397}, {"contestId": 1482, "index": "E", "solvedCount": 3432}, {"contestId": 1481, "index": "F", "solvedCount": 648}, {"contestId": 1481, "index": "E", "solvedCount": 2236}, {"contestId": 1479, "index": "E", "solvedCount": 235}, {"contestId": 1479, "index": "B2", "solvedCount": 4187}, {"contestId": 1479, "index": "B1", "solvedCount": 7165}, {"contestId": 1478, "index": "B", "solvedCount": 18492}, {"contestId": 1476, "index": "F", "solvedCount": 928}, {"contestId": 1476, "index": "D", "solvedCount": 8832}, {"contestId": 1476, "index": "C", "solvedCount": 11698}, {"contestId": 1475, "index": "G", "solvedCount": 7231}, {"contestId": 1475, "index": "D", "solvedCount": 10555}, {"contestId": 1475, "index": "B", "solvedCount": 52189}, {"contestId": 1474, "index": "F", "solvedCount": 271}, {"contestId": 1474, "index": "D", "solvedCount": 4114}, {"contestId": 1473, "index": "G", "solvedCount": 431}, {"contestId": 1473, "index": "D", "solvedCount": 10140}, {"contestId": 1472, "index": "G", "solvedCount": 5043}, {"contestId": 1472, "index": "F", "solvedCount": 3158}, {"contestId": 1472, "index": "E", "solvedCount": 8397}, {"contestId": 1472, "index": "D", "solvedCount": 28657}, {"contestId": 1472, "index": "C", "solvedCount": 32906}, {"contestId": 1472, "index": "B", "solvedCount": 54465}, {"contestId": 1470, "index": "E", "solvedCount": 325}, {"contestId": 1470, "index": "A", "solvedCount": 24426}, {"contestId": 1469, "index": "C", "solvedCount": 11037}, {"contestId": 1469, "index": "B", "solvedCount": 28880}, {"contestId": 1468, "index": "A", "solvedCount": 1753}, {"contestId": 1467, "index": "E", "solvedCount": 1504}, {"contestId": 1467, "index": "D", "solvedCount": 3783}, {"contestId": 1466, "index": "H", "solvedCount": 393}, {"contestId": 1466, "index": "C", "solvedCount": 18176}, {"contestId": 1466, "index": "B", "solvedCount": 23023}, {"contestId": 1463, "index": "F", "solvedCount": 655}, {"contestId": 1462, "index": "B", "solvedCount": 27994}, {"contestId": 1461, "index": "F", "solvedCount": 585}, {"contestId": 1461, "index": "C", "solvedCount": 11665}, {"contestId": 1461, "index": "B", "solvedCount": 12883}, {"contestId": 1459, "index": "B", "solvedCount": 16613}, {"contestId": 1458, "index": "B", "solvedCount": 3669}, {"contestId": 1456, "index": "E", "solvedCount": 310}, {"contestId": 1455, "index": "G", "solvedCount": 436}, {"contestId": 1455, "index": "F", "solvedCount": 468}, {"contestId": 1455, "index": "D", "solvedCount": 12670}, {"contestId": 1453, "index": "F", "solvedCount": 885}, {"contestId": 1453, "index": "E", "solvedCount": 2103}, {"contestId": 1452, "index": "E", "solvedCount": 1614}, {"contestId": 1452, "index": "D", "solvedCount": 8299}, {"contestId": 1451, "index": "C", "solvedCount": 16376}, {"contestId": 1451, "index": "B", "solvedCount": 19642}, {"contestId": 1450, "index": "G", "solvedCount": 328}, {"contestId": 1446, "index": "C", "solvedCount": 3796}, {"contestId": 1446, "index": "B", "solvedCount": 8176}, {"contestId": 1444, "index": "E", "solvedCount": 155}, {"contestId": 1444, "index": "D", "solvedCount": 621}, {"contestId": 1443, "index": "B", "solvedCount": 16067}, {"contestId": 1442, "index": "E", "solvedCount": 664}, {"contestId": 1442, "index": "D", "solvedCount": 2525}, {"contestId": 1442, "index": "A", "solvedCount": 9157}, {"contestId": 1439, "index": "D", "solvedCount": 413}, {"contestId": 1437, "index": "F", "solvedCount": 1379}, {"contestId": 1437, "index": "E", "solvedCount": 3596}, {"contestId": 1437, "index": "C", "solvedCount": 11001}, {"contestId": 1433, "index": "F", "solvedCount": 6313}, {"contestId": 1431, "index": "J", "solvedCount": 46}, {"contestId": 1431, "index": "G", "solvedCount": 194}, {"contestId": 1430, "index": "G", "solvedCount": 777}, {"contestId": 1430, "index": "F", "solvedCount": 967}, {"contestId": 1428, "index": "G2", "solvedCount": 671}, {"contestId": 1428, "index": "G1", "solvedCount": 598}, {"contestId": 1428, "index": "F", "solvedCount": 2426}, {"contestId": 1427, "index": "C", "solvedCount": 5823}, {"contestId": 1426, "index": "F", "solvedCount": 5607}, {"contestId": 1425, "index": "D", "solvedCount": 860}, {"contestId": 1425, "index": "B", "solvedCount": 313}, {"contestId": 1423, "index": "J", "solvedCount": 837}, {"contestId": 1422, "index": "E", "solvedCount": 769}, {"contestId": 1422, "index": "C", "solvedCount": 8480}, {"contestId": 1421, "index": "E", "solvedCount": 750}, {"contestId": 1420, "index": "E", "solvedCount": 965}, {"contestId": 1420, "index": "C2", "solvedCount": 4874}, {"contestId": 1420, "index": "C1", "solvedCount": 18115}, {"contestId": 1418, "index": "C", "solvedCount": 22561}, {"contestId": 1416, "index": "E", "solvedCount": 365}, {"contestId": 1416, "index": "C", "solvedCount": 4649}, {"contestId": 1415, "index": "F", "solvedCount": 520}, {"contestId": 1415, "index": "C", "solvedCount": 11286}, {"contestId": 1413, "index": "C", "solvedCount": 5859}, {"contestId": 1409, "index": "F", "solvedCount": 4799}, {"contestId": 1409, "index": "E", "solvedCount": 8061}, {"contestId": 1408, "index": "I", "solvedCount": 185}, {"contestId": 1408, "index": "G", "solvedCount": 1120}, {"contestId": 1408, "index": "D", "solvedCount": 4437}, {"contestId": 1408, "index": "C", "solvedCount": 9023}, {"contestId": 1407, "index": "E", "solvedCount": 1770}, {"contestId": 1407, "index": "D", "solvedCount": 5202}, {"contestId": 1406, "index": "B", "solvedCount": 23335}, {"contestId": 1404, "index": "B", "solvedCount": 7677}, {"contestId": 1403, "index": "C", "solvedCount": 69}, {"contestId": 1402, "index": "C", "solvedCount": 220}, {"contestId": 1401, "index": "D", "solvedCount": 9635}, {"contestId": 1400, "index": "G", "solvedCount": 1047}, {"contestId": 1400, "index": "F", "solvedCount": 975}, {"contestId": 1400, "index": "E", "solvedCount": 5745}, {"contestId": 1399, "index": "F", "solvedCount": 1701}, {"contestId": 1398, "index": "F", "solvedCount": 1332}, {"contestId": 1398, "index": "D", "solvedCount": 11887}, {"contestId": 1398, "index": "C", "solvedCount": 29823}, {"contestId": 1396, "index": "C", "solvedCount": 2668}, {"contestId": 1395, "index": "C", "solvedCount": 14608}, {"contestId": 1394, "index": "D", "solvedCount": 1101}, {"contestId": 1394, "index": "A", "solvedCount": 6904}, {"contestId": 1393, "index": "E2", "solvedCount": 389}, {"contestId": 1393, "index": "E1", "solvedCount": 404}, {"contestId": 1393, "index": "D", "solvedCount": 4068}, {"contestId": 1392, "index": "H", "solvedCount": 824}, {"contestId": 1392, "index": "G", "solvedCount": 627}, {"contestId": 1392, "index": "D", "solvedCount": 9258}, {"contestId": 1391, "index": "D", "solvedCount": 5463}, {"contestId": 1391, "index": "C", "solvedCount": 15352}, {"contestId": 1389, "index": "G", "solvedCount": 422}, {"contestId": 1389, "index": "F", "solvedCount": 1096}, {"contestId": 1389, "index": "C", "solvedCount": 19683}, {"contestId": 1389, "index": "B", "solvedCount": 17885}, {"contestId": 1387, "index": "C", "solvedCount": 155}, {"contestId": 1387, "index": "B1", "solvedCount": 1609}, {"contestId": 1387, "index": "A", "solvedCount": 785}, {"contestId": 1385, "index": "D", "solvedCount": 20224}, {"contestId": 1384, "index": "B2", "solvedCount": 2533}, {"contestId": 1384, "index": "B1", "solvedCount": 3981}, {"contestId": 1383, "index": "E", "solvedCount": 936}, {"contestId": 1383, "index": "C", "solvedCount": 603}, {"contestId": 1383, "index": "B", "solvedCount": 5207}, {"contestId": 1382, "index": "B", "solvedCount": 25240}, {"contestId": 1381, "index": "D", "solvedCount": 731}, {"contestId": 1381, "index": "B", "solvedCount": 9135}, {"contestId": 1380, "index": "F", "solvedCount": 838}, {"contestId": 1380, "index": "C", "solvedCount": 21537}, {"contestId": 1379, "index": "E", "solvedCount": 441}, {"contestId": 1379, "index": "C", "solvedCount": 5752}, {"contestId": 1373, "index": "E", "solvedCount": 2821}, {"contestId": 1373, "index": "D", "solvedCount": 16424}, {"contestId": 1372, "index": "E", "solvedCount": 1305}, {"contestId": 1372, "index": "D", "solvedCount": 5514}, {"contestId": 1371, "index": "E2", "solvedCount": 2394}, {"contestId": 1370, "index": "D", "solvedCount": 10145}, {"contestId": 1369, "index": "F", "solvedCount": 673}, {"contestId": 1369, "index": "D", "solvedCount": 8836}, {"contestId": 1368, "index": "H1", "solvedCount": 396}, {"contestId": 1367, "index": "F2", "solvedCount": 1743}, {"contestId": 1367, "index": "F1", "solvedCount": 3375}, {"contestId": 1367, "index": "E", "solvedCount": 5602}, {"contestId": 1366, "index": "G", "solvedCount": 584}, {"contestId": 1366, "index": "F", "solvedCount": 846}, {"contestId": 1366, "index": "E", "solvedCount": 4401}, {"contestId": 1363, "index": "F", "solvedCount": 1614}, {"contestId": 1363, "index": "E", "solvedCount": 6999}, {"contestId": 1360, "index": "F", "solvedCount": 12814}, {"contestId": 1360, "index": "E", "solvedCount": 26454}, {"contestId": 1359, "index": "D", "solvedCount": 9876}, {"contestId": 1359, "index": "B", "solvedCount": 28442}, {"contestId": 1355, "index": "B", "solvedCount": 26417}, {"contestId": 1354, "index": "F", "solvedCount": 1287}, {"contestId": 1354, "index": "E", "solvedCount": 3494}, {"contestId": 1354, "index": "B", "solvedCount": 32493}, {"contestId": 1353, "index": "F", "solvedCount": 3434}, {"contestId": 1353, "index": "E", "solvedCount": 7399}, {"contestId": 1350, "index": "B", "solvedCount": 24464}, {"contestId": 1349, "index": "F2", "solvedCount": 119}, {"contestId": 1349, "index": "F1", "solvedCount": 466}, {"contestId": 1349, "index": "E", "solvedCount": 107}, {"contestId": 1348, "index": "E", "solvedCount": 2297}, {"contestId": 1346, "index": "I", "solvedCount": 51}, {"contestId": 1346, "index": "E", "solvedCount": 387}, {"contestId": 1345, "index": "B", "solvedCount": 27261}, {"contestId": 1344, "index": "C", "solvedCount": 1902}, {"contestId": 1343, "index": "C", "solvedCount": 40509}, {"contestId": 1342, "index": "F", "solvedCount": 819}, {"contestId": 1340, "index": "C", "solvedCount": 2321}, {"contestId": 1340, "index": "B", "solvedCount": 8000}, {"contestId": 1339, "index": "A", "solvedCount": 32950}, {"contestId": 1338, "index": "D", "solvedCount": 1051}, {"contestId": 1336, "index": "C", "solvedCount": 3699}, {"contestId": 1336, "index": "A", "solvedCount": 21690}, {"contestId": 1335, "index": "E2", "solvedCount": 8660}, {"contestId": 1335, "index": "E1", "solvedCount": 11175}, {"contestId": 1334, "index": "F", "solvedCount": 1388}, {"contestId": 1332, "index": "F", "solvedCount": 1051}, {"contestId": 1331, "index": "F", "solvedCount": 581}, {"contestId": 1328, "index": "D", "solvedCount": 13771}, {"contestId": 1327, "index": "G", "solvedCount": 461}, {"contestId": 1327, "index": "F", "solvedCount": 1776}, {"contestId": 1327, "index": "E", "solvedCount": 9217}, {"contestId": 1326, "index": "G", "solvedCount": 97}, {"contestId": 1326, "index": "F2", "solvedCount": 540}, {"contestId": 1326, "index": "F1", "solvedCount": 884}, {"contestId": 1324, "index": "F", "solvedCount": 10942}, {"contestId": 1324, "index": "E", "solvedCount": 14798}, {"contestId": 1323, "index": "A", "solvedCount": 20240}, {"contestId": 1322, "index": "F", "solvedCount": 124}, {"contestId": 1322, "index": "D", "solvedCount": 809}, {"contestId": 1320, "index": "E", "solvedCount": 918}, {"contestId": 1320, "index": "A", "solvedCount": 17833}, {"contestId": 1316, "index": "E", "solvedCount": 4543}, {"contestId": 1315, "index": "B", "solvedCount": 9355}, {"contestId": 1313, "index": "D", "solvedCount": 1398}, {"contestId": 1313, "index": "C2", "solvedCount": 6740}, {"contestId": 1313, "index": "C1", "solvedCount": 10665}, {"contestId": 1312, "index": "G", "solvedCount": 1018}, {"contestId": 1312, "index": "E", "solvedCount": 6467}, {"contestId": 1310, "index": "E", "solvedCount": 359}, {"contestId": 1310, "index": "D", "solvedCount": 1752}, {"contestId": 1310, "index": "C", "solvedCount": 558}, {"contestId": 1310, "index": "B", "solvedCount": 544}, {"contestId": 1307, "index": "E", "solvedCount": 1313}, {"contestId": 1307, "index": "C", "solvedCount": 12226}, {"contestId": 1305, "index": "G", "solvedCount": 1116}, {"contestId": 1304, "index": "F2", "solvedCount": 1595}, {"contestId": 1304, "index": "F1", "solvedCount": 1816}, {"contestId": 1304, "index": "C", "solvedCount": 16858}, {"contestId": 1303, "index": "E", "solvedCount": 2958}, {"contestId": 1301, "index": "E", "solvedCount": 1557}, {"contestId": 1299, "index": "D", "solvedCount": 476}, {"contestId": 1297, "index": "H", "solvedCount": 48}, {"contestId": 1297, "index": "G", "solvedCount": 73}, {"contestId": 1296, "index": "E2", "solvedCount": 5235}, {"contestId": 1296, "index": "E1", "solvedCount": 7789}, {"contestId": 1295, "index": "F", "solvedCount": 1334}, {"contestId": 1295, "index": "C", "solvedCount": 13318}, {"contestId": 1294, "index": "F", "solvedCount": 6122}, {"contestId": 1292, "index": "F", "solvedCount": 349}, {"contestId": 1292, "index": "D", "solvedCount": 890}, {"contestId": 1292, "index": "C", "solvedCount": 2139}, {"contestId": 1290, "index": "F", "solvedCount": 445}, {"contestId": 1288, "index": "D", "solvedCount": 7628}, {"contestId": 1288, "index": "C", "solvedCount": 13750}, {"contestId": 1286, "index": "F", "solvedCount": 268}, {"contestId": 1286, "index": "A", "solvedCount": 9148}, {"contestId": 1285, "index": "E", "solvedCount": 1891}, {"contestId": 1285, "index": "D", "solvedCount": 8078}, {"contestId": 1285, "index": "B", "solvedCount": 25082}, {"contestId": 1284, "index": "B", "solvedCount": 11006}, {"contestId": 1283, "index": "E", "solvedCount": 6776}, {"contestId": 1282, "index": "B2", "solvedCount": 10534}, {"contestId": 1282, "index": "B1", "solvedCount": 11735}, {"contestId": 1280, "index": "D", "solvedCount": 1067}, {"contestId": 1279, "index": "F", "solvedCount": 995}, {"contestId": 1279, "index": "E", "solvedCount": 398}, {"contestId": 1278, "index": "F", "solvedCount": 2038}, {"contestId": 1278, "index": "C", "solvedCount": 8246}, {"contestId": 1276, "index": "D", "solvedCount": 630}, {"contestId": 1276, "index": "A", "solvedCount": 12545}, {"contestId": 1272, "index": "F", "solvedCount": 2091}, {"contestId": 1272, "index": "D", "solvedCount": 17758}, {"contestId": 1272, "index": "C", "solvedCount": 28151}, {"contestId": 1271, "index": "E", "solvedCount": 3527}, {"contestId": 1271, "index": "D", "solvedCount": 3188}, {"contestId": 1268, "index": "E", "solvedCount": 277}, {"contestId": 1268, "index": "B", "solvedCount": 6108}, {"contestId": 1266, "index": "H", "solvedCount": 116}, {"contestId": 1265, "index": "E", "solvedCount": 3934}, {"contestId": 1264, "index": "D1", "solvedCount": 1369}, {"contestId": 1263, "index": "F", "solvedCount": 913}, {"contestId": 1260, "index": "E", "solvedCount": 1793}, {"contestId": 1260, "index": "D", "solvedCount": 4005}, {"contestId": 1257, "index": "E", "solvedCount": 4351}, {"contestId": 1257, "index": "D", "solvedCount": 7845}, {"contestId": 1256, "index": "E", "solvedCount": 4308}, {"contestId": 1253, "index": "E", "solvedCount": 2932}, {"contestId": 1253, "index": "C", "solvedCount": 14695}, {"contestId": 1252, "index": "J", "solvedCount": 742}, {"contestId": 1252, "index": "D", "solvedCount": 378}, {"contestId": 1252, "index": "B", "solvedCount": 541}, {"contestId": 1251, "index": "E1", "solvedCount": 2447}, {"contestId": 1250, "index": "G", "solvedCount": 744}, {"contestId": 1250, "index": "D", "solvedCount": 196}, {"contestId": 1249, "index": "F", "solvedCount": 2515}, {"contestId": 1249, "index": "E", "solvedCount": 10190}, {"contestId": 1248, "index": "D1", "solvedCount": 2432}, {"contestId": 1245, "index": "F", "solvedCount": 2049}, {"contestId": 1245, "index": "E", "solvedCount": 1304}, {"contestId": 1245, "index": "C", "solvedCount": 18482}, {"contestId": 1245, "index": "B", "solvedCount": 14098}, {"contestId": 1244, "index": "D", "solvedCount": 7785}, {"contestId": 1242, "index": "C", "solvedCount": 1740}, {"contestId": 1239, "index": "E", "solvedCount": 1077}, {"contestId": 1239, "index": "A", "solvedCount": 7482}, {"contestId": 1238, "index": "F", "solvedCount": 1939}, {"contestId": 1238, "index": "E", "solvedCount": 3211}, {"contestId": 1238, "index": "D", "solvedCount": 6180}, {"contestId": 1238, "index": "C", "solvedCount": 7629}, {"contestId": 1237, "index": "G", "solvedCount": 152}, {"contestId": 1237, "index": "F", "solvedCount": 921}, {"contestId": 1237, "index": "E", "solvedCount": 1399}, {"contestId": 1236, "index": "E", "solvedCount": 698}, {"contestId": 1234, "index": "F", "solvedCount": 2802}, {"contestId": 1234, "index": "C", "solvedCount": 12967}, {"contestId": 1228, "index": "E", "solvedCount": 2929}, {"contestId": 1227, "index": "F1", "solvedCount": 1881}, {"contestId": 1225, "index": "G", "solvedCount": 611}, {"contestId": 1225, "index": "E", "solvedCount": 1945}, {"contestId": 1223, "index": "F", "solvedCount": 2119}, {"contestId": 1223, "index": "E", "solvedCount": 2724}, {"contestId": 1223, "index": "D", "solvedCount": 4178}, {"contestId": 1221, "index": "G", "solvedCount": 789}, {"contestId": 1221, "index": "D", "solvedCount": 9521}, {"contestId": 1220, "index": "E", "solvedCount": 2854}, {"contestId": 1218, "index": "C", "solvedCount": 194}, {"contestId": 1218, "index": "A", "solvedCount": 164}, {"contestId": 1216, "index": "F", "solvedCount": 2800}, {"contestId": 1215, "index": "E", "solvedCount": 3191}, {"contestId": 1215, "index": "B", "solvedCount": 14447}, {"contestId": 1214, "index": "D", "solvedCount": 5979}, {"contestId": 1211, "index": "H", "solvedCount": 49}, {"contestId": 1210, "index": "G", "solvedCount": 203}, {"contestId": 1209, "index": "E2", "solvedCount": 2060}, {"contestId": 1209, "index": "E1", "solvedCount": 3048}, {"contestId": 1208, "index": "F", "solvedCount": 2743}, {"contestId": 1207, "index": "C", "solvedCount": 10037}, {"contestId": 1206, "index": "B", "solvedCount": 27866}, {"contestId": 1204, "index": "E", "solvedCount": 1775}, {"contestId": 1204, "index": "C", "solvedCount": 6863}, {"contestId": 1203, "index": "F2", "solvedCount": 3042}, {"contestId": 1202, "index": "C", "solvedCount": 2631}, {"contestId": 1202, "index": "B", "solvedCount": 4673}, {"contestId": 1201, "index": "D", "solvedCount": 2426}, {"contestId": 1200, "index": "F", "solvedCount": 1110}, {"contestId": 1200, "index": "D", "solvedCount": 4230}, {"contestId": 1200, "index": "B", "solvedCount": 14207}, {"contestId": 1198, "index": "D", "solvedCount": 3439}, {"contestId": 1197, "index": "F", "solvedCount": 294}, {"contestId": 1197, "index": "E", "solvedCount": 1728}, {"contestId": 1197, "index": "D", "solvedCount": 5544}, {"contestId": 1196, "index": "D2", "solvedCount": 10097}, {"contestId": 1195, "index": "C", "solvedCount": 28810}, {"contestId": 1194, "index": "G", "solvedCount": 286}, {"contestId": 1194, "index": "F", "solvedCount": 1035}, {"contestId": 1193, "index": "B", "solvedCount": 462}, {"contestId": 1193, "index": "A", "solvedCount": 314}, {"contestId": 1192, "index": "C", "solvedCount": 340}, {"contestId": 1189, "index": "C", "solvedCount": 10788}, {"contestId": 1188, "index": "D", "solvedCount": 830}, {"contestId": 1188, "index": "C", "solvedCount": 1922}, {"contestId": 1187, "index": "F", "solvedCount": 942}, {"contestId": 1187, "index": "E", "solvedCount": 9164}, {"contestId": 1185, "index": "G2", "solvedCount": 804}, {"contestId": 1185, "index": "G1", "solvedCount": 2978}, {"contestId": 1183, "index": "H", "solvedCount": 3341}, {"contestId": 1183, "index": "E", "solvedCount": 5103}, {"contestId": 1182, "index": "E", "solvedCount": 2955}, {"contestId": 1182, "index": "D", "solvedCount": 929}, {"contestId": 1182, "index": "A", "solvedCount": 33003}, {"contestId": 1181, "index": "C", "solvedCount": 3225}, {"contestId": 1180, "index": "A", "solvedCount": 26195}, {"contestId": 1179, "index": "D", "solvedCount": 960}, {"contestId": 1178, "index": "F2", "solvedCount": 958}, {"contestId": 1178, "index": "F1", "solvedCount": 2168}, {"contestId": 1178, "index": "B", "solvedCount": 17108}, {"contestId": 1176, "index": "F", "solvedCount": 2138}, {"contestId": 1176, "index": "C", "solvedCount": 14571}, {"contestId": 1175, "index": "G", "solvedCount": 564}, {"contestId": 1175, "index": "E", "solvedCount": 3896}, {"contestId": 1174, "index": "E", "solvedCount": 1632}, {"contestId": 1172, "index": "C2", "solvedCount": 896}, {"contestId": 1172, "index": "C1", "solvedCount": 1134}, {"contestId": 1172, "index": "B", "solvedCount": 4193}, {"contestId": 1170, "index": "I", "solvedCount": 43}, {"contestId": 1168, "index": "D", "solvedCount": 400}, {"contestId": 1168, "index": "C", "solvedCount": 2548}, {"contestId": 1163, "index": "D", "solvedCount": 1374}, {"contestId": 1158, "index": "F", "solvedCount": 442}, {"contestId": 1157, "index": "F", "solvedCount": 2761}, {"contestId": 1156, "index": "F", "solvedCount": 1539}, {"contestId": 1156, "index": "D", "solvedCount": 4132}, {"contestId": 1155, "index": "F", "solvedCount": 479}, {"contestId": 1155, "index": "D", "solvedCount": 7193}, {"contestId": 1154, "index": "F", "solvedCount": 3004}, {"contestId": 1153, "index": "F", "solvedCount": 868}, {"contestId": 1153, "index": "D", "solvedCount": 5172}, {"contestId": 1152, "index": "F2", "solvedCount": 712}, {"contestId": 1152, "index": "F1", "solvedCount": 600}, {"contestId": 1152, "index": "D", "solvedCount": 2462}, {"contestId": 1151, "index": "F", "solvedCount": 1284}, {"contestId": 1151, "index": "E", "solvedCount": 3450}, {"contestId": 1151, "index": "B", "solvedCount": 11863}, {"contestId": 1149, "index": "D", "solvedCount": 813}, {"contestId": 1149, "index": "B", "solvedCount": 1942}, {"contestId": 1146, "index": "H", "solvedCount": 635}, {"contestId": 1146, "index": "G", "solvedCount": 914}, {"contestId": 1146, "index": "F", "solvedCount": 1233}, {"contestId": 1144, "index": "G", "solvedCount": 2120}, {"contestId": 1142, "index": "D", "solvedCount": 555}, {"contestId": 1142, "index": "B", "solvedCount": 3283}, {"contestId": 1140, "index": "E", "solvedCount": 2018}, {"contestId": 1140, "index": "D", "solvedCount": 12803}, {"contestId": 1139, "index": "D", "solvedCount": 2477}, {"contestId": 1137, "index": "C", "solvedCount": 1241}, {"contestId": 1133, "index": "E", "solvedCount": 5839}, {"contestId": 1132, "index": "G", "solvedCount": 1115}, {"contestId": 1132, "index": "F", "solvedCount": 8905}, {"contestId": 1132, "index": "E", "solvedCount": 1597}, {"contestId": 1131, "index": "G", "solvedCount": 471}, {"contestId": 1131, "index": "E", "solvedCount": 1179}, {"contestId": 1131, "index": "D", "solvedCount": 3408}, {"contestId": 1129, "index": "D", "solvedCount": 1154}, {"contestId": 1129, "index": "C", "solvedCount": 948}, {"contestId": 1120, "index": "F", "solvedCount": 267}, {"contestId": 1120, "index": "D", "solvedCount": 1540}, {"contestId": 1120, "index": "C", "solvedCount": 2145}, {"contestId": 1119, "index": "F", "solvedCount": 786}, {"contestId": 1119, "index": "E", "solvedCount": 5196}, {"contestId": 1118, "index": "F2", "solvedCount": 573}, {"contestId": 1117, "index": "F", "solvedCount": 618}, {"contestId": 1117, "index": "D", "solvedCount": 4563}, {"contestId": 1114, "index": "D", "solvedCount": 7113}, {"contestId": 1113, "index": "A", "solvedCount": 17674}, {"contestId": 1111, "index": "E", "solvedCount": 998}, {"contestId": 1111, "index": "D", "solvedCount": 1005}, {"contestId": 1110, "index": "H", "solvedCount": 310}, {"contestId": 1110, "index": "D", "solvedCount": 3727}, {"contestId": 1109, "index": "D", "solvedCount": 1404}, {"contestId": 1109, "index": "A", "solvedCount": 8662}, {"contestId": 1108, "index": "D", "solvedCount": 15853}, {"contestId": 1107, "index": "G", "solvedCount": 1108}, {"contestId": 1107, "index": "F", "solvedCount": 836}, {"contestId": 1107, "index": "E", "solvedCount": 2456}, {"contestId": 1107, "index": "D", "solvedCount": 3791}, {"contestId": 1106, "index": "E", "solvedCount": 2657}, {"contestId": 1105, "index": "E", "solvedCount": 1720}, {"contestId": 1105, "index": "C", "solvedCount": 10684}, {"contestId": 1103, "index": "D", "solvedCount": 435}, {"contestId": 1102, "index": "F", "solvedCount": 2136}, {"contestId": 1101, "index": "F", "solvedCount": 1461}, {"contestId": 1101, "index": "D", "solvedCount": 4974}, {"contestId": 1099, "index": "F", "solvedCount": 981}, {"contestId": 1097, "index": "H", "solvedCount": 115}, {"contestId": 1097, "index": "G", "solvedCount": 854}, {"contestId": 1097, "index": "D", "solvedCount": 2961}, {"contestId": 1097, "index": "B", "solvedCount": 31416}, {"contestId": 1096, "index": "G", "solvedCount": 1680}, {"contestId": 1096, "index": "F", "solvedCount": 1875}, {"contestId": 1096, "index": "E", "solvedCount": 1132}, {"contestId": 1096, "index": "D", "solvedCount": 8537}, {"contestId": 1093, "index": "F", "solvedCount": 1069}, {"contestId": 1092, "index": "F", "solvedCount": 8944}, {"contestId": 1091, "index": "D", "solvedCount": 6960}, {"contestId": 1089, "index": "A", "solvedCount": 1221}, {"contestId": 1088, "index": "E", "solvedCount": 1543}, {"contestId": 1085, "index": "G", "solvedCount": 611}, {"contestId": 1084, "index": "C", "solvedCount": 9078}, {"contestId": 1083, "index": "E", "solvedCount": 4775}, {"contestId": 1083, "index": "A", "solvedCount": 5748}, {"contestId": 1082, "index": "F", "solvedCount": 439}, {"contestId": 1082, "index": "E", "solvedCount": 5119}, {"contestId": 1081, "index": "C", "solvedCount": 7644}, {"contestId": 1077, "index": "F2", "solvedCount": 3532}, {"contestId": 1077, "index": "F1", "solvedCount": 4712}, {"contestId": 1076, "index": "F", "solvedCount": 674}, {"contestId": 1073, "index": "F", "solvedCount": 567}, {"contestId": 1073, "index": "E", "solvedCount": 2843}, {"contestId": 1070, "index": "J", "solvedCount": 724}, {"contestId": 1070, "index": "G", "solvedCount": 876}, {"contestId": 1070, "index": "A", "solvedCount": 2446}, {"contestId": 1067, "index": "E", "solvedCount": 496}, {"contestId": 1067, "index": "D", "solvedCount": 441}, {"contestId": 1067, "index": "A", "solvedCount": 2988}, {"contestId": 1066, "index": "F", "solvedCount": 2142}, {"contestId": 1065, "index": "F", "solvedCount": 1237}, {"contestId": 1065, "index": "D", "solvedCount": 1354}, {"contestId": 1063, "index": "F", "solvedCount": 955}, {"contestId": 1061, "index": "C", "solvedCount": 9473}, {"contestId": 1060, "index": "F", "solvedCount": 651}, {"contestId": 1060, "index": "E", "solvedCount": 3271}, {"contestId": 1059, "index": "E", "solvedCount": 1494}, {"contestId": 1057, "index": "C", "solvedCount": 1023}, {"contestId": 1056, "index": "F", "solvedCount": 672}, {"contestId": 1056, "index": "D", "solvedCount": 6235}, {"contestId": 1055, "index": "E", "solvedCount": 767}, {"contestId": 1051, "index": "E", "solvedCount": 1031}, {"contestId": 1051, "index": "D", "solvedCount": 7652}, {"contestId": 1051, "index": "C", "solvedCount": 9480}, {"contestId": 1044, "index": "C", "solvedCount": 1364}, {"contestId": 1043, "index": "F", "solvedCount": 2611}, {"contestId": 1042, "index": "E", "solvedCount": 1873}, {"contestId": 1042, "index": "B", "solvedCount": 17338}, {"contestId": 1041, "index": "F", "solvedCount": 1533}, {"contestId": 1040, "index": "B", "solvedCount": 7243}, {"contestId": 1039, "index": "D", "solvedCount": 1966}, {"contestId": 1038, "index": "F", "solvedCount": 363}, {"contestId": 1038, "index": "E", "solvedCount": 1016}, {"contestId": 1038, "index": "D", "solvedCount": 8573}, {"contestId": 1037, "index": "C", "solvedCount": 19342}, {"contestId": 1036, "index": "C", "solvedCount": 10683}, {"contestId": 1034, "index": "E", "solvedCount": 681}, {"contestId": 1034, "index": "C", "solvedCount": 928}, {"contestId": 1033, "index": "C", "solvedCount": 5804}, {"contestId": 1032, "index": "F", "solvedCount": 1006}, {"contestId": 1032, "index": "E", "solvedCount": 1733}, {"contestId": 1032, "index": "C", "solvedCount": 4131}, {"contestId": 1030, "index": "E", "solvedCount": 3178}, {"contestId": 1029, "index": "E", "solvedCount": 3088}, {"contestId": 1029, "index": "B", "solvedCount": 17560}, {"contestId": 1028, "index": "G", "solvedCount": 612}, {"contestId": 1027, "index": "E", "solvedCount": 2207}, {"contestId": 1025, "index": "D", "solvedCount": 3828}, {"contestId": 1016, "index": "F", "solvedCount": 850}, {"contestId": 1016, "index": "C", "solvedCount": 3842}, {"contestId": 1015, "index": "F", "solvedCount": 1229}, {"contestId": 1015, "index": "E2", "solvedCount": 3751}, {"contestId": 1015, "index": "E1", "solvedCount": 6211}, {"contestId": 1012, "index": "F", "solvedCount": 173}, {"contestId": 1012, "index": "C", "solvedCount": 3618}, {"contestId": 1007, "index": "E", "solvedCount": 230}, {"contestId": 1006, "index": "F", "solvedCount": 5835}, {"contestId": 1005, "index": "D", "solvedCount": 10624}, {"contestId": 1004, "index": "E", "solvedCount": 1119}, {"contestId": 1003, "index": "F", "solvedCount": 1432}, {"contestId": 1000, "index": "G", "solvedCount": 634}, {"contestId": 1000, "index": "D", "solvedCount": 4506}, {"contestId": 999, "index": "F", "solvedCount": 2869}, {"contestId": 998, "index": "B", "solvedCount": 13696}, {"contestId": 997, "index": "B", "solvedCount": 3033}, {"contestId": 996, "index": "A", "solvedCount": 100662}, {"contestId": 995, "index": "F", "solvedCount": 1342}, {"contestId": 993, "index": "D", "solvedCount": 772}, {"contestId": 991, "index": "D", "solvedCount": 7349}, {"contestId": 990, "index": "G", "solvedCount": 1990}, {"contestId": 990, "index": "F", "solvedCount": 961}, {"contestId": 989, "index": "E", "solvedCount": 259}, {"contestId": 988, "index": "F", "solvedCount": 2430}, {"contestId": 987, "index": "C", "solvedCount": 14012}, {"contestId": 985, "index": "E", "solvedCount": 3786}, {"contestId": 983, "index": "C", "solvedCount": 858}, {"contestId": 983, "index": "B", "solvedCount": 5787}, {"contestId": 982, "index": "C", "solvedCount": 12696}, {"contestId": 981, "index": "H", "solvedCount": 278}, {"contestId": 981, "index": "E", "solvedCount": 2228}, {"contestId": 981, "index": "D", "solvedCount": 3334}, {"contestId": 980, "index": "F", "solvedCount": 207}, {"contestId": 980, "index": "D", "solvedCount": 2795}, {"contestId": 979, "index": "E", "solvedCount": 763}, {"contestId": 979, "index": "D", "solvedCount": 1946}, {"contestId": 977, "index": "F", "solvedCount": 21417}, {"contestId": 965, "index": "E", "solvedCount": 1635}, {"contestId": 963, "index": "B", "solvedCount": 2888}, {"contestId": 961, "index": "B", "solvedCount": 22754}, {"contestId": 960, "index": "G", "solvedCount": 1122}, {"contestId": 960, "index": "F", "solvedCount": 3091}, {"contestId": 960, "index": "E", "solvedCount": 2027}, {"contestId": 959, "index": "F", "solvedCount": 2310}, {"contestId": 959, "index": "E", "solvedCount": 3551}, {"contestId": 958, "index": "E2", "solvedCount": 1024}, {"contestId": 958, "index": "C3", "solvedCount": 618}, {"contestId": 958, "index": "C2", "solvedCount": 1294}, {"contestId": 955, "index": "F", "solvedCount": 1082}, {"contestId": 954, "index": "H", "solvedCount": 637}, {"contestId": 954, "index": "F", "solvedCount": 1274}, {"contestId": 946, "index": "G", "solvedCount": 734}, {"contestId": 946, "index": "F", "solvedCount": 594}, {"contestId": 946, "index": "D", "solvedCount": 4577}, {"contestId": 940, "index": "E", "solvedCount": 3993}, {"contestId": 940, "index": "B", "solvedCount": 9197}, {"contestId": 939, "index": "F", "solvedCount": 1037}, {"contestId": 938, "index": "F", "solvedCount": 529}, {"contestId": 936, "index": "D", "solvedCount": 339}, {"contestId": 936, "index": "B", "solvedCount": 3303}, {"contestId": 935, "index": "E", "solvedCount": 909}, {"contestId": 933, "index": "E", "solvedCount": 281}, {"contestId": 933, "index": "A", "solvedCount": 5124}, {"contestId": 932, "index": "G", "solvedCount": 1038}, {"contestId": 932, "index": "F", "solvedCount": 3244}, {"contestId": 932, "index": "E", "solvedCount": 3037}, {"contestId": 932, "index": "D", "solvedCount": 1813}, {"contestId": 930, "index": "E", "solvedCount": 462}, {"contestId": 930, "index": "C", "solvedCount": 2205}, {"contestId": 928, "index": "B", "solvedCount": 2578}, {"contestId": 924, "index": "F", "solvedCount": 277}, {"contestId": 924, "index": "E", "solvedCount": 538}, {"contestId": 924, "index": "C", "solvedCount": 3968}, {"contestId": 922, "index": "F", "solvedCount": 661}, {"contestId": 922, "index": "E", "solvedCount": 2246}, {"contestId": 920, "index": "D", "solvedCount": 758}, {"contestId": 919, "index": "D", "solvedCount": 10770}, {"contestId": 919, "index": "B", "solvedCount": 29491}, {"contestId": 917, "index": "D", "solvedCount": 1289}, {"contestId": 917, "index": "C", "solvedCount": 411}, {"contestId": 917, "index": "B", "solvedCount": 3608}, {"contestId": 917, "index": "A", "solvedCount": 3559}, {"contestId": 915, "index": "C", "solvedCount": 7217}, {"contestId": 914, "index": "H", "solvedCount": 255}, {"contestId": 914, "index": "G", "solvedCount": 992}, {"contestId": 914, "index": "C", "solvedCount": 3942}, {"contestId": 913, "index": "F", "solvedCount": 692}, {"contestId": 913, "index": "E", "solvedCount": 832}, {"contestId": 913, "index": "C", "solvedCount": 8131}, {"contestId": 910, "index": "A", "solvedCount": 12653}, {"contestId": 909, "index": "E", "solvedCount": 2236}, {"contestId": 909, "index": "C", "solvedCount": 5097}, {"contestId": 908, "index": "G", "solvedCount": 1419}, {"contestId": 908, "index": "E", "solvedCount": 786}, {"contestId": 908, "index": "D", "solvedCount": 2445}, {"contestId": 906, "index": "E", "solvedCount": 508}, {"contestId": 906, "index": "C", "solvedCount": 1415}, {"contestId": 903, "index": "F", "solvedCount": 703}, {"contestId": 900, "index": "E", "solvedCount": 1292}, {"contestId": 900, "index": "D", "solvedCount": 3440}, {"contestId": 895, "index": "C", "solvedCount": 6069}, {"contestId": 894, "index": "E", "solvedCount": 2560}, {"contestId": 894, "index": "A", "solvedCount": 36564}, {"contestId": 893, "index": "E", "solvedCount": 3854}, {"contestId": 893, "index": "D", "solvedCount": 3161}, {"contestId": 891, "index": "D", "solvedCount": 205}, {"contestId": 891, "index": "A", "solvedCount": 11260}, {"contestId": 889, "index": "E", "solvedCount": 593}, {"contestId": 888, "index": "F", "solvedCount": 920}, {"contestId": 888, "index": "D", "solvedCount": 9096}, {"contestId": 886, "index": "E", "solvedCount": 1111}, {"contestId": 883, "index": "I", "solvedCount": 2109}, {"contestId": 883, "index": "D", "solvedCount": 481}, {"contestId": 878, "index": "E", "solvedCount": 611}, {"contestId": 877, "index": "B", "solvedCount": 10999}, {"contestId": 875, "index": "E", "solvedCount": 963}, {"contestId": 873, "index": "E", "solvedCount": 730}, {"contestId": 873, "index": "B", "solvedCount": 8156}, {"contestId": 870, "index": "C", "solvedCount": 9361}, {"contestId": 869, "index": "C", "solvedCount": 4842}, {"contestId": 868, "index": "F", "solvedCount": 4168}, {"contestId": 868, "index": "E", "solvedCount": 538}, {"contestId": 868, "index": "D", "solvedCount": 932}, {"contestId": 868, "index": "C", "solvedCount": 4757}, {"contestId": 865, "index": "E", "solvedCount": 152}, {"contestId": 865, "index": "C", "solvedCount": 872}, {"contestId": 864, "index": "E", "solvedCount": 4400}, {"contestId": 859, "index": "D", "solvedCount": 1067}, {"contestId": 859, "index": "C", "solvedCount": 5638}, {"contestId": 858, "index": "C", "solvedCount": 5709}, {"contestId": 856, "index": "D", "solvedCount": 541}, {"contestId": 856, "index": "C", "solvedCount": 658}, {"contestId": 856, "index": "B", "solvedCount": 539}, {"contestId": 855, "index": "G", "solvedCount": 245}, {"contestId": 855, "index": "E", "solvedCount": 1914}, {"contestId": 855, "index": "C", "solvedCount": 2179}, {"contestId": 855, "index": "B", "solvedCount": 9167}, {"contestId": 853, "index": "D", "solvedCount": 694}, {"contestId": 852, "index": "H", "solvedCount": 166}, {"contestId": 852, "index": "E", "solvedCount": 1090}, {"contestId": 852, "index": "B", "solvedCount": 1548}, {"contestId": 850, "index": "D", "solvedCount": 402}, {"contestId": 850, "index": "C", "solvedCount": 1612}, {"contestId": 848, "index": "E", "solvedCount": 228}, {"contestId": 848, "index": "D", "solvedCount": 426}, {"contestId": 847, "index": "E", "solvedCount": 3274}, {"contestId": 846, "index": "C", "solvedCount": 2788}, {"contestId": 845, "index": "F", "solvedCount": 510}, {"contestId": 845, "index": "D", "solvedCount": 2467}, {"contestId": 840, "index": "C", "solvedCount": 1883}, {"contestId": 840, "index": "B", "solvedCount": 2546}, {"contestId": 839, "index": "D", "solvedCount": 3162}, {"contestId": 839, "index": "C", "solvedCount": 17911}, {"contestId": 838, "index": "E", "solvedCount": 365}, {"contestId": 838, "index": "C", "solvedCount": 374}, {"contestId": 837, "index": "D", "solvedCount": 6100}, {"contestId": 835, "index": "F", "solvedCount": 1134}, {"contestId": 835, "index": "D", "solvedCount": 4363}, {"contestId": 835, "index": "C", "solvedCount": 8675}, {"contestId": 833, "index": "E", "solvedCount": 257}, {"contestId": 833, "index": "B", "solvedCount": 5462}, {"contestId": 830, "index": "E", "solvedCount": 308}, {"contestId": 830, "index": "D", "solvedCount": 891}, {"contestId": 830, "index": "A", "solvedCount": 7530}, {"contestId": 827, "index": "F", "solvedCount": 473}, {"contestId": 825, "index": "F", "solvedCount": 1707}, {"contestId": 822, "index": "E", "solvedCount": 904}, {"contestId": 822, "index": "D", "solvedCount": 3156}, {"contestId": 821, "index": "E", "solvedCount": 1544}, {"contestId": 817, "index": "C", "solvedCount": 7783}, {"contestId": 815, "index": "C", "solvedCount": 2820}, {"contestId": 814, "index": "E", "solvedCount": 690}, {"contestId": 814, "index": "D", "solvedCount": 2400}, {"contestId": 814, "index": "C", "solvedCount": 7002}, {"contestId": 813, "index": "D", "solvedCount": 1076}, {"contestId": 812, "index": "B", "solvedCount": 5328}, {"contestId": 811, "index": "C", "solvedCount": 3347}, {"contestId": 809, "index": "D", "solvedCount": 908}, {"contestId": 809, "index": "C", "solvedCount": 852}, {"contestId": 808, "index": "G", "solvedCount": 3083}, {"contestId": 808, "index": "E", "solvedCount": 1969}, {"contestId": 804, "index": "F", "solvedCount": 193}, {"contestId": 804, "index": "D", "solvedCount": 1430}, {"contestId": 803, "index": "E", "solvedCount": 2377}, {"contestId": 802, "index": "L", "solvedCount": 340}, {"contestId": 802, "index": "K", "solvedCount": 669}, {"contestId": 799, "index": "D", "solvedCount": 2098}, {"contestId": 798, "index": "C", "solvedCount": 5983}, {"contestId": 798, "index": "B", "solvedCount": 8709}, {"contestId": 797, "index": "F", "solvedCount": 1305}, {"contestId": 797, "index": "E", "solvedCount": 4762}, {"contestId": 797, "index": "B", "solvedCount": 10949}, {"contestId": 796, "index": "E", "solvedCount": 702}, {"contestId": 796, "index": "D", "solvedCount": 6295}, {"contestId": 796, "index": "C", "solvedCount": 3112}, {"contestId": 794, "index": "G", "solvedCount": 376}, {"contestId": 793, "index": "F", "solvedCount": 675}, {"contestId": 793, "index": "E", "solvedCount": 287}, {"contestId": 793, "index": "D", "solvedCount": 1623}, {"contestId": 792, "index": "C", "solvedCount": 4619}, {"contestId": 788, "index": "A", "solvedCount": 9630}, {"contestId": 786, "index": "A", "solvedCount": 2607}, {"contestId": 785, "index": "D", "solvedCount": 3136}, {"contestId": 780, "index": "G", "solvedCount": 677}, {"contestId": 780, "index": "F", "solvedCount": 1079}, {"contestId": 778, "index": "E", "solvedCount": 345}, {"contestId": 777, "index": "E", "solvedCount": 4271}, {"contestId": 777, "index": "C", "solvedCount": 6555}, {"contestId": 777, "index": "B", "solvedCount": 9669}, {"contestId": 776, "index": "G", "solvedCount": 351}, {"contestId": 774, "index": "J", "solvedCount": 381}, {"contestId": 774, "index": "I", "solvedCount": 110}, {"contestId": 773, "index": "F", "solvedCount": 205}, {"contestId": 773, "index": "D", "solvedCount": 724}, {"contestId": 772, "index": "D", "solvedCount": 635}, {"contestId": 772, "index": "C", "solvedCount": 1397}, {"contestId": 771, "index": "E", "solvedCount": 532}, {"contestId": 771, "index": "D", "solvedCount": 1395}, {"contestId": 771, "index": "C", "solvedCount": 3217}, {"contestId": 768, "index": "E", "solvedCount": 3144}, {"contestId": 768, "index": "D", "solvedCount": 3102}, {"contestId": 768, "index": "C", "solvedCount": 3876}, {"contestId": 766, "index": "E", "solvedCount": 3164}, {"contestId": 766, "index": "D", "solvedCount": 3545}, {"contestId": 766, "index": "C", "solvedCount": 4640}, {"contestId": 765, "index": "G", "solvedCount": 97}, {"contestId": 765, "index": "E", "solvedCount": 1308}, {"contestId": 763, "index": "A", "solvedCount": 11065}, {"contestId": 762, "index": "D", "solvedCount": 1632}, {"contestId": 761, "index": "F", "solvedCount": 426}, {"contestId": 761, "index": "C", "solvedCount": 5934}, {"contestId": 758, "index": "E", "solvedCount": 509}, {"contestId": 758, "index": "D", "solvedCount": 2794}, {"contestId": 757, "index": "E", "solvedCount": 1431}, {"contestId": 757, "index": "D", "solvedCount": 1464}, {"contestId": 756, "index": "E", "solvedCount": 194}, {"contestId": 756, "index": "D", "solvedCount": 1031}, {"contestId": 756, "index": "B", "solvedCount": 4030}, {"contestId": 755, "index": "G", "solvedCount": 968}, {"contestId": 755, "index": "F", "solvedCount": 1530}, {"contestId": 754, "index": "C", "solvedCount": 979}, {"contestId": 753, "index": "A", "solvedCount": 9398}, {"contestId": 750, "index": "G", "solvedCount": 475}, {"contestId": 750, "index": "E", "solvedCount": 1683}, {"contestId": 750, "index": "D", "solvedCount": 3109}, {"contestId": 747, "index": "F", "solvedCount": 439}, {"contestId": 747, "index": "D", "solvedCount": 3341}, {"contestId": 744, "index": "C", "solvedCount": 1211}, {"contestId": 743, "index": "E", "solvedCount": 1536}, {"contestId": 743, "index": "D", "solvedCount": 4467}, {"contestId": 741, "index": "B", "solvedCount": 5422}, {"contestId": 739, "index": "E", "solvedCount": 2321}, {"contestId": 735, "index": "E", "solvedCount": 919}, {"contestId": 734, "index": "E", "solvedCount": 4506}, {"contestId": 734, "index": "C", "solvedCount": 5469}, {"contestId": 733, "index": "C", "solvedCount": 3437}, {"contestId": 732, "index": "B", "solvedCount": 25087}, {"contestId": 731, "index": "E", "solvedCount": 1763}, {"contestId": 730, "index": "J", "solvedCount": 3617}, {"contestId": 730, "index": "I", "solvedCount": 2248}, {"contestId": 729, "index": "F", "solvedCount": 1024}, {"contestId": 729, "index": "B", "solvedCount": 8170}, {"contestId": 727, "index": "F", "solvedCount": 865}, {"contestId": 724, "index": "F", "solvedCount": 476}, {"contestId": 724, "index": "E", "solvedCount": 1440}, {"contestId": 722, "index": "E", "solvedCount": 943}, {"contestId": 721, "index": "E", "solvedCount": 326}, {"contestId": 721, "index": "C", "solvedCount": 6068}, {"contestId": 720, "index": "D", "solvedCount": 311}, {"contestId": 718, "index": "D", "solvedCount": 439}, {"contestId": 718, "index": "A", "solvedCount": 4470}, {"contestId": 717, "index": "B", "solvedCount": 170}, {"contestId": 713, "index": "E", "solvedCount": 364}, {"contestId": 713, "index": "C", "solvedCount": 5827}, {"contestId": 712, "index": "D", "solvedCount": 1887}, {"contestId": 711, "index": "C", "solvedCount": 8581}, {"contestId": 710, "index": "E", "solvedCount": 5353}, {"contestId": 708, "index": "E", "solvedCount": 1172}, {"contestId": 708, "index": "C", "solvedCount": 3632}, {"contestId": 706, "index": "C", "solvedCount": 17248}, {"contestId": 706, "index": "B", "solvedCount": 70508}, {"contestId": 704, "index": "C", "solvedCount": 488}, {"contestId": 704, "index": "B", "solvedCount": 2005}, {"contestId": 703, "index": "E", "solvedCount": 622}, {"contestId": 702, "index": "A", "solvedCount": 48551}, {"contestId": 700, "index": "B", "solvedCount": 4215}, {"contestId": 698, "index": "C", "solvedCount": 1371}, {"contestId": 698, "index": "A", "solvedCount": 32995}, {"contestId": 696, "index": "D", "solvedCount": 1399}, {"contestId": 696, "index": "C", "solvedCount": 2129}, {"contestId": 691, "index": "F", "solvedCount": 1341}, {"contestId": 690, "index": "D3", "solvedCount": 546}, {"contestId": 689, "index": "E", "solvedCount": 2014}, {"contestId": 687, "index": "C", "solvedCount": 6254}, {"contestId": 685, "index": "B", "solvedCount": 4516}, {"contestId": 685, "index": "A", "solvedCount": 4317}, {"contestId": 682, "index": "D", "solvedCount": 3362}, {"contestId": 682, "index": "C", "solvedCount": 7498}, {"contestId": 679, "index": "B", "solvedCount": 2172}, {"contestId": 678, "index": "E", "solvedCount": 2369}, {"contestId": 677, "index": "E", "solvedCount": 612}, {"contestId": 677, "index": "D", "solvedCount": 1766}, {"contestId": 676, "index": "C", "solvedCount": 20117}, {"contestId": 675, "index": "E", "solvedCount": 2947}, {"contestId": 671, "index": "D", "solvedCount": 1231}, {"contestId": 671, "index": "A", "solvedCount": 4236}, {"contestId": 666, "index": "A", "solvedCount": 3618}, {"contestId": 665, "index": "F", "solvedCount": 656}, {"contestId": 665, "index": "C", "solvedCount": 12195}, {"contestId": 662, "index": "E", "solvedCount": 147}, {"contestId": 662, "index": "C", "solvedCount": 2179}, {"contestId": 660, "index": "C", "solvedCount": 9901}, {"contestId": 659, "index": "G", "solvedCount": 1245}, {"contestId": 653, "index": "B", "solvedCount": 5111}, {"contestId": 651, "index": "A", "solvedCount": 23434}, {"contestId": 650, "index": "D", "solvedCount": 1456}, {"contestId": 650, "index": "C", "solvedCount": 2061}, {"contestId": 650, "index": "B", "solvedCount": 3392}, {"contestId": 645, "index": "E", "solvedCount": 1316}, {"contestId": 645, "index": "D", "solvedCount": 3098}, {"contestId": 643, "index": "F", "solvedCount": 753}, {"contestId": 643, "index": "E", "solvedCount": 659}, {"contestId": 643, "index": "C", "solvedCount": 1505}, {"contestId": 641, "index": "D", "solvedCount": 1376}, {"contestId": 637, "index": "D", "solvedCount": 2054}, {"contestId": 633, "index": "F", "solvedCount": 1061}, {"contestId": 633, "index": "D", "solvedCount": 2860}, {"contestId": 633, "index": "C", "solvedCount": 2978}, {"contestId": 632, "index": "E", "solvedCount": 3000}, {"contestId": 631, "index": "E", "solvedCount": 2654}, {"contestId": 629, "index": "E", "solvedCount": 1067}, {"contestId": 629, "index": "D", "solvedCount": 4205}, {"contestId": 629, "index": "C", "solvedCount": 2881}, {"contestId": 628, "index": "D", "solvedCount": 6657}, {"contestId": 628, "index": "B", "solvedCount": 11373}, {"contestId": 627, "index": "D", "solvedCount": 899}, {"contestId": 627, "index": "A", "solvedCount": 4336}, {"contestId": 626, "index": "G", "solvedCount": 555}, {"contestId": 626, "index": "F", "solvedCount": 3147}, {"contestId": 626, "index": "D", "solvedCount": 2839}, {"contestId": 626, "index": "B", "solvedCount": 6711}, {"contestId": 623, "index": "E", "solvedCount": 580}, {"contestId": 623, "index": "C", "solvedCount": 503}, {"contestId": 623, "index": "B", "solvedCount": 2254}, {"contestId": 621, "index": "E", "solvedCount": 2954}, {"contestId": 618, "index": "G", "solvedCount": 253}, {"contestId": 618, "index": "D", "solvedCount": 1791}, {"contestId": 615, "index": "C", "solvedCount": 2370}, {"contestId": 615, "index": "B", "solvedCount": 5361}, {"contestId": 613, "index": "E", "solvedCount": 503}, {"contestId": 613, "index": "D", "solvedCount": 3349}, {"contestId": 613, "index": "B", "solvedCount": 2272}, {"contestId": 612, "index": "F", "solvedCount": 405}, {"contestId": 611, "index": "D", "solvedCount": 2642}, {"contestId": 611, "index": "C", "solvedCount": 8646}, {"contestId": 607, "index": "B", "solvedCount": 13500}, {"contestId": 607, "index": "A", "solvedCount": 9901}, {"contestId": 603, "index": "A", "solvedCount": 7881}, {"contestId": 602, "index": "B", "solvedCount": 11319}, {"contestId": 601, "index": "E", "solvedCount": 930}, {"contestId": 601, "index": "C", "solvedCount": 1359}, {"contestId": 599, "index": "E", "solvedCount": 695}, {"contestId": 598, "index": "E", "solvedCount": 5415}, {"contestId": 597, "index": "C", "solvedCount": 5573}, {"contestId": 597, "index": "B", "solvedCount": 5181}, {"contestId": 596, "index": "E", "solvedCount": 405}, {"contestId": 596, "index": "D", "solvedCount": 701}, {"contestId": 593, "index": "E", "solvedCount": 662}, {"contestId": 592, "index": "D", "solvedCount": 2736}, {"contestId": 590, "index": "D", "solvedCount": 1260}, {"contestId": 587, "index": "B", "solvedCount": 1436}, {"contestId": 585, "index": "F", "solvedCount": 716}, {"contestId": 582, "index": "E", "solvedCount": 515}, {"contestId": 582, "index": "D", "solvedCount": 700}, {"contestId": 582, "index": "B", "solvedCount": 3481}, {"contestId": 581, "index": "F", "solvedCount": 915}, {"contestId": 581, "index": "E", "solvedCount": 193}, {"contestId": 580, "index": "D", "solvedCount": 10517}, {"contestId": 580, "index": "A", "solvedCount": 93928}, {"contestId": 578, "index": "D", "solvedCount": 919}, {"contestId": 577, "index": "B", "solvedCount": 12992}, {"contestId": 576, "index": "D", "solvedCount": 1459}, {"contestId": 575, "index": "H", "solvedCount": 1745}, {"contestId": 575, "index": "F", "solvedCount": 1061}, {"contestId": 573, "index": "D", "solvedCount": 620}, {"contestId": 573, "index": "B", "solvedCount": 6049}, {"contestId": 571, "index": "B", "solvedCount": 2719}, {"contestId": 570, "index": "E", "solvedCount": 1975}, {"contestId": 568, "index": "E", "solvedCount": 608}, {"contestId": 568, "index": "B", "solvedCount": 2289}, {"contestId": 567, "index": "F", "solvedCount": 607}, {"contestId": 567, "index": "C", "solvedCount": 9779}, {"contestId": 566, "index": "F", "solvedCount": 3916}, {"contestId": 559, "index": "E", "solvedCount": 991}, {"contestId": 559, "index": "C", "solvedCount": 6950}, {"contestId": 557, "index": "E", "solvedCount": 1139}, {"contestId": 557, "index": "C", "solvedCount": 4076}, {"contestId": 553, "index": "E", "solvedCount": 582}, {"contestId": 553, "index": "A", "solvedCount": 8997}, {"contestId": 552, "index": "E", "solvedCount": 1654}, {"contestId": 552, "index": "C", "solvedCount": 5578}, {"contestId": 550, "index": "C", "solvedCount": 30043}, {"contestId": 550, "index": "A", "solvedCount": 40079}, {"contestId": 548, "index": "B", "solvedCount": 8639}, {"contestId": 547, "index": "C", "solvedCount": 3044}, {"contestId": 547, "index": "B", "solvedCount": 9412}, {"contestId": 546, "index": "D", "solvedCount": 12562}, {"contestId": 545, "index": "C", "solvedCount": 29639}, {"contestId": 543, "index": "D", "solvedCount": 2887}, {"contestId": 543, "index": "C", "solvedCount": 1455}, {"contestId": 543, "index": "A", "solvedCount": 8278}, {"contestId": 542, "index": "F", "solvedCount": 950}, {"contestId": 542, "index": "D", "solvedCount": 530}, {"contestId": 540, "index": "D", "solvedCount": 5763}, {"contestId": 538, "index": "E", "solvedCount": 1575}, {"contestId": 538, "index": "B", "solvedCount": 18580}, {"contestId": 536, "index": "D", "solvedCount": 747}, {"contestId": 534, "index": "F", "solvedCount": 495}, {"contestId": 534, "index": "B", "solvedCount": 10723}, {"contestId": 533, "index": "E", "solvedCount": 2332}, {"contestId": 533, "index": "D", "solvedCount": 245}, {"contestId": 533, "index": "B", "solvedCount": 2494}, {"contestId": 527, "index": "D", "solvedCount": 4886}, {"contestId": 526, "index": "E", "solvedCount": 1122}, {"contestId": 525, "index": "E", "solvedCount": 3593}, {"contestId": 524, "index": "B", "solvedCount": 1475}, {"contestId": 522, "index": "B", "solvedCount": 9141}, {"contestId": 522, "index": "A", "solvedCount": 17364}, {"contestId": 520, "index": "E", "solvedCount": 1928}, {"contestId": 519, "index": "E", "solvedCount": 7353}, {"contestId": 519, "index": "D", "solvedCount": 6551}, {"contestId": 518, "index": "F", "solvedCount": 392}, {"contestId": 518, "index": "D", "solvedCount": 7358}, {"contestId": 516, "index": "D", "solvedCount": 1359}, {"contestId": 514, "index": "E", "solvedCount": 1502}, {"contestId": 513, "index": "G3", "solvedCount": 272}, {"contestId": 513, "index": "G2", "solvedCount": 674}, {"contestId": 513, "index": "G1", "solvedCount": 1811}, {"contestId": 513, "index": "E2", "solvedCount": 619}, {"contestId": 513, "index": "E1", "solvedCount": 519}, {"contestId": 512, "index": "D", "solvedCount": 1059}, {"contestId": 510, "index": "D", "solvedCount": 5838}, {"contestId": 509, "index": "F", "solvedCount": 1098}, {"contestId": 509, "index": "C", "solvedCount": 2177}, {"contestId": 508, "index": "E", "solvedCount": 1818}, {"contestId": 507, "index": "E", "solvedCount": 3051}, {"contestId": 507, "index": "D", "solvedCount": 1919}, {"contestId": 506, "index": "E", "solvedCount": 809}, {"contestId": 505, "index": "C", "solvedCount": 6718}, {"contestId": 505, "index": "B", "solvedCount": 13864}, {"contestId": 500, "index": "F", "solvedCount": 775}, {"contestId": 500, "index": "E", "solvedCount": 1486}, {"contestId": 498, "index": "E", "solvedCount": 489}, {"contestId": 498, "index": "D", "solvedCount": 1146}, {"contestId": 498, "index": "B", "solvedCount": 1219}, {"contestId": 497, "index": "E", "solvedCount": 299}, {"contestId": 494, "index": "D", "solvedCount": 647}, {"contestId": 494, "index": "C", "solvedCount": 899}, {"contestId": 494, "index": "B", "solvedCount": 2863}, {"contestId": 490, "index": "F", "solvedCount": 1782}, {"contestId": 489, "index": "F", "solvedCount": 1728}, {"contestId": 489, "index": "E", "solvedCount": 1054}, {"contestId": 489, "index": "C", "solvedCount": 48278}, {"contestId": 489, "index": "B", "solvedCount": 51714}, {"contestId": 487, "index": "B", "solvedCount": 3733}, {"contestId": 486, "index": "E", "solvedCount": 2383}, {"contestId": 486, "index": "D", "solvedCount": 4142}, {"contestId": 484, "index": "D", "solvedCount": 2745}, {"contestId": 482, "index": "D", "solvedCount": 550}, {"contestId": 482, "index": "C", "solvedCount": 962}, {"contestId": 480, "index": "D", "solvedCount": 472}, {"contestId": 479, "index": "E", "solvedCount": 5265}, {"contestId": 478, "index": "D", "solvedCount": 6407}, {"contestId": 477, "index": "D", "solvedCount": 538}, {"contestId": 476, "index": "E", "solvedCount": 2012}, {"contestId": 476, "index": "B", "solvedCount": 33272}, {"contestId": 474, "index": "E", "solvedCount": 3651}, {"contestId": 474, "index": "D", "solvedCount": 27081}, {"contestId": 468, "index": "E", "solvedCount": 356}, {"contestId": 467, "index": "E", "solvedCount": 807}, {"contestId": 467, "index": "D", "solvedCount": 1902}, {"contestId": 467, "index": "C", "solvedCount": 15336}, {"contestId": 466, "index": "D", "solvedCount": 3368}, {"contestId": 466, "index": "C", "solvedCount": 38115}, {"contestId": 464, "index": "D", "solvedCount": 695}, {"contestId": 464, "index": "C", "solvedCount": 1876}, {"contestId": 463, "index": "D", "solvedCount": 6769}, {"contestId": 461, "index": "B", "solvedCount": 6111}, {"contestId": 459, "index": "E", "solvedCount": 5639}, {"contestId": 457, "index": "F", "solvedCount": 118}, {"contestId": 455, "index": "C", "solvedCount": 5998}, {"contestId": 455, "index": "B", "solvedCount": 6277}, {"contestId": 455, "index": "A", "solvedCount": 63278}, {"contestId": 453, "index": "D", "solvedCount": 488}, {"contestId": 453, "index": "B", "solvedCount": 4915}, {"contestId": 449, "index": "E", "solvedCount": 292}, {"contestId": 449, "index": "D", "solvedCount": 4918}, {"contestId": 448, "index": "C", "solvedCount": 9831}, {"contestId": 446, "index": "A", "solvedCount": 12987}, {"contestId": 441, "index": "E", "solvedCount": 747}, {"contestId": 440, "index": "D", "solvedCount": 804}, {"contestId": 439, "index": "E", "solvedCount": 1629}, {"contestId": 437, "index": "E", "solvedCount": 715}, {"contestId": 436, "index": "F", "solvedCount": 413}, {"contestId": 436, "index": "D", "solvedCount": 337}, {"contestId": 435, "index": "D", "solvedCount": 769}, {"contestId": 433, "index": "E", "solvedCount": 496}, {"contestId": 433, "index": "B", "solvedCount": 44701}, {"contestId": 432, "index": "D", "solvedCount": 10281}, {"contestId": 431, "index": "D", "solvedCount": 2515}, {"contestId": 431, "index": "C", "solvedCount": 26964}, {"contestId": 429, "index": "C", "solvedCount": 981}, {"contestId": 429, "index": "B", "solvedCount": 9219}, {"contestId": 427, "index": "D", "solvedCount": 2269}, {"contestId": 425, "index": "E", "solvedCount": 705}, {"contestId": 425, "index": "C", "solvedCount": 930}, {"contestId": 424, "index": "E", "solvedCount": 140}, {"contestId": 424, "index": "D", "solvedCount": 574}, {"contestId": 417, "index": "D", "solvedCount": 2642}, {"contestId": 417, "index": "A", "solvedCount": 3155}, {"contestId": 416, "index": "E", "solvedCount": 1614}, {"contestId": 416, "index": "C", "solvedCount": 8247}, {"contestId": 416, "index": "B", "solvedCount": 9018}, {"contestId": 414, "index": "B", "solvedCount": 24411}, {"contestId": 413, "index": "D", "solvedCount": 866}, {"contestId": 407, "index": "D", "solvedCount": 693}, {"contestId": 407, "index": "B", "solvedCount": 6718}, {"contestId": 404, "index": "D", "solvedCount": 2279}, {"contestId": 403, "index": "D", "solvedCount": 1139}, {"contestId": 402, "index": "D", "solvedCount": 2662}, {"contestId": 401, "index": "D", "solvedCount": 4307}, {"contestId": 398, "index": "B", "solvedCount": 1085}, {"contestId": 392, "index": "B", "solvedCount": 973}, {"contestId": 391, "index": "F1", "solvedCount": 196}, {"contestId": 386, "index": "D", "solvedCount": 490}, {"contestId": 386, "index": "C", "solvedCount": 860}, {"contestId": 385, "index": "D", "solvedCount": 842}, {"contestId": 385, "index": "C", "solvedCount": 10069}, {"contestId": 383, "index": "E", "solvedCount": 3435}, {"contestId": 383, "index": "D", "solvedCount": 3127}, {"contestId": 382, "index": "E", "solvedCount": 394}, {"contestId": 379, "index": "G", "solvedCount": 147}, {"contestId": 379, "index": "D", "solvedCount": 1614}, {"contestId": 377, "index": "E", "solvedCount": 493}, {"contestId": 377, "index": "C", "solvedCount": 1176}, {"contestId": 375, "index": "E", "solvedCount": 445}, {"contestId": 375, "index": "B", "solvedCount": 5183}, {"contestId": 374, "index": "D", "solvedCount": 915}, {"contestId": 374, "index": "C", "solvedCount": 2821}, {"contestId": 372, "index": "C", "solvedCount": 4445}, {"contestId": 372, "index": "B", "solvedCount": 2702}, {"contestId": 370, "index": "E", "solvedCount": 303}, {"contestId": 369, "index": "D", "solvedCount": 1209}, {"contestId": 368, "index": "B", "solvedCount": 45193}, {"contestId": 367, "index": "E", "solvedCount": 1215}, {"contestId": 366, "index": "C", "solvedCount": 5161}, {"contestId": 364, "index": "B", "solvedCount": 1197}, {"contestId": 363, "index": "B", "solvedCount": 57998}, {"contestId": 362, "index": "C", "solvedCount": 1858}, {"contestId": 360, "index": "C", "solvedCount": 1130}, {"contestId": 360, "index": "B", "solvedCount": 3156}, {"contestId": 359, "index": "B", "solvedCount": 8278}, {"contestId": 358, "index": "D", "solvedCount": 4175}, {"contestId": 356, "index": "E", "solvedCount": 424}, {"contestId": 356, "index": "D", "solvedCount": 997}, {"contestId": 354, "index": "E", "solvedCount": 886}, {"contestId": 354, "index": "D", "solvedCount": 476}, {"contestId": 354, "index": "C", "solvedCount": 3156}, {"contestId": 354, "index": "B", "solvedCount": 467}, {"contestId": 353, "index": "E", "solvedCount": 623}, {"contestId": 353, "index": "D", "solvedCount": 3001}, {"contestId": 351, "index": "C", "solvedCount": 572}, {"contestId": 351, "index": "B", "solvedCount": 2434}, {"contestId": 351, "index": "A", "solvedCount": 2964}, {"contestId": 349, "index": "B", "solvedCount": 14373}, {"contestId": 348, "index": "E", "solvedCount": 461}, {"contestId": 348, "index": "D", "solvedCount": 1882}, {"contestId": 346, "index": "D", "solvedCount": 781}, {"contestId": 346, "index": "B", "solvedCount": 3772}, {"contestId": 342, "index": "D", "solvedCount": 524}, {"contestId": 340, "index": "D", "solvedCount": 7422}, {"contestId": 339, "index": "C", "solvedCount": 8476}, {"contestId": 337, "index": "D", "solvedCount": 6393}, {"contestId": 336, "index": "E", "solvedCount": 122}, {"contestId": 335, "index": "F", "solvedCount": 690}, {"contestId": 335, "index": "E", "solvedCount": 232}, {"contestId": 335, "index": "D", "solvedCount": 333}, {"contestId": 335, "index": "B", "solvedCount": 2215}, {"contestId": 332, "index": "E", "solvedCount": 312}, {"contestId": 332, "index": "B", "solvedCount": 8240}, {"contestId": 331, "index": "E2", "solvedCount": 226}, {"contestId": 331, "index": "C3", "solvedCount": 522}, {"contestId": 331, "index": "C2", "solvedCount": 406}, {"contestId": 331, "index": "C1", "solvedCount": 6531}, {"contestId": 327, "index": "E", "solvedCount": 1460}, {"contestId": 327, "index": "A", "solvedCount": 44862}, {"contestId": 321, "index": "E", "solvedCount": 5399}, {"contestId": 321, "index": "D", "solvedCount": 578}, {"contestId": 321, "index": "B", "solvedCount": 3322}, {"contestId": 319, "index": "C", "solvedCount": 5710}, {"contestId": 317, "index": "D", "solvedCount": 1113}, {"contestId": 316, "index": "D3", "solvedCount": 619}, {"contestId": 316, "index": "D2", "solvedCount": 472}, {"contestId": 316, "index": "D1", "solvedCount": 544}, {"contestId": 316, "index": "B2", "solvedCount": 1640}, {"contestId": 314, "index": "E", "solvedCount": 380}, {"contestId": 314, "index": "C", "solvedCount": 1881}, {"contestId": 313, "index": "D", "solvedCount": 1560}, {"contestId": 313, "index": "B", "solvedCount": 47992}, {"contestId": 311, "index": "B", "solvedCount": 3725}, {"contestId": 309, "index": "B", "solvedCount": 738}, {"contestId": 303, "index": "E", "solvedCount": 344}, {"contestId": 301, "index": "E", "solvedCount": 388}, {"contestId": 300, "index": "D", "solvedCount": 779}, {"contestId": 296, "index": "B", "solvedCount": 2402}, {"contestId": 295, "index": "D", "solvedCount": 675}, {"contestId": 295, "index": "C", "solvedCount": 1788}, {"contestId": 295, "index": "B", "solvedCount": 15441}, {"contestId": 294, "index": "E", "solvedCount": 999}, {"contestId": 294, "index": "B", "solvedCount": 4716}, {"contestId": 292, "index": "D", "solvedCount": 2508}, {"contestId": 289, "index": "B", "solvedCount": 18041}, {"contestId": 288, "index": "E", "solvedCount": 308}, {"contestId": 285, "index": "E", "solvedCount": 1067}, {"contestId": 285, "index": "D", "solvedCount": 1596}, {"contestId": 283, "index": "D", "solvedCount": 565}, {"contestId": 283, "index": "C", "solvedCount": 1487}, {"contestId": 283, "index": "B", "solvedCount": 3727}, {"contestId": 282, "index": "D", "solvedCount": 1492}, {"contestId": 280, "index": "E", "solvedCount": 228}, {"contestId": 279, "index": "E", "solvedCount": 1485}, {"contestId": 279, "index": "D", "solvedCount": 794}, {"contestId": 279, "index": "C", "solvedCount": 8493}, {"contestId": 277, "index": "D", "solvedCount": 351}, {"contestId": 276, "index": "D", "solvedCount": 14700}, {"contestId": 274, "index": "B", "solvedCount": 5163}, {"contestId": 273, "index": "E", "solvedCount": 378}, {"contestId": 273, "index": "D", "solvedCount": 431}, {"contestId": 269, "index": "D", "solvedCount": 472}, {"contestId": 269, "index": "B", "solvedCount": 6541}, {"contestId": 268, "index": "D", "solvedCount": 521}, {"contestId": 264, "index": "E", "solvedCount": 446}, {"contestId": 264, "index": "D", "solvedCount": 430}, {"contestId": 264, "index": "C", "solvedCount": 3068}, {"contestId": 264, "index": "B", "solvedCount": 10954}, {"contestId": 263, "index": "E", "solvedCount": 422}, {"contestId": 261, "index": "E", "solvedCount": 427}, {"contestId": 261, "index": "D", "solvedCount": 596}, {"contestId": 261, "index": "C", "solvedCount": 789}, {"contestId": 261, "index": "B", "solvedCount": 1440}, {"contestId": 258, "index": "D", "solvedCount": 1322}, {"contestId": 258, "index": "C", "solvedCount": 1835}, {"contestId": 258, "index": "B", "solvedCount": 1484}, {"contestId": 256, "index": "D", "solvedCount": 268}, {"contestId": 255, "index": "C", "solvedCount": 4824}, {"contestId": 254, "index": "E", "solvedCount": 703}, {"contestId": 253, "index": "B", "solvedCount": 11243}, {"contestId": 251, "index": "E", "solvedCount": 181}, {"contestId": 251, "index": "C", "solvedCount": 1066}, {"contestId": 249, "index": "D", "solvedCount": 479}, {"contestId": 248, "index": "E", "solvedCount": 607}, {"contestId": 246, "index": "E", "solvedCount": 3675}, {"contestId": 245, "index": "H", "solvedCount": 7481}, {"contestId": 243, "index": "D", "solvedCount": 225}, {"contestId": 238, "index": "E", "solvedCount": 406}, {"contestId": 238, "index": "C", "solvedCount": 1286}, {"contestId": 235, "index": "E", "solvedCount": 806}, {"contestId": 235, "index": "B", "solvedCount": 3736}, {"contestId": 234, "index": "F", "solvedCount": 1827}, {"contestId": 234, "index": "C", "solvedCount": 5665}, {"contestId": 232, "index": "E", "solvedCount": 722}, {"contestId": 232, "index": "C", "solvedCount": 297}, {"contestId": 232, "index": "B", "solvedCount": 1503}, {"contestId": 231, "index": "E", "solvedCount": 2014}, {"contestId": 229, "index": "E", "solvedCount": 482}, {"contestId": 229, "index": "D", "solvedCount": 2364}, {"contestId": 228, "index": "C", "solvedCount": 477}, {"contestId": 225, "index": "C", "solvedCount": 9592}, {"contestId": 223, "index": "B", "solvedCount": 1860}, {"contestId": 222, "index": "E", "solvedCount": 3120}, {"contestId": 219, "index": "D", "solvedCount": 10263}, {"contestId": 219, "index": "C", "solvedCount": 6811}, {"contestId": 217, "index": "C", "solvedCount": 349}, {"contestId": 215, "index": "E", "solvedCount": 593}, {"contestId": 213, "index": "C", "solvedCount": 2987}, {"contestId": 213, "index": "B", "solvedCount": 1813}, {"contestId": 212, "index": "E", "solvedCount": 1918}, {"contestId": 212, "index": "C", "solvedCount": 419}, {"contestId": 209, "index": "A", "solvedCount": 2542}, {"contestId": 208, "index": "C", "solvedCount": 1965}, {"contestId": 208, "index": "B", "solvedCount": 1392}, {"contestId": 204, "index": "D", "solvedCount": 593}, {"contestId": 204, "index": "A", "solvedCount": 6017}, {"contestId": 201, "index": "D", "solvedCount": 426}, {"contestId": 201, "index": "C", "solvedCount": 1400}, {"contestId": 201, "index": "A", "solvedCount": 3043}, {"contestId": 191, "index": "A", "solvedCount": 4187}, {"contestId": 189, "index": "A", "solvedCount": 71947}, {"contestId": 187, "index": "B", "solvedCount": 2123}, {"contestId": 185, "index": "C", "solvedCount": 143}, {"contestId": 183, "index": "D", "solvedCount": 445}, {"contestId": 182, "index": "E", "solvedCount": 1519}, {"contestId": 180, "index": "E", "solvedCount": 1919}, {"contestId": 180, "index": "C", "solvedCount": 7821}, {"contestId": 178, "index": "F2", "solvedCount": 362}, {"contestId": 176, "index": "D", "solvedCount": 344}, {"contestId": 176, "index": "B", "solvedCount": 1958}, {"contestId": 175, "index": "E", "solvedCount": 274}, {"contestId": 175, "index": "D", "solvedCount": 306}, {"contestId": 174, "index": "B", "solvedCount": 2351}, {"contestId": 173, "index": "C", "solvedCount": 1028}, {"contestId": 167, "index": "B", "solvedCount": 2254}, {"contestId": 166, "index": "E", "solvedCount": 22892}, {"contestId": 166, "index": "D", "solvedCount": 379}, {"contestId": 165, "index": "E", "solvedCount": 7558}, {"contestId": 165, "index": "C", "solvedCount": 12903}, {"contestId": 163, "index": "E", "solvedCount": 1869}, {"contestId": 163, "index": "A", "solvedCount": 2786}, {"contestId": 161, "index": "E", "solvedCount": 483}, {"contestId": 161, "index": "D", "solvedCount": 16328}, {"contestId": 159, "index": "D", "solvedCount": 4483}, {"contestId": 158, "index": "E", "solvedCount": 1477}, {"contestId": 156, "index": "E", "solvedCount": 173}, {"contestId": 156, "index": "C", "solvedCount": 2485}, {"contestId": 152, "index": "E", "solvedCount": 501}, {"contestId": 150, "index": "D", "solvedCount": 642}, {"contestId": 149, "index": "D", "solvedCount": 4101}, {"contestId": 148, "index": "E", "solvedCount": 4347}, {"contestId": 148, "index": "D", "solvedCount": 7727}, {"contestId": 145, "index": "C", "solvedCount": 1988}, {"contestId": 142, "index": "C", "solvedCount": 944}, {"contestId": 141, "index": "E", "solvedCount": 1181}, {"contestId": 140, "index": "E", "solvedCount": 994}, {"contestId": 138, "index": "E", "solvedCount": 178}, {"contestId": 138, "index": "D", "solvedCount": 515}, {"contestId": 137, "index": "D", "solvedCount": 1614}, {"contestId": 132, "index": "D", "solvedCount": 665}, {"contestId": 132, "index": "C", "solvedCount": 2394}, {"contestId": 128, "index": "C", "solvedCount": 3045}, {"contestId": 126, "index": "D", "solvedCount": 869}, {"contestId": 126, "index": "B", "solvedCount": 21202}, {"contestId": 123, "index": "E", "solvedCount": 756}, {"contestId": 123, "index": "C", "solvedCount": 635}, {"contestId": 120, "index": "F", "solvedCount": 3802}, {"contestId": 119, "index": "C", "solvedCount": 978}, {"contestId": 118, "index": "D", "solvedCount": 18452}, {"contestId": 115, "index": "E", "solvedCount": 1824}, {"contestId": 115, "index": "D", "solvedCount": 416}, {"contestId": 111, "index": "D", "solvedCount": 812}, {"contestId": 111, "index": "C", "solvedCount": 1439}, {"contestId": 109, "index": "C", "solvedCount": 3724}, {"contestId": 107, "index": "D", "solvedCount": 444}, {"contestId": 107, "index": "C", "solvedCount": 411}, {"contestId": 107, "index": "B", "solvedCount": 3691}, {"contestId": 106, "index": "C", "solvedCount": 6298}, {"contestId": 101, "index": "E", "solvedCount": 568}, {"contestId": 101, "index": "D", "solvedCount": 727}, {"contestId": 101, "index": "B", "solvedCount": 2746}, {"contestId": 98, "index": "E", "solvedCount": 501}, {"contestId": 95, "index": "E", "solvedCount": 1621}, {"contestId": 95, "index": "D", "solvedCount": 466}, {"contestId": 95, "index": "B", "solvedCount": 1279}, {"contestId": 93, "index": "E", "solvedCount": 512}, {"contestId": 93, "index": "D", "solvedCount": 365}, {"contestId": 89, "index": "B", "solvedCount": 531}, {"contestId": 87, "index": "D", "solvedCount": 934}, {"contestId": 87, "index": "C", "solvedCount": 1489}, {"contestId": 86, "index": "C", "solvedCount": 770}, {"contestId": 83, "index": "E", "solvedCount": 490}, {"contestId": 83, "index": "D", "solvedCount": 932}, {"contestId": 82, "index": "D", "solvedCount": 2132}, {"contestId": 81, "index": "E", "solvedCount": 369}, {"contestId": 79, "index": "D", "solvedCount": 1226}, {"contestId": 79, "index": "C", "solvedCount": 1887}, {"contestId": 78, "index": "C", "solvedCount": 1954}, {"contestId": 77, "index": "D", "solvedCount": 336}, {"contestId": 77, "index": "C", "solvedCount": 1064}, {"contestId": 76, "index": "F", "solvedCount": 687}, {"contestId": 76, "index": "D", "solvedCount": 2140}, {"contestId": 76, "index": "C", "solvedCount": 344}, {"contestId": 75, "index": "D", "solvedCount": 1890}, {"contestId": 74, "index": "B", "solvedCount": 1583}, {"contestId": 73, "index": "C", "solvedCount": 2196}, {"contestId": 72, "index": "G", "solvedCount": 2429}, {"contestId": 71, "index": "E", "solvedCount": 790}, {"contestId": 71, "index": "C", "solvedCount": 6855}, {"contestId": 70, "index": "E", "solvedCount": 539}, {"contestId": 69, "index": "D", "solvedCount": 1040}, {"contestId": 68, "index": "D", "solvedCount": 487}, {"contestId": 67, "index": "D", "solvedCount": 1556}, {"contestId": 67, "index": "C", "solvedCount": 694}, {"contestId": 67, "index": "A", "solvedCount": 2193}, {"contestId": 66, "index": "E", "solvedCount": 793}, {"contestId": 63, "index": "E", "solvedCount": 789}, {"contestId": 62, "index": "E", "solvedCount": 241}, {"contestId": 58, "index": "E", "solvedCount": 419}, {"contestId": 57, "index": "D", "solvedCount": 351}, {"contestId": 56, "index": "D", "solvedCount": 1814}, {"contestId": 55, "index": "D", "solvedCount": 4140}, {"contestId": 54, "index": "D", "solvedCount": 577}, {"contestId": 54, "index": "C", "solvedCount": 1394}, {"contestId": 53, "index": "E", "solvedCount": 1074}, {"contestId": 51, "index": "F", "solvedCount": 727}, {"contestId": 50, "index": "D", "solvedCount": 654}, {"contestId": 49, "index": "E", "solvedCount": 704}, {"contestId": 49, "index": "D", "solvedCount": 1976}, {"contestId": 48, "index": "G", "solvedCount": 285}, {"contestId": 48, "index": "E", "solvedCount": 614}, {"contestId": 46, "index": "E", "solvedCount": 1033}, {"contestId": 45, "index": "B", "solvedCount": 296}, {"contestId": 44, "index": "H", "solvedCount": 1797}, {"contestId": 44, "index": "E", "solvedCount": 5501}, {"contestId": 41, "index": "D", "solvedCount": 2576}, {"contestId": 39, "index": "E", "solvedCount": 913}, {"contestId": 39, "index": "C", "solvedCount": 629}, {"contestId": 38, "index": "H", "solvedCount": 324}, {"contestId": 38, "index": "F", "solvedCount": 408}, {"contestId": 38, "index": "E", "solvedCount": 2702}, {"contestId": 37, "index": "D", "solvedCount": 445}, {"contestId": 35, "index": "D", "solvedCount": 3540}, {"contestId": 31, "index": "E", "solvedCount": 1167}, {"contestId": 30, "index": "C", "solvedCount": 2075}, {"contestId": 28, "index": "D", "solvedCount": 629}, {"contestId": 28, "index": "C", "solvedCount": 1103}, {"contestId": 27, "index": "E", "solvedCount": 4479}, {"contestId": 24, "index": "D", "solvedCount": 2238}, {"contestId": 23, "index": "E", "solvedCount": 652}, {"contestId": 22, "index": "B", "solvedCount": 4433}, {"contestId": 21, "index": "C", "solvedCount": 2253}, {"contestId": 19, "index": "B", "solvedCount": 5207}, {"contestId": 18, "index": "E", "solvedCount": 1161}, {"contestId": 18, "index": "D", "solvedCount": 1108}, {"contestId": 17, "index": "C", "solvedCount": 958}, {"contestId": 16, "index": "E", "solvedCount": 5581}, {"contestId": 15, "index": "E", "solvedCount": 607}, {"contestId": 14, "index": "E", "solvedCount": 1786}, {"contestId": 14, "index": "D", "solvedCount": 4763}, {"contestId": 13, "index": "D", "solvedCount": 694}, {"contestId": 13, "index": "C", "solvedCount": 4955}, {"contestId": 11, "index": "E", "solvedCount": 379}, {"contestId": 11, "index": "D", "solvedCount": 5363}, {"contestId": 10, "index": "D", "solvedCount": 4801}, {"contestId": 10, "index": "B", "solvedCount": 1851}, {"contestId": 9, "index": "D", "solvedCount": 4069}, {"contestId": 8, "index": "E", "solvedCount": 716}, {"contestId": 8, "index": "C", "solvedCount": 3773}, {"contestId": 7, "index": "E", "solvedCount": 737}, {"contestId": 6, "index": "D", "solvedCount": 2079}, {"contestId": 5, "index": "C", "solvedCount": 15168}, {"contestId": 4, "index": "D", "solvedCount": 10952}, {"contestId": 2, "index": "B", "solvedCount": 11518}]}}